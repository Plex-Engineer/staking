import{fromRpcSig as e}from"ethereumjs-util";const t=require("ethereum-cryptography/secp256k1"),r=require("ethereumjs-util/dist/bytes"),n=require("ethereumjs-util/dist/types");function u(u,i){let o=e(u);return function(e,u,i,o,s){const c=Buffer.concat([r.setLengthLeft(i,32),r.setLengthLeft(o,32)],64),f=function(e,t){return n.toType(e,n.TypeOutput.BN).subn(27)}(u);if(!function(e){return 0==e||1==e}(f))throw new Error("Invalid signature v value");const a=t.ecdsaRecover(c,f.toNumber(),e);return Buffer.from(a).toString("base64")}(i,o.v,o.r,o.s)}function i(e){let t=e.match(/.{1,2}/g);return null===t?new Uint8Array:new Uint8Array(t.map(e=>parseInt(e,16)))}export{i as fromHexString,u as signatureToPubkey};
//# sourceMappingURL=converter.modern.js.map
