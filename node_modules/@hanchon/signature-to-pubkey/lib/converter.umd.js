!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("ethereumjs-util")):"function"==typeof define&&define.amd?define(["exports","ethereumjs-util"],t):t((e||self).signatureToPubkey={},e.ethereumjsUtil)}(this,function(e,t){const r=require("ethereum-cryptography/secp256k1"),n=require("ethereumjs-util/dist/bytes"),u=require("ethereumjs-util/dist/types");e.fromHexString=function(e){let t=e.match(/.{1,2}/g);return null===t?new Uint8Array:new Uint8Array(t.map(e=>parseInt(e,16)))},e.signatureToPubkey=function(e,i){let o=t.fromRpcSig(e);return function(e,t,i,o,s){const f=Buffer.concat([n.setLengthLeft(i,32),n.setLengthLeft(o,32)],64),c=function(e,t){return u.toType(e,u.TypeOutput.BN).subn(27)}(t);if(!function(e){return 0==e||1==e}(c))throw new Error("Invalid signature v value");const a=r.ecdsaRecover(f,c.toNumber(),e);return Buffer.from(a).toString("base64")}(i,o.v,o.r,o.s)}});
//# sourceMappingURL=converter.umd.js.map
