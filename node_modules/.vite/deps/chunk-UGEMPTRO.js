import {
  __commonJS
} from "./chunk-ACCAMVX6.js";

// node_modules/@tharsis/eip712/dist/messages/erc20/msgConvertCoin.js
var require_msgConvertCoin = __commonJS({
  "node_modules/@tharsis/eip712/dist/messages/erc20/msgConvertCoin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createMsgConvertCoin = exports.MSG_CONVERT_COIN_TYPES = void 0;
    exports.MSG_CONVERT_COIN_TYPES = {
      MsgValue: [
        { name: "coin", type: "TypeCoin" },
        { name: "receiver", type: "string" },
        { name: "sender", type: "string" }
      ],
      TypeCoin: [
        { name: "denom", type: "string" },
        { name: "amount", type: "string" }
      ]
    };
    function createMsgConvertCoin(denom, amount, receiver, sender) {
      return {
        type: "evmos/MsgConvertCoin",
        value: {
          coin: {
            denom,
            amount
          },
          receiver,
          sender
        }
      };
    }
    exports.createMsgConvertCoin = createMsgConvertCoin;
  }
});

// node_modules/@tharsis/eip712/dist/messages/erc20/msgConvertERC20.js
var require_msgConvertERC20 = __commonJS({
  "node_modules/@tharsis/eip712/dist/messages/erc20/msgConvertERC20.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createMsgConvertERC20 = exports.MSG_CONVERT_ERC20_TYPES = void 0;
    exports.MSG_CONVERT_ERC20_TYPES = {
      MsgValue: [
        { name: "contract_address", type: "string" },
        { name: "amount", type: "string" },
        { name: "receiver", type: "string" },
        { name: "sender", type: "string" }
      ]
    };
    function createMsgConvertERC20(contractAddress, amount, receiver, sender) {
      return {
        type: "evmos/MsgConvertERC20",
        value: {
          contract_address: contractAddress,
          amount,
          receiver,
          sender
        }
      };
    }
    exports.createMsgConvertERC20 = createMsgConvertERC20;
  }
});

// node_modules/@tharsis/eip712/dist/messages/base.js
var require_base = __commonJS({
  "node_modules/@tharsis/eip712/dist/messages/base.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.generateFee = exports.generateTypes = exports.generateMessage = exports.generateMessageWithMultipleTransactions = exports.createEIP712 = void 0;
    function createEIP712(types, chainId, message) {
      return {
        types,
        primaryType: "Tx",
        domain: {
          name: "Cosmos Web3",
          version: "1.0.0",
          chainId,
          verifyingContract: "cosmos",
          salt: "0"
        },
        message
      };
    }
    exports.createEIP712 = createEIP712;
    function generateMessageWithMultipleTransactions(accountNumber, sequence, chainCosmosId, memo, fee, msgs) {
      return {
        account_number: accountNumber,
        chain_id: chainCosmosId,
        fee,
        memo,
        msgs,
        sequence
      };
    }
    exports.generateMessageWithMultipleTransactions = generateMessageWithMultipleTransactions;
    function generateMessage(accountNumber, sequence, chainCosmosId, memo, fee, msg) {
      return generateMessageWithMultipleTransactions(accountNumber, sequence, chainCosmosId, memo, fee, [msg]);
    }
    exports.generateMessage = generateMessage;
    function generateTypes(msgValues) {
      const types = {
        EIP712Domain: [
          { name: "name", type: "string" },
          { name: "version", type: "string" },
          { name: "chainId", type: "uint256" },
          { name: "verifyingContract", type: "string" },
          { name: "salt", type: "string" }
        ],
        Tx: [
          { name: "account_number", type: "string" },
          { name: "chain_id", type: "string" },
          { name: "fee", type: "Fee" },
          { name: "memo", type: "string" },
          { name: "msgs", type: "Msg[]" },
          { name: "sequence", type: "string" }
        ],
        Fee: [
          { name: "feePayer", type: "string" },
          { name: "amount", type: "Coin[]" },
          { name: "gas", type: "string" }
        ],
        Coin: [
          { name: "denom", type: "string" },
          { name: "amount", type: "string" }
        ],
        Msg: [
          { name: "type", type: "string" },
          { name: "value", type: "MsgValue" }
        ]
      };
      Object.assign(types, msgValues);
      return types;
    }
    exports.generateTypes = generateTypes;
    function generateFee(amount, denom, gas, feePayer) {
      return {
        amount: [
          {
            amount,
            denom
          }
        ],
        gas,
        feePayer
      };
    }
    exports.generateFee = generateFee;
  }
});

// node_modules/@tharsis/eip712/dist/messages/gov.js
var require_gov = __commonJS({
  "node_modules/@tharsis/eip712/dist/messages/gov.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createMsgVote = exports.MSG_VOTE_TYPES = void 0;
    exports.MSG_VOTE_TYPES = {
      MsgValue: [
        { name: "proposal_id", type: "uint64" },
        { name: "voter", type: "string" },
        { name: "option", type: "int32" }
      ]
    };
    function createMsgVote(proposalId, option, sender) {
      return {
        type: "cosmos-sdk/MsgVote",
        value: {
          proposal_id: proposalId,
          voter: sender,
          option
        }
      };
    }
    exports.createMsgVote = createMsgVote;
  }
});

// node_modules/@tharsis/eip712/dist/messages/ibcMsgTransfer.js
var require_ibcMsgTransfer = __commonJS({
  "node_modules/@tharsis/eip712/dist/messages/ibcMsgTransfer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createIBCMsgTransfer = exports.IBC_MSG_TRANSFER_TYPES = void 0;
    exports.IBC_MSG_TRANSFER_TYPES = {
      MsgValue: [
        { name: "source_port", type: "string" },
        { name: "source_channel", type: "string" },
        { name: "token", type: "TypeToken" },
        { name: "sender", type: "string" },
        { name: "receiver", type: "string" },
        { name: "timeout_height", type: "TypeTimeoutHeight" },
        { name: "timeout_timestamp", type: "uint64" }
      ],
      TypeToken: [
        { name: "denom", type: "string" },
        { name: "amount", type: "string" }
      ],
      TypeTimeoutHeight: [
        { name: "revision_number", type: "uint64" },
        { name: "revision_height", type: "uint64" }
      ]
    };
    function createIBCMsgTransfer(receiver, sender, sourceChannel, sourcePort, revisionHeight, revisionNumber, timeoutTimestamp, amount, denom) {
      return {
        type: "cosmos-sdk/MsgTransfer",
        value: {
          receiver,
          sender,
          source_channel: sourceChannel,
          source_port: sourcePort,
          timeout_height: {
            revision_height: revisionHeight.toString(),
            revision_number: revisionNumber.toString()
          },
          timeout_timestamp: timeoutTimestamp,
          token: {
            amount,
            denom
          }
        }
      };
    }
    exports.createIBCMsgTransfer = createIBCMsgTransfer;
  }
});

// node_modules/@tharsis/eip712/dist/messages/msgsend.js
var require_msgsend = __commonJS({
  "node_modules/@tharsis/eip712/dist/messages/msgsend.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createMsgSend = exports.MSG_SEND_TYPES = void 0;
    exports.MSG_SEND_TYPES = {
      MsgValue: [
        { name: "from_address", type: "string" },
        { name: "to_address", type: "string" },
        { name: "amount", type: "TypeAmount[]" }
      ],
      TypeAmount: [
        { name: "denom", type: "string" },
        { name: "amount", type: "string" }
      ]
    };
    function createMsgSend(amount, denom, fromAddress, toAddress) {
      return {
        type: "cosmos-sdk/MsgSend",
        value: {
          amount: [
            {
              amount,
              denom
            }
          ],
          from_address: fromAddress,
          to_address: toAddress
        }
      };
    }
    exports.createMsgSend = createMsgSend;
  }
});

// node_modules/@tharsis/eip712/dist/messages/staking.js
var require_staking = __commonJS({
  "node_modules/@tharsis/eip712/dist/messages/staking.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createMsgWithdrawValidatorCommission = exports.MSG_WITHDRAW_VALIDATOR_COMMISSION_TYPES = exports.createMsgWithdrawDelegatorReward = exports.MSG_WITHDRAW_DELEGATOR_REWARD_TYPES = exports.createMsgUndelegate = exports.MSG_UNDELEGATE_TYPES = exports.createMsgBeginRedelegate = exports.MSG_BEGIN_REDELEGATE_TYPES = exports.createMsgDelegate = exports.MSG_DELEGATE_TYPES = void 0;
    exports.MSG_DELEGATE_TYPES = {
      MsgValue: [
        { name: "delegator_address", type: "string" },
        { name: "validator_address", type: "string" },
        { name: "amount", type: "TypeAmount" }
      ],
      TypeAmount: [
        { name: "denom", type: "string" },
        { name: "amount", type: "string" }
      ]
    };
    function createMsgDelegate(delegatorAddress, validatorAddress, amount, denom) {
      return {
        type: "cosmos-sdk/MsgDelegate",
        value: {
          amount: {
            amount,
            denom
          },
          delegator_address: delegatorAddress,
          validator_address: validatorAddress
        }
      };
    }
    exports.createMsgDelegate = createMsgDelegate;
    exports.MSG_BEGIN_REDELEGATE_TYPES = {
      MsgValue: [
        { name: "delegator_address", type: "string" },
        { name: "validator_src_address", type: "string" },
        { name: "validator_dst_address", type: "string" },
        { name: "amount", type: "TypeAmount" }
      ],
      TypeAmount: [
        { name: "denom", type: "string" },
        { name: "amount", type: "string" }
      ]
    };
    function createMsgBeginRedelegate(delegatorAddress, validatorSrcAddress, validatorDstAddress, amount, denom) {
      return {
        type: "cosmos-sdk/MsgBeginRedelegate",
        value: {
          amount: {
            amount,
            denom
          },
          delegator_address: delegatorAddress,
          validator_src_address: validatorSrcAddress,
          validator_dst_address: validatorDstAddress
        }
      };
    }
    exports.createMsgBeginRedelegate = createMsgBeginRedelegate;
    exports.MSG_UNDELEGATE_TYPES = {
      MsgValue: [
        { name: "delegator_address", type: "string" },
        { name: "validator_address", type: "string" },
        { name: "amount", type: "TypeAmount" }
      ],
      TypeAmount: [
        { name: "denom", type: "string" },
        { name: "amount", type: "string" }
      ]
    };
    function createMsgUndelegate(delegatorAddress, validatorAddress, amount, denom) {
      return {
        type: "cosmos-sdk/MsgUndelegate",
        value: {
          amount: {
            amount,
            denom
          },
          delegator_address: delegatorAddress,
          validator_address: validatorAddress
        }
      };
    }
    exports.createMsgUndelegate = createMsgUndelegate;
    exports.MSG_WITHDRAW_DELEGATOR_REWARD_TYPES = {
      MsgValue: [
        { name: "delegator_address", type: "string" },
        { name: "validator_address", type: "string" }
      ]
    };
    function createMsgWithdrawDelegatorReward(delegatorAddress, validatorAddress) {
      return {
        type: "cosmos-sdk/MsgWithdrawDelegationReward",
        value: {
          delegator_address: delegatorAddress,
          validator_address: validatorAddress
        }
      };
    }
    exports.createMsgWithdrawDelegatorReward = createMsgWithdrawDelegatorReward;
    exports.MSG_WITHDRAW_VALIDATOR_COMMISSION_TYPES = {
      MsgValue: [{ name: "validator_address", type: "string" }]
    };
    function createMsgWithdrawValidatorCommission(validatorAddress) {
      return {
        type: "cosmos-sdk/MsgWithdrawValidatorCommission",
        value: {
          validator_address: validatorAddress
        }
      };
    }
    exports.createMsgWithdrawValidatorCommission = createMsgWithdrawValidatorCommission;
  }
});

// node_modules/@tharsis/eip712/dist/messages/validator.js
var require_validator = __commonJS({
  "node_modules/@tharsis/eip712/dist/messages/validator.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createMsgEditValidator = exports.MSG_EDIT_VALIDATOR_TYPES = void 0;
    var NOT_MODIFY = "[do-not-modify]";
    exports.MSG_EDIT_VALIDATOR_TYPES = {
      TypeDescription: [
        { name: "moniker", type: "string" },
        { name: "identity", type: "string" },
        { name: "website", type: "string" },
        { name: "security_contact", type: "string" },
        { name: "details", type: "string" }
      ],
      MsgValue: [
        { name: "description", type: "TypeDescription" },
        { name: "validator_address", type: "string" },
        { name: "commission_rate", type: "string" },
        { name: "min_self_delegation", type: "string" }
      ]
    };
    function createMsgEditValidator(moniker, identity, website, securityContact, details, validatorAddress, commissionRate, minSelfDelegation) {
      return {
        type: "cosmos-sdk/MsgEditValidator",
        value: {
          description: {
            moniker: moniker || NOT_MODIFY,
            identity: identity || NOT_MODIFY,
            website: website || NOT_MODIFY,
            security_contact: securityContact || NOT_MODIFY,
            details: details || NOT_MODIFY
          },
          validator_address: validatorAddress,
          commission_rate: commissionRate || "<nil>",
          min_self_delegation: minSelfDelegation || "<nil>"
        }
      };
    }
    exports.createMsgEditValidator = createMsgEditValidator;
  }
});

// node_modules/@tharsis/eip712/dist/index.js
var require_dist = __commonJS({
  "node_modules/@tharsis/eip712/dist/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_msgConvertCoin(), exports);
    __exportStar(require_msgConvertERC20(), exports);
    __exportStar(require_base(), exports);
    __exportStar(require_gov(), exports);
    __exportStar(require_ibcMsgTransfer(), exports);
    __exportStar(require_msgsend(), exports);
    __exportStar(require_staking(), exports);
    __exportStar(require_validator(), exports);
  }
});

export {
  require_dist
};
//# sourceMappingURL=chunk-UGEMPTRO.js.map
