import {
  require_buffer
} from "./chunk-MYFKNE7U.js";
import {
  __commonJS
} from "./chunk-ACCAMVX6.js";

// node_modules/google-protobuf/google-protobuf.js
var require_google_protobuf = __commonJS({
  "node_modules/google-protobuf/google-protobuf.js"(exports, module) {
    var $jscomp = $jscomp || {};
    $jscomp.scope = {};
    $jscomp.findInternal = function(a2, b2, c2) {
      a2 instanceof String && (a2 = String(a2));
      for (var d2 = a2.length, e2 = 0; e2 < d2; e2++) {
        var f2 = a2[e2];
        if (b2.call(c2, f2, e2, a2))
          return { i: e2, v: f2 };
      }
      return { i: -1, v: void 0 };
    };
    $jscomp.ASSUME_ES5 = false;
    $jscomp.ASSUME_NO_NATIVE_MAP = false;
    $jscomp.ASSUME_NO_NATIVE_SET = false;
    $jscomp.SIMPLE_FROUND_POLYFILL = false;
    $jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(a2, b2, c2) {
      a2 != Array.prototype && a2 != Object.prototype && (a2[b2] = c2.value);
    };
    $jscomp.getGlobal = function(a2) {
      return "undefined" != typeof window && window === a2 ? a2 : "undefined" != typeof global && null != global ? global : a2;
    };
    $jscomp.global = $jscomp.getGlobal(exports);
    $jscomp.polyfill = function(a2, b2, c2, d2) {
      if (b2) {
        c2 = $jscomp.global;
        a2 = a2.split(".");
        for (d2 = 0; d2 < a2.length - 1; d2++) {
          var e2 = a2[d2];
          e2 in c2 || (c2[e2] = {});
          c2 = c2[e2];
        }
        a2 = a2[a2.length - 1];
        d2 = c2[a2];
        b2 = b2(d2);
        b2 != d2 && null != b2 && $jscomp.defineProperty(c2, a2, { configurable: true, writable: true, value: b2 });
      }
    };
    $jscomp.polyfill("Array.prototype.findIndex", function(a2) {
      return a2 ? a2 : function(a3, c2) {
        return $jscomp.findInternal(this, a3, c2).i;
      };
    }, "es6", "es3");
    $jscomp.checkStringArgs = function(a2, b2, c2) {
      if (null == a2)
        throw new TypeError("The 'this' value for String.prototype." + c2 + " must not be null or undefined");
      if (b2 instanceof RegExp)
        throw new TypeError("First argument to String.prototype." + c2 + " must not be a regular expression");
      return a2 + "";
    };
    $jscomp.polyfill("String.prototype.endsWith", function(a2) {
      return a2 ? a2 : function(a3, c2) {
        var b2 = $jscomp.checkStringArgs(this, a3, "endsWith");
        a3 += "";
        void 0 === c2 && (c2 = b2.length);
        c2 = Math.max(0, Math.min(c2 | 0, b2.length));
        for (var e2 = a3.length; 0 < e2 && 0 < c2; )
          if (b2[--c2] != a3[--e2])
            return false;
        return 0 >= e2;
      };
    }, "es6", "es3");
    $jscomp.polyfill("Array.prototype.find", function(a2) {
      return a2 ? a2 : function(a3, c2) {
        return $jscomp.findInternal(this, a3, c2).v;
      };
    }, "es6", "es3");
    $jscomp.polyfill("String.prototype.startsWith", function(a2) {
      return a2 ? a2 : function(a3, c2) {
        var b2 = $jscomp.checkStringArgs(this, a3, "startsWith");
        a3 += "";
        var e2 = b2.length, f2 = a3.length;
        c2 = Math.max(0, Math.min(c2 | 0, b2.length));
        for (var g = 0; g < f2 && c2 < e2; )
          if (b2[c2++] != a3[g++])
            return false;
        return g >= f2;
      };
    }, "es6", "es3");
    $jscomp.polyfill("String.prototype.repeat", function(a2) {
      return a2 ? a2 : function(a3) {
        var b2 = $jscomp.checkStringArgs(this, null, "repeat");
        if (0 > a3 || 1342177279 < a3)
          throw new RangeError("Invalid count value");
        a3 |= 0;
        for (var d2 = ""; a3; )
          if (a3 & 1 && (d2 += b2), a3 >>>= 1)
            b2 += b2;
        return d2;
      };
    }, "es6", "es3");
    var COMPILED = true;
    var goog = goog || {};
    goog.global = exports || self;
    goog.isDef = function(a2) {
      return void 0 !== a2;
    };
    goog.isString = function(a2) {
      return "string" == typeof a2;
    };
    goog.isBoolean = function(a2) {
      return "boolean" == typeof a2;
    };
    goog.isNumber = function(a2) {
      return "number" == typeof a2;
    };
    goog.exportPath_ = function(a2, b2, c2) {
      a2 = a2.split(".");
      c2 = c2 || goog.global;
      a2[0] in c2 || "undefined" == typeof c2.execScript || c2.execScript("var " + a2[0]);
      for (var d2; a2.length && (d2 = a2.shift()); )
        !a2.length && goog.isDef(b2) ? c2[d2] = b2 : c2 = c2[d2] && c2[d2] !== Object.prototype[d2] ? c2[d2] : c2[d2] = {};
    };
    goog.define = function(a2, b2) {
      if (!COMPILED) {
        var c2 = goog.global.CLOSURE_UNCOMPILED_DEFINES, d2 = goog.global.CLOSURE_DEFINES;
        c2 && void 0 === c2.nodeType && Object.prototype.hasOwnProperty.call(c2, a2) ? b2 = c2[a2] : d2 && void 0 === d2.nodeType && Object.prototype.hasOwnProperty.call(d2, a2) && (b2 = d2[a2]);
      }
      return b2;
    };
    goog.FEATURESET_YEAR = 2012;
    goog.DEBUG = true;
    goog.LOCALE = "en";
    goog.TRUSTED_SITE = true;
    goog.STRICT_MODE_COMPATIBLE = false;
    goog.DISALLOW_TEST_ONLY_CODE = COMPILED && !goog.DEBUG;
    goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = false;
    goog.provide = function(a2) {
      if (goog.isInModuleLoader_())
        throw Error("goog.provide cannot be used within a module.");
      if (!COMPILED && goog.isProvided_(a2))
        throw Error('Namespace "' + a2 + '" already declared.');
      goog.constructNamespace_(a2);
    };
    goog.constructNamespace_ = function(a2, b2) {
      if (!COMPILED) {
        delete goog.implicitNamespaces_[a2];
        for (var c2 = a2; (c2 = c2.substring(0, c2.lastIndexOf("."))) && !goog.getObjectByName(c2); )
          goog.implicitNamespaces_[c2] = true;
      }
      goog.exportPath_(a2, b2);
    };
    goog.getScriptNonce = function(a2) {
      if (a2 && a2 != goog.global)
        return goog.getScriptNonce_(a2.document);
      null === goog.cspNonce_ && (goog.cspNonce_ = goog.getScriptNonce_(goog.global.document));
      return goog.cspNonce_;
    };
    goog.NONCE_PATTERN_ = /^[\w+/_-]+[=]{0,2}$/;
    goog.cspNonce_ = null;
    goog.getScriptNonce_ = function(a2) {
      return (a2 = a2.querySelector && a2.querySelector("script[nonce]")) && (a2 = a2.nonce || a2.getAttribute("nonce")) && goog.NONCE_PATTERN_.test(a2) ? a2 : "";
    };
    goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
    goog.module = function(a2) {
      if (!goog.isString(a2) || !a2 || -1 == a2.search(goog.VALID_MODULE_RE_))
        throw Error("Invalid module identifier");
      if (!goog.isInGoogModuleLoader_())
        throw Error("Module " + a2 + " has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
      if (goog.moduleLoaderState_.moduleName)
        throw Error("goog.module may only be called once per module.");
      goog.moduleLoaderState_.moduleName = a2;
      if (!COMPILED) {
        if (goog.isProvided_(a2))
          throw Error('Namespace "' + a2 + '" already declared.');
        delete goog.implicitNamespaces_[a2];
      }
    };
    goog.module.get = function(a2) {
      return goog.module.getInternal_(a2);
    };
    goog.module.getInternal_ = function(a2) {
      if (!COMPILED) {
        if (a2 in goog.loadedModules_)
          return goog.loadedModules_[a2].exports;
        if (!goog.implicitNamespaces_[a2])
          return a2 = goog.getObjectByName(a2), null != a2 ? a2 : null;
      }
      return null;
    };
    goog.ModuleType = { ES6: "es6", GOOG: "goog" };
    goog.moduleLoaderState_ = null;
    goog.isInModuleLoader_ = function() {
      return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();
    };
    goog.isInGoogModuleLoader_ = function() {
      return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.GOOG;
    };
    goog.isInEs6ModuleLoader_ = function() {
      if (goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.ES6)
        return true;
      var a2 = goog.global.$jscomp;
      return a2 ? "function" != typeof a2.getCurrentModulePath ? false : !!a2.getCurrentModulePath() : false;
    };
    goog.module.declareLegacyNamespace = function() {
      if (!COMPILED && !goog.isInGoogModuleLoader_())
        throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");
      if (!COMPILED && !goog.moduleLoaderState_.moduleName)
        throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");
      goog.moduleLoaderState_.declareLegacyNamespace = true;
    };
    goog.declareModuleId = function(a2) {
      if (!COMPILED) {
        if (!goog.isInEs6ModuleLoader_())
          throw Error("goog.declareModuleId may only be called from within an ES6 module");
        if (goog.moduleLoaderState_ && goog.moduleLoaderState_.moduleName)
          throw Error("goog.declareModuleId may only be called once per module.");
        if (a2 in goog.loadedModules_)
          throw Error('Module with namespace "' + a2 + '" already exists.');
      }
      if (goog.moduleLoaderState_)
        goog.moduleLoaderState_.moduleName = a2;
      else {
        var b2 = goog.global.$jscomp;
        if (!b2 || "function" != typeof b2.getCurrentModulePath)
          throw Error('Module with namespace "' + a2 + '" has been loaded incorrectly.');
        b2 = b2.require(b2.getCurrentModulePath());
        goog.loadedModules_[a2] = { exports: b2, type: goog.ModuleType.ES6, moduleId: a2 };
      }
    };
    goog.setTestOnly = function(a2) {
      if (goog.DISALLOW_TEST_ONLY_CODE)
        throw a2 = a2 || "", Error("Importing test-only code into non-debug environment" + (a2 ? ": " + a2 : "."));
    };
    goog.forwardDeclare = function(a2) {
    };
    COMPILED || (goog.isProvided_ = function(a2) {
      return a2 in goog.loadedModules_ || !goog.implicitNamespaces_[a2] && goog.isDefAndNotNull(goog.getObjectByName(a2));
    }, goog.implicitNamespaces_ = { "goog.module": true });
    goog.getObjectByName = function(a2, b2) {
      a2 = a2.split(".");
      b2 = b2 || goog.global;
      for (var c2 = 0; c2 < a2.length; c2++)
        if (b2 = b2[a2[c2]], !goog.isDefAndNotNull(b2))
          return null;
      return b2;
    };
    goog.globalize = function(a2, b2) {
      b2 = b2 || goog.global;
      for (var c2 in a2)
        b2[c2] = a2[c2];
    };
    goog.addDependency = function(a2, b2, c2, d2) {
      !COMPILED && goog.DEPENDENCIES_ENABLED && goog.debugLoader_.addDependency(a2, b2, c2, d2);
    };
    goog.ENABLE_DEBUG_LOADER = true;
    goog.logToConsole_ = function(a2) {
      goog.global.console && goog.global.console.error(a2);
    };
    goog.require = function(a2) {
      if (!COMPILED) {
        goog.ENABLE_DEBUG_LOADER && goog.debugLoader_.requested(a2);
        if (goog.isProvided_(a2)) {
          if (goog.isInModuleLoader_())
            return goog.module.getInternal_(a2);
        } else if (goog.ENABLE_DEBUG_LOADER) {
          var b2 = goog.moduleLoaderState_;
          goog.moduleLoaderState_ = null;
          try {
            goog.debugLoader_.load_(a2);
          } finally {
            goog.moduleLoaderState_ = b2;
          }
        }
        return null;
      }
    };
    goog.requireType = function(a2) {
      return {};
    };
    goog.basePath = "";
    goog.nullFunction = function() {
    };
    goog.abstractMethod = function() {
      throw Error("unimplemented abstract method");
    };
    goog.addSingletonGetter = function(a2) {
      a2.instance_ = void 0;
      a2.getInstance = function() {
        if (a2.instance_)
          return a2.instance_;
        goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = a2);
        return a2.instance_ = new a2();
      };
    };
    goog.instantiatedSingletons_ = [];
    goog.LOAD_MODULE_USING_EVAL = true;
    goog.SEAL_MODULE_EXPORTS = goog.DEBUG;
    goog.loadedModules_ = {};
    goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
    goog.TRANSPILE = "detect";
    goog.ASSUME_ES_MODULES_TRANSPILED = false;
    goog.TRANSPILE_TO_LANGUAGE = "";
    goog.TRANSPILER = "transpile.js";
    goog.hasBadLetScoping = null;
    goog.useSafari10Workaround = function() {
      if (null == goog.hasBadLetScoping) {
        try {
          var a = !eval('"use strict";let x = 1; function f() { return typeof x; };f() == "number";');
        } catch (b2) {
          a = false;
        }
        goog.hasBadLetScoping = a;
      }
      return goog.hasBadLetScoping;
    };
    goog.workaroundSafari10EvalBug = function(a2) {
      return "(function(){" + a2 + "\n;})();\n";
    };
    goog.loadModule = function(a2) {
      var b2 = goog.moduleLoaderState_;
      try {
        goog.moduleLoaderState_ = { moduleName: "", declareLegacyNamespace: false, type: goog.ModuleType.GOOG };
        if (goog.isFunction(a2))
          var c2 = a2.call(void 0, {});
        else if (goog.isString(a2))
          goog.useSafari10Workaround() && (a2 = goog.workaroundSafari10EvalBug(a2)), c2 = goog.loadModuleFromSource_.call(void 0, a2);
        else
          throw Error("Invalid module definition");
        var d2 = goog.moduleLoaderState_.moduleName;
        if (goog.isString(d2) && d2)
          goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(d2, c2) : goog.SEAL_MODULE_EXPORTS && Object.seal && "object" == typeof c2 && null != c2 && Object.seal(c2), goog.loadedModules_[d2] = { exports: c2, type: goog.ModuleType.GOOG, moduleId: goog.moduleLoaderState_.moduleName };
        else
          throw Error('Invalid module name "' + d2 + '"');
      } finally {
        goog.moduleLoaderState_ = b2;
      }
    };
    goog.loadModuleFromSource_ = function(a) {
      eval(a);
      return {};
    };
    goog.normalizePath_ = function(a2) {
      a2 = a2.split("/");
      for (var b2 = 0; b2 < a2.length; )
        "." == a2[b2] ? a2.splice(b2, 1) : b2 && ".." == a2[b2] && a2[b2 - 1] && ".." != a2[b2 - 1] ? a2.splice(--b2, 2) : b2++;
      return a2.join("/");
    };
    goog.loadFileSync_ = function(a2) {
      if (goog.global.CLOSURE_LOAD_FILE_SYNC)
        return goog.global.CLOSURE_LOAD_FILE_SYNC(a2);
      try {
        var b2 = new goog.global.XMLHttpRequest();
        b2.open("get", a2, false);
        b2.send();
        return 0 == b2.status || 200 == b2.status ? b2.responseText : null;
      } catch (c2) {
        return null;
      }
    };
    goog.transpile_ = function(a2, b2, c2) {
      var d2 = goog.global.$jscomp;
      d2 || (goog.global.$jscomp = d2 = {});
      var e2 = d2.transpile;
      if (!e2) {
        var f2 = goog.basePath + goog.TRANSPILER, g = goog.loadFileSync_(f2);
        if (g) {
          (function() {
            (0, eval)(g + "\n//# sourceURL=" + f2);
          }).call(goog.global);
          if (goog.global.$gwtExport && goog.global.$gwtExport.$jscomp && !goog.global.$gwtExport.$jscomp.transpile)
            throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: ' + JSON.stringify(goog.global.$gwtExport));
          goog.global.$jscomp.transpile = goog.global.$gwtExport.$jscomp.transpile;
          d2 = goog.global.$jscomp;
          e2 = d2.transpile;
        }
      }
      e2 || (e2 = d2.transpile = function(a3, b3) {
        goog.logToConsole_(b3 + " requires transpilation but no transpiler was found.");
        return a3;
      });
      return e2(a2, b2, c2);
    };
    goog.typeOf = function(a2) {
      var b2 = typeof a2;
      if ("object" == b2)
        if (a2) {
          if (a2 instanceof Array)
            return "array";
          if (a2 instanceof Object)
            return b2;
          var c2 = Object.prototype.toString.call(a2);
          if ("[object Window]" == c2)
            return "object";
          if ("[object Array]" == c2 || "number" == typeof a2.length && "undefined" != typeof a2.splice && "undefined" != typeof a2.propertyIsEnumerable && !a2.propertyIsEnumerable("splice"))
            return "array";
          if ("[object Function]" == c2 || "undefined" != typeof a2.call && "undefined" != typeof a2.propertyIsEnumerable && !a2.propertyIsEnumerable("call"))
            return "function";
        } else
          return "null";
      else if ("function" == b2 && "undefined" == typeof a2.call)
        return "object";
      return b2;
    };
    goog.isNull = function(a2) {
      return null === a2;
    };
    goog.isDefAndNotNull = function(a2) {
      return null != a2;
    };
    goog.isArray = function(a2) {
      return "array" == goog.typeOf(a2);
    };
    goog.isArrayLike = function(a2) {
      var b2 = goog.typeOf(a2);
      return "array" == b2 || "object" == b2 && "number" == typeof a2.length;
    };
    goog.isDateLike = function(a2) {
      return goog.isObject(a2) && "function" == typeof a2.getFullYear;
    };
    goog.isFunction = function(a2) {
      return "function" == goog.typeOf(a2);
    };
    goog.isObject = function(a2) {
      var b2 = typeof a2;
      return "object" == b2 && null != a2 || "function" == b2;
    };
    goog.getUid = function(a2) {
      return a2[goog.UID_PROPERTY_] || (a2[goog.UID_PROPERTY_] = ++goog.uidCounter_);
    };
    goog.hasUid = function(a2) {
      return !!a2[goog.UID_PROPERTY_];
    };
    goog.removeUid = function(a2) {
      null !== a2 && "removeAttribute" in a2 && a2.removeAttribute(goog.UID_PROPERTY_);
      try {
        delete a2[goog.UID_PROPERTY_];
      } catch (b2) {
      }
    };
    goog.UID_PROPERTY_ = "closure_uid_" + (1e9 * Math.random() >>> 0);
    goog.uidCounter_ = 0;
    goog.getHashCode = goog.getUid;
    goog.removeHashCode = goog.removeUid;
    goog.cloneObject = function(a2) {
      var b2 = goog.typeOf(a2);
      if ("object" == b2 || "array" == b2) {
        if ("function" === typeof a2.clone)
          return a2.clone();
        b2 = "array" == b2 ? [] : {};
        for (var c2 in a2)
          b2[c2] = goog.cloneObject(a2[c2]);
        return b2;
      }
      return a2;
    };
    goog.bindNative_ = function(a2, b2, c2) {
      return a2.call.apply(a2.bind, arguments);
    };
    goog.bindJs_ = function(a2, b2, c2) {
      if (!a2)
        throw Error();
      if (2 < arguments.length) {
        var d2 = Array.prototype.slice.call(arguments, 2);
        return function() {
          var c3 = Array.prototype.slice.call(arguments);
          Array.prototype.unshift.apply(c3, d2);
          return a2.apply(b2, c3);
        };
      }
      return function() {
        return a2.apply(b2, arguments);
      };
    };
    goog.bind = function(a2, b2, c2) {
      Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;
      return goog.bind.apply(null, arguments);
    };
    goog.partial = function(a2, b2) {
      var c2 = Array.prototype.slice.call(arguments, 1);
      return function() {
        var b3 = c2.slice();
        b3.push.apply(b3, arguments);
        return a2.apply(this, b3);
      };
    };
    goog.mixin = function(a2, b2) {
      for (var c2 in b2)
        a2[c2] = b2[c2];
    };
    goog.now = goog.TRUSTED_SITE && Date.now || function() {
      return +new Date();
    };
    goog.globalEval = function(a2) {
      if (goog.global.execScript)
        goog.global.execScript(a2, "JavaScript");
      else if (goog.global.eval) {
        if (null == goog.evalWorksForGlobals_) {
          try {
            goog.global.eval("var _evalTest_ = 1;");
          } catch (d2) {
          }
          if ("undefined" != typeof goog.global._evalTest_) {
            try {
              delete goog.global._evalTest_;
            } catch (d2) {
            }
            goog.evalWorksForGlobals_ = true;
          } else
            goog.evalWorksForGlobals_ = false;
        }
        if (goog.evalWorksForGlobals_)
          goog.global.eval(a2);
        else {
          var b2 = goog.global.document, c2 = b2.createElement("SCRIPT");
          c2.type = "text/javascript";
          c2.defer = false;
          c2.appendChild(b2.createTextNode(a2));
          b2.head.appendChild(c2);
          b2.head.removeChild(c2);
        }
      } else
        throw Error("goog.globalEval not available");
    };
    goog.evalWorksForGlobals_ = null;
    goog.getCssName = function(a2, b2) {
      if ("." == String(a2).charAt(0))
        throw Error('className passed in goog.getCssName must not start with ".". You passed: ' + a2);
      var c2 = function(a3) {
        return goog.cssNameMapping_[a3] || a3;
      }, d2 = function(a3) {
        a3 = a3.split("-");
        for (var b3 = [], d3 = 0; d3 < a3.length; d3++)
          b3.push(c2(a3[d3]));
        return b3.join("-");
      };
      d2 = goog.cssNameMapping_ ? "BY_WHOLE" == goog.cssNameMappingStyle_ ? c2 : d2 : function(a3) {
        return a3;
      };
      a2 = b2 ? a2 + "-" + d2(b2) : d2(a2);
      return goog.global.CLOSURE_CSS_NAME_MAP_FN ? goog.global.CLOSURE_CSS_NAME_MAP_FN(a2) : a2;
    };
    goog.setCssNameMapping = function(a2, b2) {
      goog.cssNameMapping_ = a2;
      goog.cssNameMappingStyle_ = b2;
    };
    !COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING && (goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING);
    goog.getMsg = function(a2, b2, c2) {
      c2 && c2.html && (a2 = a2.replace(/</g, "&lt;"));
      b2 && (a2 = a2.replace(/\{\$([^}]+)}/g, function(a3, c3) {
        return null != b2 && c3 in b2 ? b2[c3] : a3;
      }));
      return a2;
    };
    goog.getMsgWithFallback = function(a2, b2) {
      return a2;
    };
    goog.exportSymbol = function(a2, b2, c2) {
      goog.exportPath_(a2, b2, c2);
    };
    goog.exportProperty = function(a2, b2, c2) {
      a2[b2] = c2;
    };
    goog.inherits = function(a2, b2) {
      function c2() {
      }
      c2.prototype = b2.prototype;
      a2.superClass_ = b2.prototype;
      a2.prototype = new c2();
      a2.prototype.constructor = a2;
      a2.base = function(a3, c3, f2) {
        for (var d2 = Array(arguments.length - 2), e2 = 2; e2 < arguments.length; e2++)
          d2[e2 - 2] = arguments[e2];
        return b2.prototype[c3].apply(a3, d2);
      };
    };
    goog.base = function(a2, b2, c2) {
      var d2 = arguments.callee.caller;
      if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !d2)
        throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");
      if ("undefined" !== typeof d2.superClass_) {
        for (var e2 = Array(arguments.length - 1), f2 = 1; f2 < arguments.length; f2++)
          e2[f2 - 1] = arguments[f2];
        return d2.superClass_.constructor.apply(a2, e2);
      }
      if ("string" != typeof b2 && "symbol" != typeof b2)
        throw Error("method names provided to goog.base must be a string or a symbol");
      e2 = Array(arguments.length - 2);
      for (f2 = 2; f2 < arguments.length; f2++)
        e2[f2 - 2] = arguments[f2];
      f2 = false;
      for (var g = a2.constructor.prototype; g; g = Object.getPrototypeOf(g))
        if (g[b2] === d2)
          f2 = true;
        else if (f2)
          return g[b2].apply(a2, e2);
      if (a2[b2] === d2)
        return a2.constructor.prototype[b2].apply(a2, e2);
      throw Error("goog.base called from a method of one name to a method of a different name");
    };
    goog.scope = function(a2) {
      if (goog.isInModuleLoader_())
        throw Error("goog.scope is not supported within a module.");
      a2.call(goog.global);
    };
    COMPILED || (goog.global.COMPILED = COMPILED);
    goog.defineClass = function(a2, b2) {
      var c2 = b2.constructor, d2 = b2.statics;
      c2 && c2 != Object.prototype.constructor || (c2 = function() {
        throw Error("cannot instantiate an interface (no constructor defined).");
      });
      c2 = goog.defineClass.createSealingConstructor_(c2, a2);
      a2 && goog.inherits(c2, a2);
      delete b2.constructor;
      delete b2.statics;
      goog.defineClass.applyProperties_(c2.prototype, b2);
      null != d2 && (d2 instanceof Function ? d2(c2) : goog.defineClass.applyProperties_(c2, d2));
      return c2;
    };
    goog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;
    goog.defineClass.createSealingConstructor_ = function(a2, b2) {
      if (!goog.defineClass.SEAL_CLASS_INSTANCES)
        return a2;
      var c2 = !goog.defineClass.isUnsealable_(b2), d2 = function() {
        var b3 = a2.apply(this, arguments) || this;
        b3[goog.UID_PROPERTY_] = b3[goog.UID_PROPERTY_];
        this.constructor === d2 && c2 && Object.seal instanceof Function && Object.seal(b3);
        return b3;
      };
      return d2;
    };
    goog.defineClass.isUnsealable_ = function(a2) {
      return a2 && a2.prototype && a2.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
    };
    goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
    goog.defineClass.applyProperties_ = function(a2, b2) {
      for (var c2 in b2)
        Object.prototype.hasOwnProperty.call(b2, c2) && (a2[c2] = b2[c2]);
      for (var d2 = 0; d2 < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; d2++)
        c2 = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d2], Object.prototype.hasOwnProperty.call(b2, c2) && (a2[c2] = b2[c2]);
    };
    goog.tagUnsealableClass = function(a2) {
      !COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES && (a2.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true);
    };
    goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
    !COMPILED && goog.DEPENDENCIES_ENABLED && (goog.inHtmlDocument_ = function() {
      var a2 = goog.global.document;
      return null != a2 && "write" in a2;
    }, goog.isDocumentLoading_ = function() {
      var a2 = goog.global.document;
      return a2.attachEvent ? "complete" != a2.readyState : "loading" == a2.readyState;
    }, goog.findBasePath_ = function() {
      if (goog.isDef(goog.global.CLOSURE_BASE_PATH) && goog.isString(goog.global.CLOSURE_BASE_PATH))
        goog.basePath = goog.global.CLOSURE_BASE_PATH;
      else if (goog.inHtmlDocument_()) {
        var a2 = goog.global.document, b2 = a2.currentScript;
        a2 = b2 ? [b2] : a2.getElementsByTagName("SCRIPT");
        for (b2 = a2.length - 1; 0 <= b2; --b2) {
          var c2 = a2[b2].src, d2 = c2.lastIndexOf("?");
          d2 = -1 == d2 ? c2.length : d2;
          if ("base.js" == c2.substr(d2 - 7, 7)) {
            goog.basePath = c2.substr(0, d2 - 7);
            break;
          }
        }
      }
    }, goog.findBasePath_(), goog.Transpiler = function() {
      this.requiresTranspilation_ = null;
      this.transpilationTarget_ = goog.TRANSPILE_TO_LANGUAGE;
    }, goog.Transpiler.prototype.createRequiresTranspilation_ = function() {
      function a(a2, b2) {
        e ? d[a2] = true : b2() ? (c = a2, d[a2] = false) : e = d[a2] = true;
      }
      function b(a) {
        try {
          return !!eval(a);
        } catch (h) {
          return false;
        }
      }
      var c = "es3", d = { es3: false }, e = false, f = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
      a("es5", function() {
        return b("[1,].length==1");
      });
      a("es6", function() {
        return f.match(/Edge\/(\d+)(\.\d)*/i) ? false : b('(()=>{"use strict";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()');
      });
      a("es7", function() {
        return b("2 ** 2 == 4");
      });
      a("es8", function() {
        return b("async () => 1, true");
      });
      a("es9", function() {
        return b("({...rest} = {}), true");
      });
      a("es_next", function() {
        return false;
      });
      return { target: c, map: d };
    }, goog.Transpiler.prototype.needsTranspile = function(a2, b2) {
      if ("always" == goog.TRANSPILE)
        return true;
      if ("never" == goog.TRANSPILE)
        return false;
      if (!this.requiresTranspilation_) {
        var c2 = this.createRequiresTranspilation_();
        this.requiresTranspilation_ = c2.map;
        this.transpilationTarget_ = this.transpilationTarget_ || c2.target;
      }
      if (a2 in this.requiresTranspilation_)
        return this.requiresTranspilation_[a2] ? true : !goog.inHtmlDocument_() || "es6" != b2 || "noModule" in goog.global.document.createElement("script") ? false : true;
      throw Error("Unknown language mode: " + a2);
    }, goog.Transpiler.prototype.transpile = function(a2, b2) {
      return goog.transpile_(a2, b2, this.transpilationTarget_);
    }, goog.transpiler_ = new goog.Transpiler(), goog.protectScriptTag_ = function(a2) {
      return a2.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
    }, goog.DebugLoader_ = function() {
      this.dependencies_ = {};
      this.idToPath_ = {};
      this.written_ = {};
      this.loadingDeps_ = [];
      this.depsToLoad_ = [];
      this.paused_ = false;
      this.factory_ = new goog.DependencyFactory(goog.transpiler_);
      this.deferredCallbacks_ = {};
      this.deferredQueue_ = [];
    }, goog.DebugLoader_.prototype.bootstrap = function(a2, b2) {
      function c2() {
        d2 && (goog.global.setTimeout(d2, 0), d2 = null);
      }
      var d2 = b2;
      if (a2.length) {
        b2 = [];
        for (var e2 = 0; e2 < a2.length; e2++) {
          var f2 = this.getPathFromDeps_(a2[e2]);
          if (!f2)
            throw Error("Unregonized namespace: " + a2[e2]);
          b2.push(this.dependencies_[f2]);
        }
        f2 = goog.require;
        var g = 0;
        for (e2 = 0; e2 < a2.length; e2++)
          f2(a2[e2]), b2[e2].onLoad(function() {
            ++g == a2.length && c2();
          });
      } else
        c2();
    }, goog.DebugLoader_.prototype.loadClosureDeps = function() {
      this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath + "deps.js"), "deps.js", [], [], {}, false));
      this.loadDeps_();
    }, goog.DebugLoader_.prototype.requested = function(a2, b2) {
      (a2 = this.getPathFromDeps_(a2)) && (b2 || this.areDepsLoaded_(this.dependencies_[a2].requires)) && (b2 = this.deferredCallbacks_[a2]) && (delete this.deferredCallbacks_[a2], b2());
    }, goog.DebugLoader_.prototype.setDependencyFactory = function(a2) {
      this.factory_ = a2;
    }, goog.DebugLoader_.prototype.load_ = function(a2) {
      if (this.getPathFromDeps_(a2)) {
        var b2 = this, c2 = [], d2 = function(a3) {
          var e2 = b2.getPathFromDeps_(a3);
          if (!e2)
            throw Error("Bad dependency path or symbol: " + a3);
          if (!b2.written_[e2]) {
            b2.written_[e2] = true;
            a3 = b2.dependencies_[e2];
            for (e2 = 0; e2 < a3.requires.length; e2++)
              goog.isProvided_(a3.requires[e2]) || d2(a3.requires[e2]);
            c2.push(a3);
          }
        };
        d2(a2);
        a2 = !!this.depsToLoad_.length;
        this.depsToLoad_ = this.depsToLoad_.concat(c2);
        this.paused_ || a2 || this.loadDeps_();
      } else
        throw a2 = "goog.require could not find: " + a2, goog.logToConsole_(a2), Error(a2);
    }, goog.DebugLoader_.prototype.loadDeps_ = function() {
      for (var a2 = this, b2 = this.paused_; this.depsToLoad_.length && !b2; )
        (function() {
          var c2 = false, d2 = a2.depsToLoad_.shift(), e2 = false;
          a2.loading_(d2);
          var f2 = { pause: function() {
            if (c2)
              throw Error("Cannot call pause after the call to load.");
            b2 = true;
          }, resume: function() {
            c2 ? a2.resume_() : b2 = false;
          }, loaded: function() {
            if (e2)
              throw Error("Double call to loaded.");
            e2 = true;
            a2.loaded_(d2);
          }, pending: function() {
            for (var b3 = [], c3 = 0; c3 < a2.loadingDeps_.length; c3++)
              b3.push(a2.loadingDeps_[c3]);
            return b3;
          }, setModuleState: function(a3) {
            goog.moduleLoaderState_ = { type: a3, moduleName: "", declareLegacyNamespace: false };
          }, registerEs6ModuleExports: function(a3, b3, c3) {
            c3 && (goog.loadedModules_[c3] = { exports: b3, type: goog.ModuleType.ES6, moduleId: c3 || "" });
          }, registerGoogModuleExports: function(a3, b3) {
            goog.loadedModules_[a3] = { exports: b3, type: goog.ModuleType.GOOG, moduleId: a3 };
          }, clearModuleState: function() {
            goog.moduleLoaderState_ = null;
          }, defer: function(b3) {
            if (c2)
              throw Error("Cannot register with defer after the call to load.");
            a2.defer_(d2, b3);
          }, areDepsLoaded: function() {
            return a2.areDepsLoaded_(d2.requires);
          } };
          try {
            d2.load(f2);
          } finally {
            c2 = true;
          }
        })();
      b2 && this.pause_();
    }, goog.DebugLoader_.prototype.pause_ = function() {
      this.paused_ = true;
    }, goog.DebugLoader_.prototype.resume_ = function() {
      this.paused_ && (this.paused_ = false, this.loadDeps_());
    }, goog.DebugLoader_.prototype.loading_ = function(a2) {
      this.loadingDeps_.push(a2);
    }, goog.DebugLoader_.prototype.loaded_ = function(a2) {
      for (var b2 = 0; b2 < this.loadingDeps_.length; b2++)
        if (this.loadingDeps_[b2] == a2) {
          this.loadingDeps_.splice(b2, 1);
          break;
        }
      for (b2 = 0; b2 < this.deferredQueue_.length; b2++)
        if (this.deferredQueue_[b2] == a2.path) {
          this.deferredQueue_.splice(b2, 1);
          break;
        }
      if (this.loadingDeps_.length == this.deferredQueue_.length && !this.depsToLoad_.length)
        for (; this.deferredQueue_.length; )
          this.requested(this.deferredQueue_.shift(), true);
      a2.loaded();
    }, goog.DebugLoader_.prototype.areDepsLoaded_ = function(a2) {
      for (var b2 = 0; b2 < a2.length; b2++) {
        var c2 = this.getPathFromDeps_(a2[b2]);
        if (!c2 || !(c2 in this.deferredCallbacks_ || goog.isProvided_(a2[b2])))
          return false;
      }
      return true;
    }, goog.DebugLoader_.prototype.getPathFromDeps_ = function(a2) {
      return a2 in this.idToPath_ ? this.idToPath_[a2] : a2 in this.dependencies_ ? a2 : null;
    }, goog.DebugLoader_.prototype.defer_ = function(a2, b2) {
      this.deferredCallbacks_[a2.path] = b2;
      this.deferredQueue_.push(a2.path);
    }, goog.LoadController = function() {
    }, goog.LoadController.prototype.pause = function() {
    }, goog.LoadController.prototype.resume = function() {
    }, goog.LoadController.prototype.loaded = function() {
    }, goog.LoadController.prototype.pending = function() {
    }, goog.LoadController.prototype.registerEs6ModuleExports = function(a2, b2, c2) {
    }, goog.LoadController.prototype.setModuleState = function(a2) {
    }, goog.LoadController.prototype.clearModuleState = function() {
    }, goog.LoadController.prototype.defer = function(a2) {
    }, goog.LoadController.prototype.areDepsLoaded = function() {
    }, goog.Dependency = function(a2, b2, c2, d2, e2) {
      this.path = a2;
      this.relativePath = b2;
      this.provides = c2;
      this.requires = d2;
      this.loadFlags = e2;
      this.loaded_ = false;
      this.loadCallbacks_ = [];
    }, goog.Dependency.prototype.getPathName = function() {
      var a2 = this.path, b2 = a2.indexOf("://");
      0 <= b2 && (a2 = a2.substring(b2 + 3), b2 = a2.indexOf("/"), 0 <= b2 && (a2 = a2.substring(b2 + 1)));
      return a2;
    }, goog.Dependency.prototype.onLoad = function(a2) {
      this.loaded_ ? a2() : this.loadCallbacks_.push(a2);
    }, goog.Dependency.prototype.loaded = function() {
      this.loaded_ = true;
      var a2 = this.loadCallbacks_;
      this.loadCallbacks_ = [];
      for (var b2 = 0; b2 < a2.length; b2++)
        a2[b2]();
    }, goog.Dependency.defer_ = false, goog.Dependency.callbackMap_ = {}, goog.Dependency.registerCallback_ = function(a2) {
      var b2 = Math.random().toString(32);
      goog.Dependency.callbackMap_[b2] = a2;
      return b2;
    }, goog.Dependency.unregisterCallback_ = function(a2) {
      delete goog.Dependency.callbackMap_[a2];
    }, goog.Dependency.callback_ = function(a2, b2) {
      if (a2 in goog.Dependency.callbackMap_) {
        for (var c2 = goog.Dependency.callbackMap_[a2], d2 = [], e2 = 1; e2 < arguments.length; e2++)
          d2.push(arguments[e2]);
        c2.apply(void 0, d2);
      } else
        throw Error("Callback key " + a2 + " does not exist (was base.js loaded more than once?).");
    }, goog.Dependency.prototype.load = function(a2) {
      if (goog.global.CLOSURE_IMPORT_SCRIPT)
        goog.global.CLOSURE_IMPORT_SCRIPT(this.path) ? a2.loaded() : a2.pause();
      else if (goog.inHtmlDocument_()) {
        var b2 = goog.global.document;
        if ("complete" == b2.readyState && !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
          if (/\bdeps.js$/.test(this.path)) {
            a2.loaded();
            return;
          }
          throw Error('Cannot write "' + this.path + '" after document load');
        }
        if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && goog.isDocumentLoading_()) {
          var c2 = goog.Dependency.registerCallback_(function(b3) {
            goog.DebugLoader_.IS_OLD_IE_ && "complete" != b3.readyState || (goog.Dependency.unregisterCallback_(c2), a2.loaded());
          }), d2 = !goog.DebugLoader_.IS_OLD_IE_ && goog.getScriptNonce() ? ' nonce="' + goog.getScriptNonce() + '"' : "";
          d2 = '<script src="' + this.path + '" ' + (goog.DebugLoader_.IS_OLD_IE_ ? "onreadystatechange" : "onload") + `="goog.Dependency.callback_('` + c2 + `', this)" type="text/javascript" ` + (goog.Dependency.defer_ ? "defer" : "") + d2 + "><\/script>";
          b2.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(d2) : d2);
        } else {
          var e2 = b2.createElement("script");
          e2.defer = goog.Dependency.defer_;
          e2.async = false;
          e2.type = "text/javascript";
          (d2 = goog.getScriptNonce()) && e2.setAttribute("nonce", d2);
          goog.DebugLoader_.IS_OLD_IE_ ? (a2.pause(), e2.onreadystatechange = function() {
            if ("loaded" == e2.readyState || "complete" == e2.readyState)
              a2.loaded(), a2.resume();
          }) : e2.onload = function() {
            e2.onload = null;
            a2.loaded();
          };
          e2.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path) : this.path;
          b2.head.appendChild(e2);
        }
      } else
        goog.logToConsole_("Cannot use default debug loader outside of HTML documents."), "deps.js" == this.relativePath ? (goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true."), a2.loaded()) : a2.pause();
    }, goog.Es6ModuleDependency = function(a2, b2, c2, d2, e2) {
      goog.Dependency.call(this, a2, b2, c2, d2, e2);
    }, goog.inherits(goog.Es6ModuleDependency, goog.Dependency), goog.Es6ModuleDependency.prototype.load = function(a2) {
      function b2(a3, b3) {
        a3 = b3 ? '<script type="module" crossorigin>' + b3 + "<\/script>" : '<script type="module" crossorigin src="' + a3 + '"><\/script>';
        d2.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(a3) : a3);
      }
      function c2(a3, b3) {
        var c3 = d2.createElement("script");
        c3.defer = true;
        c3.async = false;
        c3.type = "module";
        c3.setAttribute("crossorigin", true);
        var e3 = goog.getScriptNonce();
        e3 && c3.setAttribute("nonce", e3);
        b3 ? c3.textContent = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScript(b3) : b3 : c3.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(a3) : a3;
        d2.head.appendChild(c3);
      }
      if (goog.global.CLOSURE_IMPORT_SCRIPT)
        goog.global.CLOSURE_IMPORT_SCRIPT(this.path) ? a2.loaded() : a2.pause();
      else if (goog.inHtmlDocument_()) {
        var d2 = goog.global.document, e2 = this;
        if (goog.isDocumentLoading_()) {
          var f2 = b2;
          goog.Dependency.defer_ = true;
        } else
          f2 = c2;
        var g = goog.Dependency.registerCallback_(function() {
          goog.Dependency.unregisterCallback_(g);
          a2.setModuleState(goog.ModuleType.ES6);
        });
        f2(void 0, 'goog.Dependency.callback_("' + g + '")');
        f2(this.path, void 0);
        var h = goog.Dependency.registerCallback_(function(b3) {
          goog.Dependency.unregisterCallback_(h);
          a2.registerEs6ModuleExports(e2.path, b3, goog.moduleLoaderState_.moduleName);
        });
        f2(void 0, 'import * as m from "' + this.path + '"; goog.Dependency.callback_("' + h + '", m)');
        var k = goog.Dependency.registerCallback_(function() {
          goog.Dependency.unregisterCallback_(k);
          a2.clearModuleState();
          a2.loaded();
        });
        f2(void 0, 'goog.Dependency.callback_("' + k + '")');
      } else
        goog.logToConsole_("Cannot use default debug loader outside of HTML documents."), a2.pause();
    }, goog.TransformedDependency = function(a2, b2, c2, d2, e2) {
      goog.Dependency.call(this, a2, b2, c2, d2, e2);
      this.contents_ = null;
      this.lazyFetch_ = !goog.inHtmlDocument_() || !("noModule" in goog.global.document.createElement("script"));
    }, goog.inherits(goog.TransformedDependency, goog.Dependency), goog.TransformedDependency.prototype.load = function(a2) {
      function b2() {
        e2.contents_ = goog.loadFileSync_(e2.path);
        e2.contents_ && (e2.contents_ = e2.transform(e2.contents_), e2.contents_ && (e2.contents_ += "\n//# sourceURL=" + e2.path));
      }
      function c2() {
        e2.lazyFetch_ && b2();
        if (e2.contents_) {
          f2 && a2.setModuleState(goog.ModuleType.ES6);
          try {
            var c3 = e2.contents_;
            e2.contents_ = null;
            goog.globalEval(c3);
            if (f2)
              var d3 = goog.moduleLoaderState_.moduleName;
          } finally {
            f2 && a2.clearModuleState();
          }
          f2 && goog.global.$jscomp.require.ensure([e2.getPathName()], function() {
            a2.registerEs6ModuleExports(e2.path, goog.global.$jscomp.require(e2.getPathName()), d3);
          });
          a2.loaded();
        }
      }
      function d2() {
        var a3 = goog.global.document, b3 = goog.Dependency.registerCallback_(function() {
          goog.Dependency.unregisterCallback_(b3);
          c2();
        }), d3 = '<script type="text/javascript">' + goog.protectScriptTag_('goog.Dependency.callback_("' + b3 + '");') + "<\/script>";
        a3.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(d3) : d3);
      }
      var e2 = this;
      if (goog.global.CLOSURE_IMPORT_SCRIPT)
        b2(), this.contents_ && goog.global.CLOSURE_IMPORT_SCRIPT("", this.contents_) ? (this.contents_ = null, a2.loaded()) : a2.pause();
      else {
        var f2 = this.loadFlags.module == goog.ModuleType.ES6;
        this.lazyFetch_ || b2();
        var g = 1 < a2.pending().length, h = g && goog.DebugLoader_.IS_OLD_IE_;
        g = goog.Dependency.defer_ && (g || goog.isDocumentLoading_());
        if (h || g)
          a2.defer(function() {
            c2();
          });
        else {
          var k = goog.global.document;
          h = goog.inHtmlDocument_() && "ActiveXObject" in goog.global;
          if (f2 && goog.inHtmlDocument_() && goog.isDocumentLoading_() && !h) {
            goog.Dependency.defer_ = true;
            a2.pause();
            var l = k.onreadystatechange;
            k.onreadystatechange = function() {
              "interactive" == k.readyState && (k.onreadystatechange = l, c2(), a2.resume());
              goog.isFunction(l) && l.apply(void 0, arguments);
            };
          } else
            !goog.DebugLoader_.IS_OLD_IE_ && goog.inHtmlDocument_() && goog.isDocumentLoading_() ? d2() : c2();
        }
      }
    }, goog.TransformedDependency.prototype.transform = function(a2) {
    }, goog.TranspiledDependency = function(a2, b2, c2, d2, e2, f2) {
      goog.TransformedDependency.call(this, a2, b2, c2, d2, e2);
      this.transpiler = f2;
    }, goog.inherits(goog.TranspiledDependency, goog.TransformedDependency), goog.TranspiledDependency.prototype.transform = function(a2) {
      return this.transpiler.transpile(a2, this.getPathName());
    }, goog.PreTranspiledEs6ModuleDependency = function(a2, b2, c2, d2, e2) {
      goog.TransformedDependency.call(this, a2, b2, c2, d2, e2);
    }, goog.inherits(goog.PreTranspiledEs6ModuleDependency, goog.TransformedDependency), goog.PreTranspiledEs6ModuleDependency.prototype.transform = function(a2) {
      return a2;
    }, goog.GoogModuleDependency = function(a2, b2, c2, d2, e2, f2, g) {
      goog.TransformedDependency.call(this, a2, b2, c2, d2, e2);
      this.needsTranspile_ = f2;
      this.transpiler_ = g;
    }, goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency), goog.GoogModuleDependency.prototype.transform = function(a2) {
      this.needsTranspile_ && (a2 = this.transpiler_.transpile(a2, this.getPathName()));
      return goog.LOAD_MODULE_USING_EVAL && goog.isDef(goog.global.JSON) ? "goog.loadModule(" + goog.global.JSON.stringify(a2 + "\n//# sourceURL=" + this.path + "\n") + ");" : 'goog.loadModule(function(exports) {"use strict";' + a2 + "\n;return exports});\n//# sourceURL=" + this.path + "\n";
    }, goog.DebugLoader_.IS_OLD_IE_ = !(goog.global.atob || !goog.global.document || !goog.global.document.all), goog.DebugLoader_.prototype.addDependency = function(a2, b2, c2, d2) {
      b2 = b2 || [];
      a2 = a2.replace(/\\/g, "/");
      var e2 = goog.normalizePath_(goog.basePath + a2);
      d2 && "boolean" !== typeof d2 || (d2 = d2 ? { module: goog.ModuleType.GOOG } : {});
      c2 = this.factory_.createDependency(e2, a2, b2, c2, d2, goog.transpiler_.needsTranspile(d2.lang || "es3", d2.module));
      this.dependencies_[e2] = c2;
      for (c2 = 0; c2 < b2.length; c2++)
        this.idToPath_[b2[c2]] = e2;
      this.idToPath_[a2] = e2;
    }, goog.DependencyFactory = function(a2) {
      this.transpiler = a2;
    }, goog.DependencyFactory.prototype.createDependency = function(a2, b2, c2, d2, e2, f2) {
      return e2.module == goog.ModuleType.GOOG ? new goog.GoogModuleDependency(a2, b2, c2, d2, e2, f2, this.transpiler) : f2 ? new goog.TranspiledDependency(a2, b2, c2, d2, e2, this.transpiler) : e2.module == goog.ModuleType.ES6 ? "never" == goog.TRANSPILE && goog.ASSUME_ES_MODULES_TRANSPILED ? new goog.PreTranspiledEs6ModuleDependency(a2, b2, c2, d2, e2) : new goog.Es6ModuleDependency(a2, b2, c2, d2, e2) : new goog.Dependency(a2, b2, c2, d2, e2);
    }, goog.debugLoader_ = new goog.DebugLoader_(), goog.loadClosureDeps = function() {
      goog.debugLoader_.loadClosureDeps();
    }, goog.setDependencyFactory = function(a2) {
      goog.debugLoader_.setDependencyFactory(a2);
    }, goog.global.CLOSURE_NO_DEPS || goog.debugLoader_.loadClosureDeps(), goog.bootstrap = function(a2, b2) {
      goog.debugLoader_.bootstrap(a2, b2);
    });
    goog.TRUSTED_TYPES_POLICY_NAME = "";
    goog.identity_ = function(a2) {
      return a2;
    };
    goog.createTrustedTypesPolicy = function(a2) {
      var b2 = null;
      if ("undefined" === typeof TrustedTypes || !TrustedTypes.createPolicy)
        return b2;
      try {
        b2 = TrustedTypes.createPolicy(a2, { createHTML: goog.identity_, createScript: goog.identity_, createScriptURL: goog.identity_, createURL: goog.identity_ });
      } catch (c2) {
        goog.logToConsole_(c2.message);
      }
      return b2;
    };
    goog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#base") : null;
    goog.object = {};
    goog.object.is = function(a2, b2) {
      return a2 === b2 ? 0 !== a2 || 1 / a2 === 1 / b2 : a2 !== a2 && b2 !== b2;
    };
    goog.object.forEach = function(a2, b2, c2) {
      for (var d2 in a2)
        b2.call(c2, a2[d2], d2, a2);
    };
    goog.object.filter = function(a2, b2, c2) {
      var d2 = {}, e2;
      for (e2 in a2)
        b2.call(c2, a2[e2], e2, a2) && (d2[e2] = a2[e2]);
      return d2;
    };
    goog.object.map = function(a2, b2, c2) {
      var d2 = {}, e2;
      for (e2 in a2)
        d2[e2] = b2.call(c2, a2[e2], e2, a2);
      return d2;
    };
    goog.object.some = function(a2, b2, c2) {
      for (var d2 in a2)
        if (b2.call(c2, a2[d2], d2, a2))
          return true;
      return false;
    };
    goog.object.every = function(a2, b2, c2) {
      for (var d2 in a2)
        if (!b2.call(c2, a2[d2], d2, a2))
          return false;
      return true;
    };
    goog.object.getCount = function(a2) {
      var b2 = 0, c2;
      for (c2 in a2)
        b2++;
      return b2;
    };
    goog.object.getAnyKey = function(a2) {
      for (var b2 in a2)
        return b2;
    };
    goog.object.getAnyValue = function(a2) {
      for (var b2 in a2)
        return a2[b2];
    };
    goog.object.contains = function(a2, b2) {
      return goog.object.containsValue(a2, b2);
    };
    goog.object.getValues = function(a2) {
      var b2 = [], c2 = 0, d2;
      for (d2 in a2)
        b2[c2++] = a2[d2];
      return b2;
    };
    goog.object.getKeys = function(a2) {
      var b2 = [], c2 = 0, d2;
      for (d2 in a2)
        b2[c2++] = d2;
      return b2;
    };
    goog.object.getValueByKeys = function(a2, b2) {
      var c2 = goog.isArrayLike(b2), d2 = c2 ? b2 : arguments;
      for (c2 = c2 ? 0 : 1; c2 < d2.length; c2++) {
        if (null == a2)
          return;
        a2 = a2[d2[c2]];
      }
      return a2;
    };
    goog.object.containsKey = function(a2, b2) {
      return null !== a2 && b2 in a2;
    };
    goog.object.containsValue = function(a2, b2) {
      for (var c2 in a2)
        if (a2[c2] == b2)
          return true;
      return false;
    };
    goog.object.findKey = function(a2, b2, c2) {
      for (var d2 in a2)
        if (b2.call(c2, a2[d2], d2, a2))
          return d2;
    };
    goog.object.findValue = function(a2, b2, c2) {
      return (b2 = goog.object.findKey(a2, b2, c2)) && a2[b2];
    };
    goog.object.isEmpty = function(a2) {
      for (var b2 in a2)
        return false;
      return true;
    };
    goog.object.clear = function(a2) {
      for (var b2 in a2)
        delete a2[b2];
    };
    goog.object.remove = function(a2, b2) {
      var c2;
      (c2 = b2 in a2) && delete a2[b2];
      return c2;
    };
    goog.object.add = function(a2, b2, c2) {
      if (null !== a2 && b2 in a2)
        throw Error('The object already contains the key "' + b2 + '"');
      goog.object.set(a2, b2, c2);
    };
    goog.object.get = function(a2, b2, c2) {
      return null !== a2 && b2 in a2 ? a2[b2] : c2;
    };
    goog.object.set = function(a2, b2, c2) {
      a2[b2] = c2;
    };
    goog.object.setIfUndefined = function(a2, b2, c2) {
      return b2 in a2 ? a2[b2] : a2[b2] = c2;
    };
    goog.object.setWithReturnValueIfNotSet = function(a2, b2, c2) {
      if (b2 in a2)
        return a2[b2];
      c2 = c2();
      return a2[b2] = c2;
    };
    goog.object.equals = function(a2, b2) {
      for (var c2 in a2)
        if (!(c2 in b2) || a2[c2] !== b2[c2])
          return false;
      for (var d2 in b2)
        if (!(d2 in a2))
          return false;
      return true;
    };
    goog.object.clone = function(a2) {
      var b2 = {}, c2;
      for (c2 in a2)
        b2[c2] = a2[c2];
      return b2;
    };
    goog.object.unsafeClone = function(a2) {
      var b2 = goog.typeOf(a2);
      if ("object" == b2 || "array" == b2) {
        if (goog.isFunction(a2.clone))
          return a2.clone();
        b2 = "array" == b2 ? [] : {};
        for (var c2 in a2)
          b2[c2] = goog.object.unsafeClone(a2[c2]);
        return b2;
      }
      return a2;
    };
    goog.object.transpose = function(a2) {
      var b2 = {}, c2;
      for (c2 in a2)
        b2[a2[c2]] = c2;
      return b2;
    };
    goog.object.PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
    goog.object.extend = function(a2, b2) {
      for (var c2, d2, e2 = 1; e2 < arguments.length; e2++) {
        d2 = arguments[e2];
        for (c2 in d2)
          a2[c2] = d2[c2];
        for (var f2 = 0; f2 < goog.object.PROTOTYPE_FIELDS_.length; f2++)
          c2 = goog.object.PROTOTYPE_FIELDS_[f2], Object.prototype.hasOwnProperty.call(d2, c2) && (a2[c2] = d2[c2]);
      }
    };
    goog.object.create = function(a2) {
      var b2 = arguments.length;
      if (1 == b2 && goog.isArray(arguments[0]))
        return goog.object.create.apply(null, arguments[0]);
      if (b2 % 2)
        throw Error("Uneven number of arguments");
      for (var c2 = {}, d2 = 0; d2 < b2; d2 += 2)
        c2[arguments[d2]] = arguments[d2 + 1];
      return c2;
    };
    goog.object.createSet = function(a2) {
      var b2 = arguments.length;
      if (1 == b2 && goog.isArray(arguments[0]))
        return goog.object.createSet.apply(null, arguments[0]);
      for (var c2 = {}, d2 = 0; d2 < b2; d2++)
        c2[arguments[d2]] = true;
      return c2;
    };
    goog.object.createImmutableView = function(a2) {
      var b2 = a2;
      Object.isFrozen && !Object.isFrozen(a2) && (b2 = Object.create(a2), Object.freeze(b2));
      return b2;
    };
    goog.object.isImmutableView = function(a2) {
      return !!Object.isFrozen && Object.isFrozen(a2);
    };
    goog.object.getAllPropertyNames = function(a2, b2, c2) {
      if (!a2)
        return [];
      if (!Object.getOwnPropertyNames || !Object.getPrototypeOf)
        return goog.object.getKeys(a2);
      for (var d2 = {}; a2 && (a2 !== Object.prototype || b2) && (a2 !== Function.prototype || c2); ) {
        for (var e2 = Object.getOwnPropertyNames(a2), f2 = 0; f2 < e2.length; f2++)
          d2[e2[f2]] = true;
        a2 = Object.getPrototypeOf(a2);
      }
      return goog.object.getKeys(d2);
    };
    goog.object.getSuperClass = function(a2) {
      return (a2 = Object.getPrototypeOf(a2.prototype)) && a2.constructor;
    };
    goog.debug = {};
    goog.debug.Error = function(a2) {
      if (Error.captureStackTrace)
        Error.captureStackTrace(this, goog.debug.Error);
      else {
        var b2 = Error().stack;
        b2 && (this.stack = b2);
      }
      a2 && (this.message = String(a2));
      this.reportErrorToServer = true;
    };
    goog.inherits(goog.debug.Error, Error);
    goog.debug.Error.prototype.name = "CustomError";
    goog.dom = {};
    goog.dom.NodeType = { ELEMENT: 1, ATTRIBUTE: 2, TEXT: 3, CDATA_SECTION: 4, ENTITY_REFERENCE: 5, ENTITY: 6, PROCESSING_INSTRUCTION: 7, COMMENT: 8, DOCUMENT: 9, DOCUMENT_TYPE: 10, DOCUMENT_FRAGMENT: 11, NOTATION: 12 };
    goog.asserts = {};
    goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
    goog.asserts.AssertionError = function(a2, b2) {
      goog.debug.Error.call(this, goog.asserts.subs_(a2, b2));
      this.messagePattern = a2;
    };
    goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
    goog.asserts.AssertionError.prototype.name = "AssertionError";
    goog.asserts.DEFAULT_ERROR_HANDLER = function(a2) {
      throw a2;
    };
    goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
    goog.asserts.subs_ = function(a2, b2) {
      a2 = a2.split("%s");
      for (var c2 = "", d2 = a2.length - 1, e2 = 0; e2 < d2; e2++)
        c2 += a2[e2] + (e2 < b2.length ? b2[e2] : "%s");
      return c2 + a2[d2];
    };
    goog.asserts.doAssertFailure_ = function(a2, b2, c2, d2) {
      var e2 = "Assertion failed";
      if (c2) {
        e2 += ": " + c2;
        var f2 = d2;
      } else
        a2 && (e2 += ": " + a2, f2 = b2);
      a2 = new goog.asserts.AssertionError("" + e2, f2 || []);
      goog.asserts.errorHandler_(a2);
    };
    goog.asserts.setErrorHandler = function(a2) {
      goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = a2);
    };
    goog.asserts.assert = function(a2, b2, c2) {
      goog.asserts.ENABLE_ASSERTS && !a2 && goog.asserts.doAssertFailure_("", null, b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertExists = function(a2, b2, c2) {
      goog.asserts.ENABLE_ASSERTS && null == a2 && goog.asserts.doAssertFailure_("Expected to exist: %s.", [a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.fail = function(a2, b2) {
      goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (a2 ? ": " + a2 : ""), Array.prototype.slice.call(arguments, 1)));
    };
    goog.asserts.assertNumber = function(a2, b2, c2) {
      goog.asserts.ENABLE_ASSERTS && !goog.isNumber(a2) && goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(a2), a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertString = function(a2, b2, c2) {
      goog.asserts.ENABLE_ASSERTS && !goog.isString(a2) && goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(a2), a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertFunction = function(a2, b2, c2) {
      goog.asserts.ENABLE_ASSERTS && !goog.isFunction(a2) && goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(a2), a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertObject = function(a2, b2, c2) {
      goog.asserts.ENABLE_ASSERTS && !goog.isObject(a2) && goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(a2), a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertArray = function(a2, b2, c2) {
      goog.asserts.ENABLE_ASSERTS && !goog.isArray(a2) && goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(a2), a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertBoolean = function(a2, b2, c2) {
      goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(a2) && goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(a2), a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertElement = function(a2, b2, c2) {
      !goog.asserts.ENABLE_ASSERTS || goog.isObject(a2) && a2.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(a2), a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertInstanceof = function(a2, b2, c2, d2) {
      !goog.asserts.ENABLE_ASSERTS || a2 instanceof b2 || goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(b2), goog.asserts.getType_(a2)], c2, Array.prototype.slice.call(arguments, 3));
      return a2;
    };
    goog.asserts.assertFinite = function(a2, b2, c2) {
      !goog.asserts.ENABLE_ASSERTS || "number" == typeof a2 && isFinite(a2) || goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.", [a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertObjectPrototypeIsIntact = function() {
      for (var a2 in Object.prototype)
        goog.asserts.fail(a2 + " should not be enumerable in Object.prototype.");
    };
    goog.asserts.getType_ = function(a2) {
      return a2 instanceof Function ? a2.displayName || a2.name || "unknown type name" : a2 instanceof Object ? a2.constructor.displayName || a2.constructor.name || Object.prototype.toString.call(a2) : null === a2 ? "null" : typeof a2;
    };
    var jspb = { BinaryConstants: {}, ConstBinaryMessage: function() {
    }, BinaryMessage: function() {
    } };
    jspb.BinaryConstants.FieldType = { INVALID: -1, DOUBLE: 1, FLOAT: 2, INT64: 3, UINT64: 4, INT32: 5, FIXED64: 6, FIXED32: 7, BOOL: 8, STRING: 9, GROUP: 10, MESSAGE: 11, BYTES: 12, UINT32: 13, ENUM: 14, SFIXED32: 15, SFIXED64: 16, SINT32: 17, SINT64: 18, FHASH64: 30, VHASH64: 31 };
    jspb.BinaryConstants.WireType = { INVALID: -1, VARINT: 0, FIXED64: 1, DELIMITED: 2, START_GROUP: 3, END_GROUP: 4, FIXED32: 5 };
    jspb.BinaryConstants.FieldTypeToWireType = function(a2) {
      var b2 = jspb.BinaryConstants.FieldType, c2 = jspb.BinaryConstants.WireType;
      switch (a2) {
        case b2.INT32:
        case b2.INT64:
        case b2.UINT32:
        case b2.UINT64:
        case b2.SINT32:
        case b2.SINT64:
        case b2.BOOL:
        case b2.ENUM:
        case b2.VHASH64:
          return c2.VARINT;
        case b2.DOUBLE:
        case b2.FIXED64:
        case b2.SFIXED64:
        case b2.FHASH64:
          return c2.FIXED64;
        case b2.STRING:
        case b2.MESSAGE:
        case b2.BYTES:
          return c2.DELIMITED;
        case b2.FLOAT:
        case b2.FIXED32:
        case b2.SFIXED32:
          return c2.FIXED32;
        default:
          return c2.INVALID;
      }
    };
    jspb.BinaryConstants.INVALID_FIELD_NUMBER = -1;
    jspb.BinaryConstants.FLOAT32_EPS = 1401298464324817e-60;
    jspb.BinaryConstants.FLOAT32_MIN = 11754943508222875e-54;
    jspb.BinaryConstants.FLOAT32_MAX = 34028234663852886e22;
    jspb.BinaryConstants.FLOAT64_EPS = 5e-324;
    jspb.BinaryConstants.FLOAT64_MIN = 22250738585072014e-324;
    jspb.BinaryConstants.FLOAT64_MAX = 17976931348623157e292;
    jspb.BinaryConstants.TWO_TO_20 = 1048576;
    jspb.BinaryConstants.TWO_TO_23 = 8388608;
    jspb.BinaryConstants.TWO_TO_31 = 2147483648;
    jspb.BinaryConstants.TWO_TO_32 = 4294967296;
    jspb.BinaryConstants.TWO_TO_52 = 4503599627370496;
    jspb.BinaryConstants.TWO_TO_63 = 9223372036854776e3;
    jspb.BinaryConstants.TWO_TO_64 = 18446744073709552e3;
    jspb.BinaryConstants.ZERO_HASH = "\0\0\0\0\0\0\0\0";
    goog.array = {};
    goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
    goog.array.ASSUME_NATIVE_FUNCTIONS = 2012 < goog.FEATURESET_YEAR;
    goog.array.peek = function(a2) {
      return a2[a2.length - 1];
    };
    goog.array.last = goog.array.peek;
    goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(a2, b2, c2) {
      goog.asserts.assert(null != a2.length);
      return Array.prototype.indexOf.call(a2, b2, c2);
    } : function(a2, b2, c2) {
      c2 = null == c2 ? 0 : 0 > c2 ? Math.max(0, a2.length + c2) : c2;
      if (goog.isString(a2))
        return goog.isString(b2) && 1 == b2.length ? a2.indexOf(b2, c2) : -1;
      for (; c2 < a2.length; c2++)
        if (c2 in a2 && a2[c2] === b2)
          return c2;
      return -1;
    };
    goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(a2, b2, c2) {
      goog.asserts.assert(null != a2.length);
      return Array.prototype.lastIndexOf.call(a2, b2, null == c2 ? a2.length - 1 : c2);
    } : function(a2, b2, c2) {
      c2 = null == c2 ? a2.length - 1 : c2;
      0 > c2 && (c2 = Math.max(0, a2.length + c2));
      if (goog.isString(a2))
        return goog.isString(b2) && 1 == b2.length ? a2.lastIndexOf(b2, c2) : -1;
      for (; 0 <= c2; c2--)
        if (c2 in a2 && a2[c2] === b2)
          return c2;
      return -1;
    };
    goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(a2, b2, c2) {
      goog.asserts.assert(null != a2.length);
      Array.prototype.forEach.call(a2, b2, c2);
    } : function(a2, b2, c2) {
      for (var d2 = a2.length, e2 = goog.isString(a2) ? a2.split("") : a2, f2 = 0; f2 < d2; f2++)
        f2 in e2 && b2.call(c2, e2[f2], f2, a2);
    };
    goog.array.forEachRight = function(a2, b2, c2) {
      var d2 = a2.length, e2 = goog.isString(a2) ? a2.split("") : a2;
      for (--d2; 0 <= d2; --d2)
        d2 in e2 && b2.call(c2, e2[d2], d2, a2);
    };
    goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(a2, b2, c2) {
      goog.asserts.assert(null != a2.length);
      return Array.prototype.filter.call(a2, b2, c2);
    } : function(a2, b2, c2) {
      for (var d2 = a2.length, e2 = [], f2 = 0, g = goog.isString(a2) ? a2.split("") : a2, h = 0; h < d2; h++)
        if (h in g) {
          var k = g[h];
          b2.call(c2, k, h, a2) && (e2[f2++] = k);
        }
      return e2;
    };
    goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(a2, b2, c2) {
      goog.asserts.assert(null != a2.length);
      return Array.prototype.map.call(a2, b2, c2);
    } : function(a2, b2, c2) {
      for (var d2 = a2.length, e2 = Array(d2), f2 = goog.isString(a2) ? a2.split("") : a2, g = 0; g < d2; g++)
        g in f2 && (e2[g] = b2.call(c2, f2[g], g, a2));
      return e2;
    };
    goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(a2, b2, c2, d2) {
      goog.asserts.assert(null != a2.length);
      d2 && (b2 = goog.bind(b2, d2));
      return Array.prototype.reduce.call(a2, b2, c2);
    } : function(a2, b2, c2, d2) {
      var e2 = c2;
      goog.array.forEach(a2, function(c3, g) {
        e2 = b2.call(d2, e2, c3, g, a2);
      });
      return e2;
    };
    goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(a2, b2, c2, d2) {
      goog.asserts.assert(null != a2.length);
      goog.asserts.assert(null != b2);
      d2 && (b2 = goog.bind(b2, d2));
      return Array.prototype.reduceRight.call(a2, b2, c2);
    } : function(a2, b2, c2, d2) {
      var e2 = c2;
      goog.array.forEachRight(a2, function(c3, g) {
        e2 = b2.call(d2, e2, c3, g, a2);
      });
      return e2;
    };
    goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(a2, b2, c2) {
      goog.asserts.assert(null != a2.length);
      return Array.prototype.some.call(a2, b2, c2);
    } : function(a2, b2, c2) {
      for (var d2 = a2.length, e2 = goog.isString(a2) ? a2.split("") : a2, f2 = 0; f2 < d2; f2++)
        if (f2 in e2 && b2.call(c2, e2[f2], f2, a2))
          return true;
      return false;
    };
    goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(a2, b2, c2) {
      goog.asserts.assert(null != a2.length);
      return Array.prototype.every.call(a2, b2, c2);
    } : function(a2, b2, c2) {
      for (var d2 = a2.length, e2 = goog.isString(a2) ? a2.split("") : a2, f2 = 0; f2 < d2; f2++)
        if (f2 in e2 && !b2.call(c2, e2[f2], f2, a2))
          return false;
      return true;
    };
    goog.array.count = function(a2, b2, c2) {
      var d2 = 0;
      goog.array.forEach(a2, function(a3, f2, g) {
        b2.call(c2, a3, f2, g) && ++d2;
      }, c2);
      return d2;
    };
    goog.array.find = function(a2, b2, c2) {
      b2 = goog.array.findIndex(a2, b2, c2);
      return 0 > b2 ? null : goog.isString(a2) ? a2.charAt(b2) : a2[b2];
    };
    goog.array.findIndex = function(a2, b2, c2) {
      for (var d2 = a2.length, e2 = goog.isString(a2) ? a2.split("") : a2, f2 = 0; f2 < d2; f2++)
        if (f2 in e2 && b2.call(c2, e2[f2], f2, a2))
          return f2;
      return -1;
    };
    goog.array.findRight = function(a2, b2, c2) {
      b2 = goog.array.findIndexRight(a2, b2, c2);
      return 0 > b2 ? null : goog.isString(a2) ? a2.charAt(b2) : a2[b2];
    };
    goog.array.findIndexRight = function(a2, b2, c2) {
      var d2 = a2.length, e2 = goog.isString(a2) ? a2.split("") : a2;
      for (--d2; 0 <= d2; d2--)
        if (d2 in e2 && b2.call(c2, e2[d2], d2, a2))
          return d2;
      return -1;
    };
    goog.array.contains = function(a2, b2) {
      return 0 <= goog.array.indexOf(a2, b2);
    };
    goog.array.isEmpty = function(a2) {
      return 0 == a2.length;
    };
    goog.array.clear = function(a2) {
      if (!goog.isArray(a2))
        for (var b2 = a2.length - 1; 0 <= b2; b2--)
          delete a2[b2];
      a2.length = 0;
    };
    goog.array.insert = function(a2, b2) {
      goog.array.contains(a2, b2) || a2.push(b2);
    };
    goog.array.insertAt = function(a2, b2, c2) {
      goog.array.splice(a2, c2, 0, b2);
    };
    goog.array.insertArrayAt = function(a2, b2, c2) {
      goog.partial(goog.array.splice, a2, c2, 0).apply(null, b2);
    };
    goog.array.insertBefore = function(a2, b2, c2) {
      var d2;
      2 == arguments.length || 0 > (d2 = goog.array.indexOf(a2, c2)) ? a2.push(b2) : goog.array.insertAt(a2, b2, d2);
    };
    goog.array.remove = function(a2, b2) {
      b2 = goog.array.indexOf(a2, b2);
      var c2;
      (c2 = 0 <= b2) && goog.array.removeAt(a2, b2);
      return c2;
    };
    goog.array.removeLast = function(a2, b2) {
      b2 = goog.array.lastIndexOf(a2, b2);
      return 0 <= b2 ? (goog.array.removeAt(a2, b2), true) : false;
    };
    goog.array.removeAt = function(a2, b2) {
      goog.asserts.assert(null != a2.length);
      return 1 == Array.prototype.splice.call(a2, b2, 1).length;
    };
    goog.array.removeIf = function(a2, b2, c2) {
      b2 = goog.array.findIndex(a2, b2, c2);
      return 0 <= b2 ? (goog.array.removeAt(a2, b2), true) : false;
    };
    goog.array.removeAllIf = function(a2, b2, c2) {
      var d2 = 0;
      goog.array.forEachRight(a2, function(e2, f2) {
        b2.call(c2, e2, f2, a2) && goog.array.removeAt(a2, f2) && d2++;
      });
      return d2;
    };
    goog.array.concat = function(a2) {
      return Array.prototype.concat.apply([], arguments);
    };
    goog.array.join = function(a2) {
      return Array.prototype.concat.apply([], arguments);
    };
    goog.array.toArray = function(a2) {
      var b2 = a2.length;
      if (0 < b2) {
        for (var c2 = Array(b2), d2 = 0; d2 < b2; d2++)
          c2[d2] = a2[d2];
        return c2;
      }
      return [];
    };
    goog.array.clone = goog.array.toArray;
    goog.array.extend = function(a2, b2) {
      for (var c2 = 1; c2 < arguments.length; c2++) {
        var d2 = arguments[c2];
        if (goog.isArrayLike(d2)) {
          var e2 = a2.length || 0, f2 = d2.length || 0;
          a2.length = e2 + f2;
          for (var g = 0; g < f2; g++)
            a2[e2 + g] = d2[g];
        } else
          a2.push(d2);
      }
    };
    goog.array.splice = function(a2, b2, c2, d2) {
      goog.asserts.assert(null != a2.length);
      return Array.prototype.splice.apply(a2, goog.array.slice(arguments, 1));
    };
    goog.array.slice = function(a2, b2, c2) {
      goog.asserts.assert(null != a2.length);
      return 2 >= arguments.length ? Array.prototype.slice.call(a2, b2) : Array.prototype.slice.call(a2, b2, c2);
    };
    goog.array.removeDuplicates = function(a2, b2, c2) {
      b2 = b2 || a2;
      var d2 = function(a3) {
        return goog.isObject(a3) ? "o" + goog.getUid(a3) : (typeof a3).charAt(0) + a3;
      };
      c2 = c2 || d2;
      d2 = {};
      for (var e2 = 0, f2 = 0; f2 < a2.length; ) {
        var g = a2[f2++], h = c2(g);
        Object.prototype.hasOwnProperty.call(d2, h) || (d2[h] = true, b2[e2++] = g);
      }
      b2.length = e2;
    };
    goog.array.binarySearch = function(a2, b2, c2) {
      return goog.array.binarySearch_(a2, c2 || goog.array.defaultCompare, false, b2);
    };
    goog.array.binarySelect = function(a2, b2, c2) {
      return goog.array.binarySearch_(a2, b2, true, void 0, c2);
    };
    goog.array.binarySearch_ = function(a2, b2, c2, d2, e2) {
      for (var f2 = 0, g = a2.length, h; f2 < g; ) {
        var k = f2 + g >> 1;
        var l = c2 ? b2.call(e2, a2[k], k, a2) : b2(d2, a2[k]);
        0 < l ? f2 = k + 1 : (g = k, h = !l);
      }
      return h ? f2 : ~f2;
    };
    goog.array.sort = function(a2, b2) {
      a2.sort(b2 || goog.array.defaultCompare);
    };
    goog.array.stableSort = function(a2, b2) {
      for (var c2 = Array(a2.length), d2 = 0; d2 < a2.length; d2++)
        c2[d2] = { index: d2, value: a2[d2] };
      var e2 = b2 || goog.array.defaultCompare;
      goog.array.sort(c2, function(a3, b3) {
        return e2(a3.value, b3.value) || a3.index - b3.index;
      });
      for (d2 = 0; d2 < a2.length; d2++)
        a2[d2] = c2[d2].value;
    };
    goog.array.sortByKey = function(a2, b2, c2) {
      var d2 = c2 || goog.array.defaultCompare;
      goog.array.sort(a2, function(a3, c3) {
        return d2(b2(a3), b2(c3));
      });
    };
    goog.array.sortObjectsByKey = function(a2, b2, c2) {
      goog.array.sortByKey(a2, function(a3) {
        return a3[b2];
      }, c2);
    };
    goog.array.isSorted = function(a2, b2, c2) {
      b2 = b2 || goog.array.defaultCompare;
      for (var d2 = 1; d2 < a2.length; d2++) {
        var e2 = b2(a2[d2 - 1], a2[d2]);
        if (0 < e2 || 0 == e2 && c2)
          return false;
      }
      return true;
    };
    goog.array.equals = function(a2, b2, c2) {
      if (!goog.isArrayLike(a2) || !goog.isArrayLike(b2) || a2.length != b2.length)
        return false;
      var d2 = a2.length;
      c2 = c2 || goog.array.defaultCompareEquality;
      for (var e2 = 0; e2 < d2; e2++)
        if (!c2(a2[e2], b2[e2]))
          return false;
      return true;
    };
    goog.array.compare3 = function(a2, b2, c2) {
      c2 = c2 || goog.array.defaultCompare;
      for (var d2 = Math.min(a2.length, b2.length), e2 = 0; e2 < d2; e2++) {
        var f2 = c2(a2[e2], b2[e2]);
        if (0 != f2)
          return f2;
      }
      return goog.array.defaultCompare(a2.length, b2.length);
    };
    goog.array.defaultCompare = function(a2, b2) {
      return a2 > b2 ? 1 : a2 < b2 ? -1 : 0;
    };
    goog.array.inverseDefaultCompare = function(a2, b2) {
      return -goog.array.defaultCompare(a2, b2);
    };
    goog.array.defaultCompareEquality = function(a2, b2) {
      return a2 === b2;
    };
    goog.array.binaryInsert = function(a2, b2, c2) {
      c2 = goog.array.binarySearch(a2, b2, c2);
      return 0 > c2 ? (goog.array.insertAt(a2, b2, -(c2 + 1)), true) : false;
    };
    goog.array.binaryRemove = function(a2, b2, c2) {
      b2 = goog.array.binarySearch(a2, b2, c2);
      return 0 <= b2 ? goog.array.removeAt(a2, b2) : false;
    };
    goog.array.bucket = function(a2, b2, c2) {
      for (var d2 = {}, e2 = 0; e2 < a2.length; e2++) {
        var f2 = a2[e2], g = b2.call(c2, f2, e2, a2);
        goog.isDef(g) && (d2[g] || (d2[g] = [])).push(f2);
      }
      return d2;
    };
    goog.array.toObject = function(a2, b2, c2) {
      var d2 = {};
      goog.array.forEach(a2, function(e2, f2) {
        d2[b2.call(c2, e2, f2, a2)] = e2;
      });
      return d2;
    };
    goog.array.range = function(a2, b2, c2) {
      var d2 = [], e2 = 0, f2 = a2;
      c2 = c2 || 1;
      void 0 !== b2 && (e2 = a2, f2 = b2);
      if (0 > c2 * (f2 - e2))
        return [];
      if (0 < c2)
        for (a2 = e2; a2 < f2; a2 += c2)
          d2.push(a2);
      else
        for (a2 = e2; a2 > f2; a2 += c2)
          d2.push(a2);
      return d2;
    };
    goog.array.repeat = function(a2, b2) {
      for (var c2 = [], d2 = 0; d2 < b2; d2++)
        c2[d2] = a2;
      return c2;
    };
    goog.array.flatten = function(a2) {
      for (var b2 = [], c2 = 0; c2 < arguments.length; c2++) {
        var d2 = arguments[c2];
        if (goog.isArray(d2))
          for (var e2 = 0; e2 < d2.length; e2 += 8192) {
            var f2 = goog.array.slice(d2, e2, e2 + 8192);
            f2 = goog.array.flatten.apply(null, f2);
            for (var g = 0; g < f2.length; g++)
              b2.push(f2[g]);
          }
        else
          b2.push(d2);
      }
      return b2;
    };
    goog.array.rotate = function(a2, b2) {
      goog.asserts.assert(null != a2.length);
      a2.length && (b2 %= a2.length, 0 < b2 ? Array.prototype.unshift.apply(a2, a2.splice(-b2, b2)) : 0 > b2 && Array.prototype.push.apply(a2, a2.splice(0, -b2)));
      return a2;
    };
    goog.array.moveItem = function(a2, b2, c2) {
      goog.asserts.assert(0 <= b2 && b2 < a2.length);
      goog.asserts.assert(0 <= c2 && c2 < a2.length);
      b2 = Array.prototype.splice.call(a2, b2, 1);
      Array.prototype.splice.call(a2, c2, 0, b2[0]);
    };
    goog.array.zip = function(a2) {
      if (!arguments.length)
        return [];
      for (var b2 = [], c2 = arguments[0].length, d2 = 1; d2 < arguments.length; d2++)
        arguments[d2].length < c2 && (c2 = arguments[d2].length);
      for (d2 = 0; d2 < c2; d2++) {
        for (var e2 = [], f2 = 0; f2 < arguments.length; f2++)
          e2.push(arguments[f2][d2]);
        b2.push(e2);
      }
      return b2;
    };
    goog.array.shuffle = function(a2, b2) {
      b2 = b2 || Math.random;
      for (var c2 = a2.length - 1; 0 < c2; c2--) {
        var d2 = Math.floor(b2() * (c2 + 1)), e2 = a2[c2];
        a2[c2] = a2[d2];
        a2[d2] = e2;
      }
    };
    goog.array.copyByIndex = function(a2, b2) {
      var c2 = [];
      goog.array.forEach(b2, function(b3) {
        c2.push(a2[b3]);
      });
      return c2;
    };
    goog.array.concatMap = function(a2, b2, c2) {
      return goog.array.concat.apply([], goog.array.map(a2, b2, c2));
    };
    goog.crypt = {};
    goog.crypt.stringToByteArray = function(a2) {
      for (var b2 = [], c2 = 0, d2 = 0; d2 < a2.length; d2++) {
        var e2 = a2.charCodeAt(d2);
        255 < e2 && (b2[c2++] = e2 & 255, e2 >>= 8);
        b2[c2++] = e2;
      }
      return b2;
    };
    goog.crypt.byteArrayToString = function(a2) {
      if (8192 >= a2.length)
        return String.fromCharCode.apply(null, a2);
      for (var b2 = "", c2 = 0; c2 < a2.length; c2 += 8192) {
        var d2 = goog.array.slice(a2, c2, c2 + 8192);
        b2 += String.fromCharCode.apply(null, d2);
      }
      return b2;
    };
    goog.crypt.byteArrayToHex = function(a2, b2) {
      return goog.array.map(a2, function(a3) {
        a3 = a3.toString(16);
        return 1 < a3.length ? a3 : "0" + a3;
      }).join(b2 || "");
    };
    goog.crypt.hexToByteArray = function(a2) {
      goog.asserts.assert(0 == a2.length % 2, "Key string length must be multiple of 2");
      for (var b2 = [], c2 = 0; c2 < a2.length; c2 += 2)
        b2.push(parseInt(a2.substring(c2, c2 + 2), 16));
      return b2;
    };
    goog.crypt.stringToUtf8ByteArray = function(a2) {
      for (var b2 = [], c2 = 0, d2 = 0; d2 < a2.length; d2++) {
        var e2 = a2.charCodeAt(d2);
        128 > e2 ? b2[c2++] = e2 : (2048 > e2 ? b2[c2++] = e2 >> 6 | 192 : (55296 == (e2 & 64512) && d2 + 1 < a2.length && 56320 == (a2.charCodeAt(d2 + 1) & 64512) ? (e2 = 65536 + ((e2 & 1023) << 10) + (a2.charCodeAt(++d2) & 1023), b2[c2++] = e2 >> 18 | 240, b2[c2++] = e2 >> 12 & 63 | 128) : b2[c2++] = e2 >> 12 | 224, b2[c2++] = e2 >> 6 & 63 | 128), b2[c2++] = e2 & 63 | 128);
      }
      return b2;
    };
    goog.crypt.utf8ByteArrayToString = function(a2) {
      for (var b2 = [], c2 = 0, d2 = 0; c2 < a2.length; ) {
        var e2 = a2[c2++];
        if (128 > e2)
          b2[d2++] = String.fromCharCode(e2);
        else if (191 < e2 && 224 > e2) {
          var f2 = a2[c2++];
          b2[d2++] = String.fromCharCode((e2 & 31) << 6 | f2 & 63);
        } else if (239 < e2 && 365 > e2) {
          f2 = a2[c2++];
          var g = a2[c2++], h = a2[c2++];
          e2 = ((e2 & 7) << 18 | (f2 & 63) << 12 | (g & 63) << 6 | h & 63) - 65536;
          b2[d2++] = String.fromCharCode(55296 + (e2 >> 10));
          b2[d2++] = String.fromCharCode(56320 + (e2 & 1023));
        } else
          f2 = a2[c2++], g = a2[c2++], b2[d2++] = String.fromCharCode((e2 & 15) << 12 | (f2 & 63) << 6 | g & 63);
      }
      return b2.join("");
    };
    goog.crypt.xorByteArray = function(a2, b2) {
      goog.asserts.assert(a2.length == b2.length, "XOR array lengths must match");
      for (var c2 = [], d2 = 0; d2 < a2.length; d2++)
        c2.push(a2[d2] ^ b2[d2]);
      return c2;
    };
    goog.dom.asserts = {};
    goog.dom.asserts.assertIsLocation = function(a2) {
      if (goog.asserts.ENABLE_ASSERTS) {
        var b2 = goog.dom.asserts.getWindow_(a2);
        b2 && (!a2 || !(a2 instanceof b2.Location) && a2 instanceof b2.Element) && goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(a2));
      }
      return a2;
    };
    goog.dom.asserts.assertIsElementType_ = function(a2, b2) {
      if (goog.asserts.ENABLE_ASSERTS) {
        var c2 = goog.dom.asserts.getWindow_(a2);
        c2 && "undefined" != typeof c2[b2] && (a2 && (a2 instanceof c2[b2] || !(a2 instanceof c2.Location || a2 instanceof c2.Element)) || goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); got: %s", b2, goog.dom.asserts.debugStringForType_(a2)));
      }
      return a2;
    };
    goog.dom.asserts.assertIsHTMLAnchorElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLAnchorElement");
    };
    goog.dom.asserts.assertIsHTMLButtonElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLButtonElement");
    };
    goog.dom.asserts.assertIsHTMLLinkElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLLinkElement");
    };
    goog.dom.asserts.assertIsHTMLImageElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLImageElement");
    };
    goog.dom.asserts.assertIsHTMLAudioElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLAudioElement");
    };
    goog.dom.asserts.assertIsHTMLVideoElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLVideoElement");
    };
    goog.dom.asserts.assertIsHTMLInputElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLInputElement");
    };
    goog.dom.asserts.assertIsHTMLTextAreaElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLTextAreaElement");
    };
    goog.dom.asserts.assertIsHTMLCanvasElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLCanvasElement");
    };
    goog.dom.asserts.assertIsHTMLEmbedElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLEmbedElement");
    };
    goog.dom.asserts.assertIsHTMLFormElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLFormElement");
    };
    goog.dom.asserts.assertIsHTMLFrameElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLFrameElement");
    };
    goog.dom.asserts.assertIsHTMLIFrameElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLIFrameElement");
    };
    goog.dom.asserts.assertIsHTMLObjectElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLObjectElement");
    };
    goog.dom.asserts.assertIsHTMLScriptElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLScriptElement");
    };
    goog.dom.asserts.debugStringForType_ = function(a2) {
      if (goog.isObject(a2))
        try {
          return a2.constructor.displayName || a2.constructor.name || Object.prototype.toString.call(a2);
        } catch (b2) {
          return "<object could not be stringified>";
        }
      else
        return void 0 === a2 ? "undefined" : null === a2 ? "null" : typeof a2;
    };
    goog.dom.asserts.getWindow_ = function(a2) {
      try {
        var b2 = a2 && a2.ownerDocument, c2 = b2 && (b2.defaultView || b2.parentWindow);
        c2 = c2 || goog.global;
        if (c2.Element && c2.Location)
          return c2;
      } catch (d2) {
      }
      return null;
    };
    goog.functions = {};
    goog.functions.constant = function(a2) {
      return function() {
        return a2;
      };
    };
    goog.functions.FALSE = function() {
      return false;
    };
    goog.functions.TRUE = function() {
      return true;
    };
    goog.functions.NULL = function() {
      return null;
    };
    goog.functions.identity = function(a2, b2) {
      return a2;
    };
    goog.functions.error = function(a2) {
      return function() {
        throw Error(a2);
      };
    };
    goog.functions.fail = function(a2) {
      return function() {
        throw a2;
      };
    };
    goog.functions.lock = function(a2, b2) {
      b2 = b2 || 0;
      return function() {
        return a2.apply(this, Array.prototype.slice.call(arguments, 0, b2));
      };
    };
    goog.functions.nth = function(a2) {
      return function() {
        return arguments[a2];
      };
    };
    goog.functions.partialRight = function(a2, b2) {
      var c2 = Array.prototype.slice.call(arguments, 1);
      return function() {
        var b3 = Array.prototype.slice.call(arguments);
        b3.push.apply(b3, c2);
        return a2.apply(this, b3);
      };
    };
    goog.functions.withReturnValue = function(a2, b2) {
      return goog.functions.sequence(a2, goog.functions.constant(b2));
    };
    goog.functions.equalTo = function(a2, b2) {
      return function(c2) {
        return b2 ? a2 == c2 : a2 === c2;
      };
    };
    goog.functions.compose = function(a2, b2) {
      var c2 = arguments, d2 = c2.length;
      return function() {
        var a3;
        d2 && (a3 = c2[d2 - 1].apply(this, arguments));
        for (var b3 = d2 - 2; 0 <= b3; b3--)
          a3 = c2[b3].call(this, a3);
        return a3;
      };
    };
    goog.functions.sequence = function(a2) {
      var b2 = arguments, c2 = b2.length;
      return function() {
        for (var a3, e2 = 0; e2 < c2; e2++)
          a3 = b2[e2].apply(this, arguments);
        return a3;
      };
    };
    goog.functions.and = function(a2) {
      var b2 = arguments, c2 = b2.length;
      return function() {
        for (var a3 = 0; a3 < c2; a3++)
          if (!b2[a3].apply(this, arguments))
            return false;
        return true;
      };
    };
    goog.functions.or = function(a2) {
      var b2 = arguments, c2 = b2.length;
      return function() {
        for (var a3 = 0; a3 < c2; a3++)
          if (b2[a3].apply(this, arguments))
            return true;
        return false;
      };
    };
    goog.functions.not = function(a2) {
      return function() {
        return !a2.apply(this, arguments);
      };
    };
    goog.functions.create = function(a2, b2) {
      var c2 = function() {
      };
      c2.prototype = a2.prototype;
      c2 = new c2();
      a2.apply(c2, Array.prototype.slice.call(arguments, 1));
      return c2;
    };
    goog.functions.CACHE_RETURN_VALUE = true;
    goog.functions.cacheReturnValue = function(a2) {
      var b2 = false, c2;
      return function() {
        if (!goog.functions.CACHE_RETURN_VALUE)
          return a2();
        b2 || (c2 = a2(), b2 = true);
        return c2;
      };
    };
    goog.functions.once = function(a2) {
      var b2 = a2;
      return function() {
        if (b2) {
          var a3 = b2;
          b2 = null;
          a3();
        }
      };
    };
    goog.functions.debounce = function(a2, b2, c2) {
      var d2 = 0;
      return function(e2) {
        goog.global.clearTimeout(d2);
        var f2 = arguments;
        d2 = goog.global.setTimeout(function() {
          a2.apply(c2, f2);
        }, b2);
      };
    };
    goog.functions.throttle = function(a2, b2, c2) {
      var d2 = 0, e2 = false, f2 = [], g = function() {
        d2 = 0;
        e2 && (e2 = false, h());
      }, h = function() {
        d2 = goog.global.setTimeout(g, b2);
        a2.apply(c2, f2);
      };
      return function(a3) {
        f2 = arguments;
        d2 ? e2 = true : h();
      };
    };
    goog.functions.rateLimit = function(a2, b2, c2) {
      var d2 = 0, e2 = function() {
        d2 = 0;
      };
      return function(f2) {
        d2 || (d2 = goog.global.setTimeout(e2, b2), a2.apply(c2, arguments));
      };
    };
    goog.dom.HtmlElement = function() {
    };
    goog.dom.TagName = function(a2) {
      this.tagName_ = a2;
    };
    goog.dom.TagName.prototype.toString = function() {
      return this.tagName_;
    };
    goog.dom.TagName.A = new goog.dom.TagName("A");
    goog.dom.TagName.ABBR = new goog.dom.TagName("ABBR");
    goog.dom.TagName.ACRONYM = new goog.dom.TagName("ACRONYM");
    goog.dom.TagName.ADDRESS = new goog.dom.TagName("ADDRESS");
    goog.dom.TagName.APPLET = new goog.dom.TagName("APPLET");
    goog.dom.TagName.AREA = new goog.dom.TagName("AREA");
    goog.dom.TagName.ARTICLE = new goog.dom.TagName("ARTICLE");
    goog.dom.TagName.ASIDE = new goog.dom.TagName("ASIDE");
    goog.dom.TagName.AUDIO = new goog.dom.TagName("AUDIO");
    goog.dom.TagName.B = new goog.dom.TagName("B");
    goog.dom.TagName.BASE = new goog.dom.TagName("BASE");
    goog.dom.TagName.BASEFONT = new goog.dom.TagName("BASEFONT");
    goog.dom.TagName.BDI = new goog.dom.TagName("BDI");
    goog.dom.TagName.BDO = new goog.dom.TagName("BDO");
    goog.dom.TagName.BIG = new goog.dom.TagName("BIG");
    goog.dom.TagName.BLOCKQUOTE = new goog.dom.TagName("BLOCKQUOTE");
    goog.dom.TagName.BODY = new goog.dom.TagName("BODY");
    goog.dom.TagName.BR = new goog.dom.TagName("BR");
    goog.dom.TagName.BUTTON = new goog.dom.TagName("BUTTON");
    goog.dom.TagName.CANVAS = new goog.dom.TagName("CANVAS");
    goog.dom.TagName.CAPTION = new goog.dom.TagName("CAPTION");
    goog.dom.TagName.CENTER = new goog.dom.TagName("CENTER");
    goog.dom.TagName.CITE = new goog.dom.TagName("CITE");
    goog.dom.TagName.CODE = new goog.dom.TagName("CODE");
    goog.dom.TagName.COL = new goog.dom.TagName("COL");
    goog.dom.TagName.COLGROUP = new goog.dom.TagName("COLGROUP");
    goog.dom.TagName.COMMAND = new goog.dom.TagName("COMMAND");
    goog.dom.TagName.DATA = new goog.dom.TagName("DATA");
    goog.dom.TagName.DATALIST = new goog.dom.TagName("DATALIST");
    goog.dom.TagName.DD = new goog.dom.TagName("DD");
    goog.dom.TagName.DEL = new goog.dom.TagName("DEL");
    goog.dom.TagName.DETAILS = new goog.dom.TagName("DETAILS");
    goog.dom.TagName.DFN = new goog.dom.TagName("DFN");
    goog.dom.TagName.DIALOG = new goog.dom.TagName("DIALOG");
    goog.dom.TagName.DIR = new goog.dom.TagName("DIR");
    goog.dom.TagName.DIV = new goog.dom.TagName("DIV");
    goog.dom.TagName.DL = new goog.dom.TagName("DL");
    goog.dom.TagName.DT = new goog.dom.TagName("DT");
    goog.dom.TagName.EM = new goog.dom.TagName("EM");
    goog.dom.TagName.EMBED = new goog.dom.TagName("EMBED");
    goog.dom.TagName.FIELDSET = new goog.dom.TagName("FIELDSET");
    goog.dom.TagName.FIGCAPTION = new goog.dom.TagName("FIGCAPTION");
    goog.dom.TagName.FIGURE = new goog.dom.TagName("FIGURE");
    goog.dom.TagName.FONT = new goog.dom.TagName("FONT");
    goog.dom.TagName.FOOTER = new goog.dom.TagName("FOOTER");
    goog.dom.TagName.FORM = new goog.dom.TagName("FORM");
    goog.dom.TagName.FRAME = new goog.dom.TagName("FRAME");
    goog.dom.TagName.FRAMESET = new goog.dom.TagName("FRAMESET");
    goog.dom.TagName.H1 = new goog.dom.TagName("H1");
    goog.dom.TagName.H2 = new goog.dom.TagName("H2");
    goog.dom.TagName.H3 = new goog.dom.TagName("H3");
    goog.dom.TagName.H4 = new goog.dom.TagName("H4");
    goog.dom.TagName.H5 = new goog.dom.TagName("H5");
    goog.dom.TagName.H6 = new goog.dom.TagName("H6");
    goog.dom.TagName.HEAD = new goog.dom.TagName("HEAD");
    goog.dom.TagName.HEADER = new goog.dom.TagName("HEADER");
    goog.dom.TagName.HGROUP = new goog.dom.TagName("HGROUP");
    goog.dom.TagName.HR = new goog.dom.TagName("HR");
    goog.dom.TagName.HTML = new goog.dom.TagName("HTML");
    goog.dom.TagName.I = new goog.dom.TagName("I");
    goog.dom.TagName.IFRAME = new goog.dom.TagName("IFRAME");
    goog.dom.TagName.IMG = new goog.dom.TagName("IMG");
    goog.dom.TagName.INPUT = new goog.dom.TagName("INPUT");
    goog.dom.TagName.INS = new goog.dom.TagName("INS");
    goog.dom.TagName.ISINDEX = new goog.dom.TagName("ISINDEX");
    goog.dom.TagName.KBD = new goog.dom.TagName("KBD");
    goog.dom.TagName.KEYGEN = new goog.dom.TagName("KEYGEN");
    goog.dom.TagName.LABEL = new goog.dom.TagName("LABEL");
    goog.dom.TagName.LEGEND = new goog.dom.TagName("LEGEND");
    goog.dom.TagName.LI = new goog.dom.TagName("LI");
    goog.dom.TagName.LINK = new goog.dom.TagName("LINK");
    goog.dom.TagName.MAIN = new goog.dom.TagName("MAIN");
    goog.dom.TagName.MAP = new goog.dom.TagName("MAP");
    goog.dom.TagName.MARK = new goog.dom.TagName("MARK");
    goog.dom.TagName.MATH = new goog.dom.TagName("MATH");
    goog.dom.TagName.MENU = new goog.dom.TagName("MENU");
    goog.dom.TagName.MENUITEM = new goog.dom.TagName("MENUITEM");
    goog.dom.TagName.META = new goog.dom.TagName("META");
    goog.dom.TagName.METER = new goog.dom.TagName("METER");
    goog.dom.TagName.NAV = new goog.dom.TagName("NAV");
    goog.dom.TagName.NOFRAMES = new goog.dom.TagName("NOFRAMES");
    goog.dom.TagName.NOSCRIPT = new goog.dom.TagName("NOSCRIPT");
    goog.dom.TagName.OBJECT = new goog.dom.TagName("OBJECT");
    goog.dom.TagName.OL = new goog.dom.TagName("OL");
    goog.dom.TagName.OPTGROUP = new goog.dom.TagName("OPTGROUP");
    goog.dom.TagName.OPTION = new goog.dom.TagName("OPTION");
    goog.dom.TagName.OUTPUT = new goog.dom.TagName("OUTPUT");
    goog.dom.TagName.P = new goog.dom.TagName("P");
    goog.dom.TagName.PARAM = new goog.dom.TagName("PARAM");
    goog.dom.TagName.PICTURE = new goog.dom.TagName("PICTURE");
    goog.dom.TagName.PRE = new goog.dom.TagName("PRE");
    goog.dom.TagName.PROGRESS = new goog.dom.TagName("PROGRESS");
    goog.dom.TagName.Q = new goog.dom.TagName("Q");
    goog.dom.TagName.RP = new goog.dom.TagName("RP");
    goog.dom.TagName.RT = new goog.dom.TagName("RT");
    goog.dom.TagName.RTC = new goog.dom.TagName("RTC");
    goog.dom.TagName.RUBY = new goog.dom.TagName("RUBY");
    goog.dom.TagName.S = new goog.dom.TagName("S");
    goog.dom.TagName.SAMP = new goog.dom.TagName("SAMP");
    goog.dom.TagName.SCRIPT = new goog.dom.TagName("SCRIPT");
    goog.dom.TagName.SECTION = new goog.dom.TagName("SECTION");
    goog.dom.TagName.SELECT = new goog.dom.TagName("SELECT");
    goog.dom.TagName.SMALL = new goog.dom.TagName("SMALL");
    goog.dom.TagName.SOURCE = new goog.dom.TagName("SOURCE");
    goog.dom.TagName.SPAN = new goog.dom.TagName("SPAN");
    goog.dom.TagName.STRIKE = new goog.dom.TagName("STRIKE");
    goog.dom.TagName.STRONG = new goog.dom.TagName("STRONG");
    goog.dom.TagName.STYLE = new goog.dom.TagName("STYLE");
    goog.dom.TagName.SUB = new goog.dom.TagName("SUB");
    goog.dom.TagName.SUMMARY = new goog.dom.TagName("SUMMARY");
    goog.dom.TagName.SUP = new goog.dom.TagName("SUP");
    goog.dom.TagName.SVG = new goog.dom.TagName("SVG");
    goog.dom.TagName.TABLE = new goog.dom.TagName("TABLE");
    goog.dom.TagName.TBODY = new goog.dom.TagName("TBODY");
    goog.dom.TagName.TD = new goog.dom.TagName("TD");
    goog.dom.TagName.TEMPLATE = new goog.dom.TagName("TEMPLATE");
    goog.dom.TagName.TEXTAREA = new goog.dom.TagName("TEXTAREA");
    goog.dom.TagName.TFOOT = new goog.dom.TagName("TFOOT");
    goog.dom.TagName.TH = new goog.dom.TagName("TH");
    goog.dom.TagName.THEAD = new goog.dom.TagName("THEAD");
    goog.dom.TagName.TIME = new goog.dom.TagName("TIME");
    goog.dom.TagName.TITLE = new goog.dom.TagName("TITLE");
    goog.dom.TagName.TR = new goog.dom.TagName("TR");
    goog.dom.TagName.TRACK = new goog.dom.TagName("TRACK");
    goog.dom.TagName.TT = new goog.dom.TagName("TT");
    goog.dom.TagName.U = new goog.dom.TagName("U");
    goog.dom.TagName.UL = new goog.dom.TagName("UL");
    goog.dom.TagName.VAR = new goog.dom.TagName("VAR");
    goog.dom.TagName.VIDEO = new goog.dom.TagName("VIDEO");
    goog.dom.TagName.WBR = new goog.dom.TagName("WBR");
    goog.dom.tags = {};
    goog.dom.tags.VOID_TAGS_ = { area: true, base: true, br: true, col: true, command: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true };
    goog.dom.tags.isVoidTag = function(a2) {
      return true === goog.dom.tags.VOID_TAGS_[a2];
    };
    goog.html = {};
    goog.html.trustedtypes = {};
    goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#html") : null;
    goog.string = {};
    goog.string.TypedString = function() {
    };
    goog.string.Const = function(a2, b2) {
      this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = a2 === goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ && b2 || "";
      this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
    };
    goog.string.Const.prototype.implementsGoogStringTypedString = true;
    goog.string.Const.prototype.getTypedStringValue = function() {
      return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
    };
    goog.string.Const.prototype.toString = function() {
      return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
    };
    goog.string.Const.unwrap = function(a2) {
      if (a2 instanceof goog.string.Const && a2.constructor === goog.string.Const && a2.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_)
        return a2.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
      goog.asserts.fail("expected object of type Const, got '" + a2 + "'");
      return "type_error:Const";
    };
    goog.string.Const.from = function(a2) {
      return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_, a2);
    };
    goog.string.Const.TYPE_MARKER_ = {};
    goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ = {};
    goog.string.Const.EMPTY = goog.string.Const.from("");
    goog.html.SafeScript = function() {
      this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = "";
      this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
    };
    goog.html.SafeScript.prototype.implementsGoogStringTypedString = true;
    goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
    goog.html.SafeScript.fromConstant = function(a2) {
      a2 = goog.string.Const.unwrap(a2);
      return 0 === a2.length ? goog.html.SafeScript.EMPTY : goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeScript.fromConstantAndArgs = function(a2, b2) {
      for (var c2 = [], d2 = 1; d2 < arguments.length; d2++)
        c2.push(goog.html.SafeScript.stringify_(arguments[d2]));
      return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("(" + goog.string.Const.unwrap(a2) + ")(" + c2.join(", ") + ");");
    };
    goog.html.SafeScript.fromJson = function(a2) {
      return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(goog.html.SafeScript.stringify_(a2));
    };
    goog.html.SafeScript.prototype.getTypedStringValue = function() {
      return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();
    };
    goog.DEBUG && (goog.html.SafeScript.prototype.toString = function() {
      return "SafeScript{" + this.privateDoNotAccessOrElseSafeScriptWrappedValue_ + "}";
    });
    goog.html.SafeScript.unwrap = function(a2) {
      return goog.html.SafeScript.unwrapTrustedScript(a2).toString();
    };
    goog.html.SafeScript.unwrapTrustedScript = function(a2) {
      if (a2 instanceof goog.html.SafeScript && a2.constructor === goog.html.SafeScript && a2.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)
        return a2.privateDoNotAccessOrElseSafeScriptWrappedValue_;
      goog.asserts.fail("expected object of type SafeScript, got '" + a2 + "' of type " + goog.typeOf(a2));
      return "type_error:SafeScript";
    };
    goog.html.SafeScript.stringify_ = function(a2) {
      return JSON.stringify(a2).replace(/</g, "\\x3c");
    };
    goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function(a2) {
      return new goog.html.SafeScript().initSecurityPrivateDoNotAccessOrElse_(a2);
    };
    goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(a2) {
      this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScript(a2) : a2;
      return this;
    };
    goog.html.SafeScript.EMPTY = goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");
    goog.fs = {};
    goog.fs.url = {};
    goog.fs.url.createObjectUrl = function(a2) {
      return goog.fs.url.getUrlObject_().createObjectURL(a2);
    };
    goog.fs.url.revokeObjectUrl = function(a2) {
      goog.fs.url.getUrlObject_().revokeObjectURL(a2);
    };
    goog.fs.url.getUrlObject_ = function() {
      var a2 = goog.fs.url.findUrlObject_();
      if (null != a2)
        return a2;
      throw Error("This browser doesn't seem to support blob URLs");
    };
    goog.fs.url.findUrlObject_ = function() {
      return goog.isDef(goog.global.URL) && goog.isDef(goog.global.URL.createObjectURL) ? goog.global.URL : goog.isDef(goog.global.webkitURL) && goog.isDef(goog.global.webkitURL.createObjectURL) ? goog.global.webkitURL : goog.isDef(goog.global.createObjectURL) ? goog.global : null;
    };
    goog.fs.url.browserSupportsObjectUrls = function() {
      return null != goog.fs.url.findUrlObject_();
    };
    goog.i18n = {};
    goog.i18n.bidi = {};
    goog.i18n.bidi.FORCE_RTL = false;
    goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || ("ar" == goog.LOCALE.substring(0, 2).toLowerCase() || "fa" == goog.LOCALE.substring(0, 2).toLowerCase() || "he" == goog.LOCALE.substring(0, 2).toLowerCase() || "iw" == goog.LOCALE.substring(0, 2).toLowerCase() || "ps" == goog.LOCALE.substring(0, 2).toLowerCase() || "sd" == goog.LOCALE.substring(0, 2).toLowerCase() || "ug" == goog.LOCALE.substring(0, 2).toLowerCase() || "ur" == goog.LOCALE.substring(0, 2).toLowerCase() || "yi" == goog.LOCALE.substring(0, 2).toLowerCase()) && (2 == goog.LOCALE.length || "-" == goog.LOCALE.substring(2, 3) || "_" == goog.LOCALE.substring(2, 3)) || 3 <= goog.LOCALE.length && "ckb" == goog.LOCALE.substring(0, 3).toLowerCase() && (3 == goog.LOCALE.length || "-" == goog.LOCALE.substring(3, 4) || "_" == goog.LOCALE.substring(3, 4)) || 7 <= goog.LOCALE.length && ("-" == goog.LOCALE.substring(2, 3) || "_" == goog.LOCALE.substring(2, 3)) && ("adlm" == goog.LOCALE.substring(3, 7).toLowerCase() || "arab" == goog.LOCALE.substring(3, 7).toLowerCase() || "hebr" == goog.LOCALE.substring(3, 7).toLowerCase() || "nkoo" == goog.LOCALE.substring(3, 7).toLowerCase() || "rohg" == goog.LOCALE.substring(3, 7).toLowerCase() || "thaa" == goog.LOCALE.substring(3, 7).toLowerCase()) || 8 <= goog.LOCALE.length && ("-" == goog.LOCALE.substring(3, 4) || "_" == goog.LOCALE.substring(3, 4)) && ("adlm" == goog.LOCALE.substring(4, 8).toLowerCase() || "arab" == goog.LOCALE.substring(4, 8).toLowerCase() || "hebr" == goog.LOCALE.substring(4, 8).toLowerCase() || "nkoo" == goog.LOCALE.substring(4, 8).toLowerCase() || "rohg" == goog.LOCALE.substring(4, 8).toLowerCase() || "thaa" == goog.LOCALE.substring(4, 8).toLowerCase());
    goog.i18n.bidi.Format = { LRE: "\u202A", RLE: "\u202B", PDF: "\u202C", LRM: "\u200E", RLM: "\u200F" };
    goog.i18n.bidi.Dir = { LTR: 1, RTL: -1, NEUTRAL: 0 };
    goog.i18n.bidi.RIGHT = "right";
    goog.i18n.bidi.LEFT = "left";
    goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
    goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
    goog.i18n.bidi.toDir = function(a2, b2) {
      return "number" == typeof a2 ? 0 < a2 ? goog.i18n.bidi.Dir.LTR : 0 > a2 ? goog.i18n.bidi.Dir.RTL : b2 ? null : goog.i18n.bidi.Dir.NEUTRAL : null == a2 ? null : a2 ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    };
    goog.i18n.bidi.ltrChars_ = "A-Za-z\xC0-\xD6\xD8-\xF6\xF8-\u02B8\u0300-\u0590\u0900-\u1FFF\u200E\u2C00-\uD801\uD804-\uD839\uD83C-\uDBFF\uF900-\uFB1C\uFE00-\uFE6F\uFEFD-\uFFFF";
    goog.i18n.bidi.rtlChars_ = "\u0591-\u06EF\u06FA-\u08FF\u200F\uD802-\uD803\uD83A-\uD83B\uFB1D-\uFDFF\uFE70-\uFEFC";
    goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
    goog.i18n.bidi.stripHtmlIfNeeded_ = function(a2, b2) {
      return b2 ? a2.replace(goog.i18n.bidi.htmlSkipReg_, "") : a2;
    };
    goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
    goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
    goog.i18n.bidi.hasAnyRtl = function(a2, b2) {
      return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a2, b2));
    };
    goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
    goog.i18n.bidi.hasAnyLtr = function(a2, b2) {
      return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a2, b2));
    };
    goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
    goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
    goog.i18n.bidi.isRtlChar = function(a2) {
      return goog.i18n.bidi.rtlRe_.test(a2);
    };
    goog.i18n.bidi.isLtrChar = function(a2) {
      return goog.i18n.bidi.ltrRe_.test(a2);
    };
    goog.i18n.bidi.isNeutralChar = function(a2) {
      return !goog.i18n.bidi.isLtrChar(a2) && !goog.i18n.bidi.isRtlChar(a2);
    };
    goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
    goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
    goog.i18n.bidi.startsWithRtl = function(a2, b2) {
      return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a2, b2));
    };
    goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
    goog.i18n.bidi.startsWithLtr = function(a2, b2) {
      return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a2, b2));
    };
    goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
    goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
    goog.i18n.bidi.isNeutralText = function(a2, b2) {
      a2 = goog.i18n.bidi.stripHtmlIfNeeded_(a2, b2);
      return goog.i18n.bidi.isRequiredLtrRe_.test(a2) || !goog.i18n.bidi.hasAnyLtr(a2) && !goog.i18n.bidi.hasAnyRtl(a2);
    };
    goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
    goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
    goog.i18n.bidi.endsWithLtr = function(a2, b2) {
      return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a2, b2));
    };
    goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
    goog.i18n.bidi.endsWithRtl = function(a2, b2) {
      return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a2, b2));
    };
    goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
    goog.i18n.bidi.rtlLocalesRe_ = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
    goog.i18n.bidi.isRtlLanguage = function(a2) {
      return goog.i18n.bidi.rtlLocalesRe_.test(a2);
    };
    goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
    goog.i18n.bidi.guardBracketInText = function(a2, b2) {
      b2 = (void 0 === b2 ? goog.i18n.bidi.hasAnyRtl(a2) : b2) ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
      return a2.replace(goog.i18n.bidi.bracketGuardTextRe_, b2 + "$&" + b2);
    };
    goog.i18n.bidi.enforceRtlInHtml = function(a2) {
      return "<" == a2.charAt(0) ? a2.replace(/<\w+/, "$& dir=rtl") : "\n<span dir=rtl>" + a2 + "</span>";
    };
    goog.i18n.bidi.enforceRtlInText = function(a2) {
      return goog.i18n.bidi.Format.RLE + a2 + goog.i18n.bidi.Format.PDF;
    };
    goog.i18n.bidi.enforceLtrInHtml = function(a2) {
      return "<" == a2.charAt(0) ? a2.replace(/<\w+/, "$& dir=ltr") : "\n<span dir=ltr>" + a2 + "</span>";
    };
    goog.i18n.bidi.enforceLtrInText = function(a2) {
      return goog.i18n.bidi.Format.LRE + a2 + goog.i18n.bidi.Format.PDF;
    };
    goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
    goog.i18n.bidi.leftRe_ = /left/gi;
    goog.i18n.bidi.rightRe_ = /right/gi;
    goog.i18n.bidi.tempRe_ = /%%%%/g;
    goog.i18n.bidi.mirrorCSS = function(a2) {
      return a2.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
    };
    goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
    goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
    goog.i18n.bidi.normalizeHebrewQuote = function(a2) {
      return a2.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05F4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05F3");
    };
    goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
    goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
    goog.i18n.bidi.rtlDetectionThreshold_ = 0.4;
    goog.i18n.bidi.estimateDirection = function(a2, b2) {
      var c2 = 0, d2 = 0, e2 = false;
      a2 = goog.i18n.bidi.stripHtmlIfNeeded_(a2, b2).split(goog.i18n.bidi.wordSeparatorRe_);
      for (b2 = 0; b2 < a2.length; b2++) {
        var f2 = a2[b2];
        goog.i18n.bidi.startsWithRtl(f2) ? (c2++, d2++) : goog.i18n.bidi.isRequiredLtrRe_.test(f2) ? e2 = true : goog.i18n.bidi.hasAnyLtr(f2) ? d2++ : goog.i18n.bidi.hasNumeralsRe_.test(f2) && (e2 = true);
      }
      return 0 == d2 ? e2 ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : c2 / d2 > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    };
    goog.i18n.bidi.detectRtlDirectionality = function(a2, b2) {
      return goog.i18n.bidi.estimateDirection(a2, b2) == goog.i18n.bidi.Dir.RTL;
    };
    goog.i18n.bidi.setElementDirAndAlign = function(a2, b2) {
      a2 && (b2 = goog.i18n.bidi.toDir(b2)) && (a2.style.textAlign = b2 == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT, a2.dir = b2 == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr");
    };
    goog.i18n.bidi.setElementDirByTextDirectionality = function(a2, b2) {
      switch (goog.i18n.bidi.estimateDirection(b2)) {
        case goog.i18n.bidi.Dir.LTR:
          a2.dir = "ltr";
          break;
        case goog.i18n.bidi.Dir.RTL:
          a2.dir = "rtl";
          break;
        default:
          a2.removeAttribute("dir");
      }
    };
    goog.i18n.bidi.DirectionalString = function() {
    };
    goog.html.TrustedResourceUrl = function() {
      this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = "";
      this.trustedURL_ = null;
      this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
    };
    goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;
    goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
      return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString();
    };
    goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
    goog.html.TrustedResourceUrl.prototype.getDirection = function() {
      return goog.i18n.bidi.Dir.LTR;
    };
    goog.html.TrustedResourceUrl.prototype.cloneWithParams = function(a2, b2) {
      var c2 = goog.html.TrustedResourceUrl.unwrap(this);
      c2 = goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(c2);
      var d2 = c2[3] || "";
      return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(c2[1] + goog.html.TrustedResourceUrl.stringifyParams_("?", c2[2] || "", a2) + goog.html.TrustedResourceUrl.stringifyParams_("#", d2, b2));
    };
    goog.DEBUG && (goog.html.TrustedResourceUrl.prototype.toString = function() {
      return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
    });
    goog.html.TrustedResourceUrl.unwrap = function(a2) {
      return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(a2).toString();
    };
    goog.html.TrustedResourceUrl.unwrapTrustedScriptURL = function(a2) {
      if (a2 instanceof goog.html.TrustedResourceUrl && a2.constructor === goog.html.TrustedResourceUrl && a2.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)
        return a2.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
      goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + a2 + "' of type " + goog.typeOf(a2));
      return "type_error:TrustedResourceUrl";
    };
    goog.html.TrustedResourceUrl.unwrapTrustedURL = function(a2) {
      return a2.trustedURL_ ? a2.trustedURL_ : goog.html.TrustedResourceUrl.unwrap(a2);
    };
    goog.html.TrustedResourceUrl.format = function(a2, b2) {
      var c2 = goog.string.Const.unwrap(a2);
      if (!goog.html.TrustedResourceUrl.BASE_URL_.test(c2))
        throw Error("Invalid TrustedResourceUrl format: " + c2);
      a2 = c2.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(a3, e2) {
        if (!Object.prototype.hasOwnProperty.call(b2, e2))
          throw Error('Found marker, "' + e2 + '", in format string, "' + c2 + '", but no valid label mapping found in args: ' + JSON.stringify(b2));
        a3 = b2[e2];
        return a3 instanceof goog.string.Const ? goog.string.Const.unwrap(a3) : encodeURIComponent(String(a3));
      });
      return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\w+)}/g;
    goog.html.TrustedResourceUrl.BASE_URL_ = /^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i;
    goog.html.TrustedResourceUrl.URL_PARAM_PARSER_ = /^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/;
    goog.html.TrustedResourceUrl.formatWithParams = function(a2, b2, c2, d2) {
      return goog.html.TrustedResourceUrl.format(a2, b2).cloneWithParams(c2, d2);
    };
    goog.html.TrustedResourceUrl.fromConstant = function(a2) {
      return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a2));
    };
    goog.html.TrustedResourceUrl.fromConstants = function(a2) {
      for (var b2 = "", c2 = 0; c2 < a2.length; c2++)
        b2 += goog.string.Const.unwrap(a2[c2]);
      return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b2);
    };
    goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
    goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(a2) {
      var b2 = new goog.html.TrustedResourceUrl();
      b2.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScriptURL(a2) : a2;
      goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY && (b2.trustedURL_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createURL(a2));
      return b2;
    };
    goog.html.TrustedResourceUrl.stringifyParams_ = function(a2, b2, c2) {
      if (null == c2)
        return b2;
      if (goog.isString(c2))
        return c2 ? a2 + encodeURIComponent(c2) : "";
      for (var d2 in c2) {
        var e2 = c2[d2];
        e2 = goog.isArray(e2) ? e2 : [e2];
        for (var f2 = 0; f2 < e2.length; f2++) {
          var g = e2[f2];
          null != g && (b2 || (b2 = a2), b2 += (b2.length > a2.length ? "&" : "") + encodeURIComponent(d2) + "=" + encodeURIComponent(String(g)));
        }
      }
      return b2;
    };
    goog.string.internal = {};
    goog.string.internal.startsWith = function(a2, b2) {
      return 0 == a2.lastIndexOf(b2, 0);
    };
    goog.string.internal.endsWith = function(a2, b2) {
      var c2 = a2.length - b2.length;
      return 0 <= c2 && a2.indexOf(b2, c2) == c2;
    };
    goog.string.internal.caseInsensitiveStartsWith = function(a2, b2) {
      return 0 == goog.string.internal.caseInsensitiveCompare(b2, a2.substr(0, b2.length));
    };
    goog.string.internal.caseInsensitiveEndsWith = function(a2, b2) {
      return 0 == goog.string.internal.caseInsensitiveCompare(b2, a2.substr(a2.length - b2.length, b2.length));
    };
    goog.string.internal.caseInsensitiveEquals = function(a2, b2) {
      return a2.toLowerCase() == b2.toLowerCase();
    };
    goog.string.internal.isEmptyOrWhitespace = function(a2) {
      return /^[\s\xa0]*$/.test(a2);
    };
    goog.string.internal.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(a2) {
      return a2.trim();
    } : function(a2) {
      return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a2)[1];
    };
    goog.string.internal.caseInsensitiveCompare = function(a2, b2) {
      a2 = String(a2).toLowerCase();
      b2 = String(b2).toLowerCase();
      return a2 < b2 ? -1 : a2 == b2 ? 0 : 1;
    };
    goog.string.internal.newLineToBr = function(a2, b2) {
      return a2.replace(/(\r\n|\r|\n)/g, b2 ? "<br />" : "<br>");
    };
    goog.string.internal.htmlEscape = function(a2, b2) {
      if (b2)
        a2 = a2.replace(goog.string.internal.AMP_RE_, "&amp;").replace(goog.string.internal.LT_RE_, "&lt;").replace(goog.string.internal.GT_RE_, "&gt;").replace(goog.string.internal.QUOT_RE_, "&quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_, "&#39;").replace(goog.string.internal.NULL_RE_, "&#0;");
      else {
        if (!goog.string.internal.ALL_RE_.test(a2))
          return a2;
        -1 != a2.indexOf("&") && (a2 = a2.replace(goog.string.internal.AMP_RE_, "&amp;"));
        -1 != a2.indexOf("<") && (a2 = a2.replace(goog.string.internal.LT_RE_, "&lt;"));
        -1 != a2.indexOf(">") && (a2 = a2.replace(goog.string.internal.GT_RE_, "&gt;"));
        -1 != a2.indexOf('"') && (a2 = a2.replace(goog.string.internal.QUOT_RE_, "&quot;"));
        -1 != a2.indexOf("'") && (a2 = a2.replace(goog.string.internal.SINGLE_QUOTE_RE_, "&#39;"));
        -1 != a2.indexOf("\0") && (a2 = a2.replace(goog.string.internal.NULL_RE_, "&#0;"));
      }
      return a2;
    };
    goog.string.internal.AMP_RE_ = /&/g;
    goog.string.internal.LT_RE_ = /</g;
    goog.string.internal.GT_RE_ = />/g;
    goog.string.internal.QUOT_RE_ = /"/g;
    goog.string.internal.SINGLE_QUOTE_RE_ = /'/g;
    goog.string.internal.NULL_RE_ = /\x00/g;
    goog.string.internal.ALL_RE_ = /[\x00&<>"']/;
    goog.string.internal.whitespaceEscape = function(a2, b2) {
      return goog.string.internal.newLineToBr(a2.replace(/  /g, " &#160;"), b2);
    };
    goog.string.internal.contains = function(a2, b2) {
      return -1 != a2.indexOf(b2);
    };
    goog.string.internal.caseInsensitiveContains = function(a2, b2) {
      return goog.string.internal.contains(a2.toLowerCase(), b2.toLowerCase());
    };
    goog.string.internal.compareVersions = function(a2, b2) {
      var c2 = 0;
      a2 = goog.string.internal.trim(String(a2)).split(".");
      b2 = goog.string.internal.trim(String(b2)).split(".");
      for (var d2 = Math.max(a2.length, b2.length), e2 = 0; 0 == c2 && e2 < d2; e2++) {
        var f2 = a2[e2] || "", g = b2[e2] || "";
        do {
          f2 = /(\d*)(\D*)(.*)/.exec(f2) || ["", "", "", ""];
          g = /(\d*)(\D*)(.*)/.exec(g) || ["", "", "", ""];
          if (0 == f2[0].length && 0 == g[0].length)
            break;
          c2 = 0 == f2[1].length ? 0 : parseInt(f2[1], 10);
          var h = 0 == g[1].length ? 0 : parseInt(g[1], 10);
          c2 = goog.string.internal.compareElements_(c2, h) || goog.string.internal.compareElements_(0 == f2[2].length, 0 == g[2].length) || goog.string.internal.compareElements_(f2[2], g[2]);
          f2 = f2[3];
          g = g[3];
        } while (0 == c2);
      }
      return c2;
    };
    goog.string.internal.compareElements_ = function(a2, b2) {
      return a2 < b2 ? -1 : a2 > b2 ? 1 : 0;
    };
    goog.html.SafeUrl = function() {
      this.privateDoNotAccessOrElseSafeUrlWrappedValue_ = "";
      this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
    };
    goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
    goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
    goog.html.SafeUrl.prototype.getTypedStringValue = function() {
      return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();
    };
    goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
    goog.html.SafeUrl.prototype.getDirection = function() {
      return goog.i18n.bidi.Dir.LTR;
    };
    goog.DEBUG && (goog.html.SafeUrl.prototype.toString = function() {
      return "SafeUrl{" + this.privateDoNotAccessOrElseSafeUrlWrappedValue_ + "}";
    });
    goog.html.SafeUrl.unwrap = function(a2) {
      return goog.html.SafeUrl.unwrapTrustedURL(a2).toString();
    };
    goog.html.SafeUrl.unwrapTrustedURL = function(a2) {
      if (a2 instanceof goog.html.SafeUrl && a2.constructor === goog.html.SafeUrl && a2.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)
        return a2.privateDoNotAccessOrElseSafeUrlWrappedValue_;
      goog.asserts.fail("expected object of type SafeUrl, got '" + a2 + "' of type " + goog.typeOf(a2));
      return "type_error:SafeUrl";
    };
    goog.html.SafeUrl.fromConstant = function(a2) {
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a2));
    };
    goog.html.SAFE_MIME_TYPE_PATTERN_ = /^(?:audio\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-wav|wav|webm)|image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|text\/csv|video\/(?:mpeg|mp4|ogg|webm|quicktime))(?:;\w+=(?:\w+|"[\w;=]+"))*$/i;
    goog.html.SafeUrl.isSafeMimeType = function(a2) {
      return goog.html.SAFE_MIME_TYPE_PATTERN_.test(a2);
    };
    goog.html.SafeUrl.fromBlob = function(a2) {
      a2 = goog.html.SAFE_MIME_TYPE_PATTERN_.test(a2.type) ? goog.fs.url.createObjectUrl(a2) : goog.html.SafeUrl.INNOCUOUS_STRING;
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.DATA_URL_PATTERN_ = /^data:([^,]*);base64,[a-z0-9+\/]+=*$/i;
    goog.html.SafeUrl.fromDataUrl = function(a2) {
      a2 = a2.replace(/(%0A|%0D)/g, "");
      var b2 = a2.match(goog.html.DATA_URL_PATTERN_);
      b2 = b2 && goog.html.SAFE_MIME_TYPE_PATTERN_.test(b2[1]);
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b2 ? a2 : goog.html.SafeUrl.INNOCUOUS_STRING);
    };
    goog.html.SafeUrl.fromTelUrl = function(a2) {
      goog.string.internal.caseInsensitiveStartsWith(a2, "tel:") || (a2 = goog.html.SafeUrl.INNOCUOUS_STRING);
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SIP_URL_PATTERN_ = /^sip[s]?:[+a-z0-9_.!$%&'*\/=^`{|}~-]+@([a-z0-9-]+\.)+[a-z0-9]{2,63}$/i;
    goog.html.SafeUrl.fromSipUrl = function(a2) {
      goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(a2)) || (a2 = goog.html.SafeUrl.INNOCUOUS_STRING);
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeUrl.fromFacebookMessengerUrl = function(a2) {
      goog.string.internal.caseInsensitiveStartsWith(a2, "fb-messenger://share") || (a2 = goog.html.SafeUrl.INNOCUOUS_STRING);
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeUrl.fromWhatsAppUrl = function(a2) {
      goog.string.internal.caseInsensitiveStartsWith(a2, "whatsapp://send") || (a2 = goog.html.SafeUrl.INNOCUOUS_STRING);
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeUrl.fromSmsUrl = function(a2) {
      goog.string.internal.caseInsensitiveStartsWith(a2, "sms:") && goog.html.SafeUrl.isSmsUrlBodyValid_(a2) || (a2 = goog.html.SafeUrl.INNOCUOUS_STRING);
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeUrl.isSmsUrlBodyValid_ = function(a2) {
      var b2 = a2.indexOf("#");
      0 < b2 && (a2 = a2.substring(0, b2));
      b2 = a2.match(/[?&]body=/gi);
      if (!b2)
        return true;
      if (1 < b2.length)
        return false;
      a2 = a2.match(/[?&]body=([^&]*)/)[1];
      if (!a2)
        return true;
      try {
        decodeURIComponent(a2);
      } catch (c2) {
        return false;
      }
      return /^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(a2);
    };
    goog.html.SafeUrl.fromSshUrl = function(a2) {
      goog.string.internal.caseInsensitiveStartsWith(a2, "ssh://") || (a2 = goog.html.SafeUrl.INNOCUOUS_STRING);
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeUrl.sanitizeChromeExtensionUrl = function(a2, b2) {
      return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//, a2, b2);
    };
    goog.html.SafeUrl.sanitizeFirefoxExtensionUrl = function(a2, b2) {
      return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//, a2, b2);
    };
    goog.html.SafeUrl.sanitizeEdgeExtensionUrl = function(a2, b2) {
      return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//, a2, b2);
    };
    goog.html.SafeUrl.sanitizeExtensionUrl_ = function(a2, b2, c2) {
      (a2 = a2.exec(b2)) ? (a2 = a2[1], -1 == (c2 instanceof goog.string.Const ? [goog.string.Const.unwrap(c2)] : c2.map(function(a3) {
        return goog.string.Const.unwrap(a3);
      })).indexOf(a2) && (b2 = goog.html.SafeUrl.INNOCUOUS_STRING)) : b2 = goog.html.SafeUrl.INNOCUOUS_STRING;
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b2);
    };
    goog.html.SafeUrl.fromTrustedResourceUrl = function(a2) {
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(a2));
    };
    goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
    goog.html.SafeUrl.SAFE_URL_PATTERN = goog.html.SAFE_URL_PATTERN_;
    goog.html.SafeUrl.sanitize = function(a2) {
      if (a2 instanceof goog.html.SafeUrl)
        return a2;
      a2 = "object" == typeof a2 && a2.implementsGoogStringTypedString ? a2.getTypedStringValue() : String(a2);
      goog.html.SAFE_URL_PATTERN_.test(a2) || (a2 = goog.html.SafeUrl.INNOCUOUS_STRING);
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeUrl.sanitizeAssertUnchanged = function(a2, b2) {
      if (a2 instanceof goog.html.SafeUrl)
        return a2;
      a2 = "object" == typeof a2 && a2.implementsGoogStringTypedString ? a2.getTypedStringValue() : String(a2);
      if (b2 && /^data:/i.test(a2) && (b2 = goog.html.SafeUrl.fromDataUrl(a2), b2.getTypedStringValue() == a2))
        return b2;
      goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(a2), "%s does not match the safe URL pattern", a2) || (a2 = goog.html.SafeUrl.INNOCUOUS_STRING);
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
    goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(a2) {
      var b2 = new goog.html.SafeUrl();
      b2.privateDoNotAccessOrElseSafeUrlWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createURL(a2) : a2;
      return b2;
    };
    goog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");
    goog.html.SafeStyle = function() {
      this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
      this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
    };
    goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
    goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
    goog.html.SafeStyle.fromConstant = function(a2) {
      a2 = goog.string.Const.unwrap(a2);
      if (0 === a2.length)
        return goog.html.SafeStyle.EMPTY;
      goog.asserts.assert(goog.string.internal.endsWith(a2, ";"), "Last character of style string is not ';': " + a2);
      goog.asserts.assert(goog.string.internal.contains(a2, ":"), `Style string must contain at least one ':', to specify a "name: value" pair: ` + a2);
      return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeStyle.prototype.getTypedStringValue = function() {
      return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
    };
    goog.DEBUG && (goog.html.SafeStyle.prototype.toString = function() {
      return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
    });
    goog.html.SafeStyle.unwrap = function(a2) {
      if (a2 instanceof goog.html.SafeStyle && a2.constructor === goog.html.SafeStyle && a2.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)
        return a2.privateDoNotAccessOrElseSafeStyleWrappedValue_;
      goog.asserts.fail("expected object of type SafeStyle, got '" + a2 + "' of type " + goog.typeOf(a2));
      return "type_error:SafeStyle";
    };
    goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(a2) {
      return new goog.html.SafeStyle().initSecurityPrivateDoNotAccessOrElse_(a2);
    };
    goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(a2) {
      this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = a2;
      return this;
    };
    goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
    goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
    goog.html.SafeStyle.create = function(a2) {
      var b2 = "", c2;
      for (c2 in a2) {
        if (!/^[-_a-zA-Z0-9]+$/.test(c2))
          throw Error("Name allows only [-_a-zA-Z0-9], got: " + c2);
        var d2 = a2[c2];
        null != d2 && (d2 = goog.isArray(d2) ? goog.array.map(d2, goog.html.SafeStyle.sanitizePropertyValue_).join(" ") : goog.html.SafeStyle.sanitizePropertyValue_(d2), b2 += c2 + ":" + d2 + ";");
      }
      return b2 ? goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b2) : goog.html.SafeStyle.EMPTY;
    };
    goog.html.SafeStyle.sanitizePropertyValue_ = function(a2) {
      if (a2 instanceof goog.html.SafeUrl)
        return 'url("' + goog.html.SafeUrl.unwrap(a2).replace(/</g, "%3c").replace(/[\\"]/g, "\\$&") + '")';
      a2 = a2 instanceof goog.string.Const ? goog.string.Const.unwrap(a2) : goog.html.SafeStyle.sanitizePropertyValueString_(String(a2));
      if (/[{;}]/.test(a2))
        throw new goog.asserts.AssertionError("Value does not allow [{;}], got: %s.", [a2]);
      return a2;
    };
    goog.html.SafeStyle.sanitizePropertyValueString_ = function(a2) {
      var b2 = a2.replace(goog.html.SafeStyle.FUNCTIONS_RE_, "$1").replace(goog.html.SafeStyle.FUNCTIONS_RE_, "$1").replace(goog.html.SafeStyle.URL_RE_, "url");
      if (goog.html.SafeStyle.VALUE_RE_.test(b2)) {
        if (goog.html.SafeStyle.COMMENT_RE_.test(a2))
          return goog.asserts.fail("String value disallows comments, got: " + a2), goog.html.SafeStyle.INNOCUOUS_STRING;
        if (!goog.html.SafeStyle.hasBalancedQuotes_(a2))
          return goog.asserts.fail("String value requires balanced quotes, got: " + a2), goog.html.SafeStyle.INNOCUOUS_STRING;
        if (!goog.html.SafeStyle.hasBalancedSquareBrackets_(a2))
          return goog.asserts.fail("String value requires balanced square brackets and one identifier per pair of brackets, got: " + a2), goog.html.SafeStyle.INNOCUOUS_STRING;
      } else
        return goog.asserts.fail("String value allows only " + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + " and simple functions, got: " + a2), goog.html.SafeStyle.INNOCUOUS_STRING;
      return goog.html.SafeStyle.sanitizeUrl_(a2);
    };
    goog.html.SafeStyle.hasBalancedQuotes_ = function(a2) {
      for (var b2 = true, c2 = true, d2 = 0; d2 < a2.length; d2++) {
        var e2 = a2.charAt(d2);
        "'" == e2 && c2 ? b2 = !b2 : '"' == e2 && b2 && (c2 = !c2);
      }
      return b2 && c2;
    };
    goog.html.SafeStyle.hasBalancedSquareBrackets_ = function(a2) {
      for (var b2 = true, c2 = /^[-_a-zA-Z0-9]$/, d2 = 0; d2 < a2.length; d2++) {
        var e2 = a2.charAt(d2);
        if ("]" == e2) {
          if (b2)
            return false;
          b2 = true;
        } else if ("[" == e2) {
          if (!b2)
            return false;
          b2 = false;
        } else if (!b2 && !c2.test(e2))
          return false;
      }
      return b2;
    };
    goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ = `[-,."'%_!# a-zA-Z0-9\\[\\]]`;
    goog.html.SafeStyle.VALUE_RE_ = new RegExp("^" + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + "+$");
    goog.html.SafeStyle.URL_RE_ = /\b(url\([ \t\n]*)('[ -&(-\[\]-~]*'|"[ !#-\[\]-~]*"|[!#-&*-\[\]-~]*)([ \t\n]*\))/g;
    goog.html.SafeStyle.FUNCTIONS_RE_ = /\b(hsl|hsla|rgb|rgba|matrix|calc|minmax|fit-content|repeat|(rotate|scale|translate)(X|Y|Z|3d)?)\([-+*/0-9a-z.%\[\], ]+\)/g;
    goog.html.SafeStyle.COMMENT_RE_ = /\/\*/;
    goog.html.SafeStyle.sanitizeUrl_ = function(a2) {
      return a2.replace(goog.html.SafeStyle.URL_RE_, function(a3, c2, d2, e2) {
        var b2 = "";
        d2 = d2.replace(/^(['"])(.*)\1$/, function(a4, c3, d3) {
          b2 = c3;
          return d3;
        });
        a3 = goog.html.SafeUrl.sanitize(d2).getTypedStringValue();
        return c2 + b2 + a3 + b2 + e2;
      });
    };
    goog.html.SafeStyle.concat = function(a2) {
      var b2 = "", c2 = function(a3) {
        goog.isArray(a3) ? goog.array.forEach(a3, c2) : b2 += goog.html.SafeStyle.unwrap(a3);
      };
      goog.array.forEach(arguments, c2);
      return b2 ? goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b2) : goog.html.SafeStyle.EMPTY;
    };
    goog.html.SafeStyleSheet = function() {
      this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "";
      this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
    };
    goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = true;
    goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
    goog.html.SafeStyleSheet.createRule = function(a2, b2) {
      if (goog.string.internal.contains(a2, "<"))
        throw Error("Selector does not allow '<', got: " + a2);
      var c2 = a2.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g, "");
      if (!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(c2))
        throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|] and strings, got: " + a2);
      if (!goog.html.SafeStyleSheet.hasBalancedBrackets_(c2))
        throw Error("() and [] in selector must be balanced, got: " + a2);
      b2 instanceof goog.html.SafeStyle || (b2 = goog.html.SafeStyle.create(b2));
      a2 = a2 + "{" + goog.html.SafeStyle.unwrap(b2).replace(/</g, "\\3C ") + "}";
      return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeStyleSheet.hasBalancedBrackets_ = function(a2) {
      for (var b2 = { "(": ")", "[": "]" }, c2 = [], d2 = 0; d2 < a2.length; d2++) {
        var e2 = a2[d2];
        if (b2[e2])
          c2.push(b2[e2]);
        else if (goog.object.contains(b2, e2) && c2.pop() != e2)
          return false;
      }
      return 0 == c2.length;
    };
    goog.html.SafeStyleSheet.concat = function(a2) {
      var b2 = "", c2 = function(a3) {
        goog.isArray(a3) ? goog.array.forEach(a3, c2) : b2 += goog.html.SafeStyleSheet.unwrap(a3);
      };
      goog.array.forEach(arguments, c2);
      return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b2);
    };
    goog.html.SafeStyleSheet.fromConstant = function(a2) {
      a2 = goog.string.Const.unwrap(a2);
      if (0 === a2.length)
        return goog.html.SafeStyleSheet.EMPTY;
      goog.asserts.assert(!goog.string.internal.contains(a2, "<"), "Forbidden '<' character in style sheet string: " + a2);
      return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
      return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
    };
    goog.DEBUG && (goog.html.SafeStyleSheet.prototype.toString = function() {
      return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
    });
    goog.html.SafeStyleSheet.unwrap = function(a2) {
      if (a2 instanceof goog.html.SafeStyleSheet && a2.constructor === goog.html.SafeStyleSheet && a2.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)
        return a2.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
      goog.asserts.fail("expected object of type SafeStyleSheet, got '" + a2 + "' of type " + goog.typeOf(a2));
      return "type_error:SafeStyleSheet";
    };
    goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(a2) {
      return new goog.html.SafeStyleSheet().initSecurityPrivateDoNotAccessOrElse_(a2);
    };
    goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(a2) {
      this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = a2;
      return this;
    };
    goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
    goog.labs = {};
    goog.labs.userAgent = {};
    goog.labs.userAgent.util = {};
    goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
      var a2 = goog.labs.userAgent.util.getNavigator_();
      return a2 && (a2 = a2.userAgent) ? a2 : "";
    };
    goog.labs.userAgent.util.getNavigator_ = function() {
      return goog.global.navigator;
    };
    goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
    goog.labs.userAgent.util.setUserAgent = function(a2) {
      goog.labs.userAgent.util.userAgent_ = a2 || goog.labs.userAgent.util.getNativeUserAgentString_();
    };
    goog.labs.userAgent.util.getUserAgent = function() {
      return goog.labs.userAgent.util.userAgent_;
    };
    goog.labs.userAgent.util.matchUserAgent = function(a2) {
      var b2 = goog.labs.userAgent.util.getUserAgent();
      return goog.string.internal.contains(b2, a2);
    };
    goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(a2) {
      var b2 = goog.labs.userAgent.util.getUserAgent();
      return goog.string.internal.caseInsensitiveContains(b2, a2);
    };
    goog.labs.userAgent.util.extractVersionTuples = function(a2) {
      for (var b2 = /(\w[\w ]+)\/([^\s]+)\s*(?:\((.*?)\))?/g, c2 = [], d2; d2 = b2.exec(a2); )
        c2.push([d2[1], d2[2], d2[3] || void 0]);
      return c2;
    };
    goog.labs.userAgent.browser = {};
    goog.labs.userAgent.browser.matchOpera_ = function() {
      return goog.labs.userAgent.util.matchUserAgent("Opera");
    };
    goog.labs.userAgent.browser.matchIE_ = function() {
      return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
    };
    goog.labs.userAgent.browser.matchEdgeHtml_ = function() {
      return goog.labs.userAgent.util.matchUserAgent("Edge");
    };
    goog.labs.userAgent.browser.matchEdgeChromium_ = function() {
      return goog.labs.userAgent.util.matchUserAgent("Edg/");
    };
    goog.labs.userAgent.browser.matchOperaChromium_ = function() {
      return goog.labs.userAgent.util.matchUserAgent("OPR");
    };
    goog.labs.userAgent.browser.matchFirefox_ = function() {
      return goog.labs.userAgent.util.matchUserAgent("Firefox") || goog.labs.userAgent.util.matchUserAgent("FxiOS");
    };
    goog.labs.userAgent.browser.matchSafari_ = function() {
      return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdgeHtml_() || goog.labs.userAgent.browser.matchEdgeChromium_() || goog.labs.userAgent.browser.matchOperaChromium_() || goog.labs.userAgent.browser.matchFirefox_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
    };
    goog.labs.userAgent.browser.matchCoast_ = function() {
      return goog.labs.userAgent.util.matchUserAgent("Coast");
    };
    goog.labs.userAgent.browser.matchIosWebview_ = function() {
      return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && !goog.labs.userAgent.browser.matchFirefox_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
    };
    goog.labs.userAgent.browser.matchChrome_ = function() {
      return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchEdgeHtml_();
    };
    goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
      return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
    };
    goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
    goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
    goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdgeHtml_;
    goog.labs.userAgent.browser.isEdgeChromium = goog.labs.userAgent.browser.matchEdgeChromium_;
    goog.labs.userAgent.browser.isOperaChromium = goog.labs.userAgent.browser.matchOperaChromium_;
    goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
    goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
    goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
    goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
    goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
    goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
    goog.labs.userAgent.browser.isSilk = function() {
      return goog.labs.userAgent.util.matchUserAgent("Silk");
    };
    goog.labs.userAgent.browser.getVersion = function() {
      function a2(a3) {
        a3 = goog.array.find(a3, d2);
        return c2[a3] || "";
      }
      var b2 = goog.labs.userAgent.util.getUserAgent();
      if (goog.labs.userAgent.browser.isIE())
        return goog.labs.userAgent.browser.getIEVersion_(b2);
      b2 = goog.labs.userAgent.util.extractVersionTuples(b2);
      var c2 = {};
      goog.array.forEach(b2, function(a3) {
        c2[a3[0]] = a3[1];
      });
      var d2 = goog.partial(goog.object.containsKey, c2);
      return goog.labs.userAgent.browser.isOpera() ? a2(["Version", "Opera"]) : goog.labs.userAgent.browser.isEdge() ? a2(["Edge"]) : goog.labs.userAgent.browser.isEdgeChromium() ? a2(["Edg"]) : goog.labs.userAgent.browser.isChrome() ? a2(["Chrome", "CriOS"]) : (b2 = b2[2]) && b2[1] || "";
    };
    goog.labs.userAgent.browser.isVersionOrHigher = function(a2) {
      return 0 <= goog.string.internal.compareVersions(goog.labs.userAgent.browser.getVersion(), a2);
    };
    goog.labs.userAgent.browser.getIEVersion_ = function(a2) {
      var b2 = /rv: *([\d\.]*)/.exec(a2);
      if (b2 && b2[1])
        return b2[1];
      b2 = "";
      var c2 = /MSIE +([\d\.]+)/.exec(a2);
      if (c2 && c2[1])
        if (a2 = /Trident\/(\d.\d)/.exec(a2), "7.0" == c2[1])
          if (a2 && a2[1])
            switch (a2[1]) {
              case "4.0":
                b2 = "8.0";
                break;
              case "5.0":
                b2 = "9.0";
                break;
              case "6.0":
                b2 = "10.0";
                break;
              case "7.0":
                b2 = "11.0";
            }
          else
            b2 = "7.0";
        else
          b2 = c2[1];
      return b2;
    };
    goog.html.SafeHtml = function() {
      this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
      this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
      this.dir_ = null;
    };
    goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
    goog.html.SafeHtml.prototype.getDirection = function() {
      return this.dir_;
    };
    goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
    goog.html.SafeHtml.prototype.getTypedStringValue = function() {
      return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();
    };
    goog.DEBUG && (goog.html.SafeHtml.prototype.toString = function() {
      return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
    });
    goog.html.SafeHtml.unwrap = function(a2) {
      return goog.html.SafeHtml.unwrapTrustedHTML(a2).toString();
    };
    goog.html.SafeHtml.unwrapTrustedHTML = function(a2) {
      if (a2 instanceof goog.html.SafeHtml && a2.constructor === goog.html.SafeHtml && a2.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)
        return a2.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
      goog.asserts.fail("expected object of type SafeHtml, got '" + a2 + "' of type " + goog.typeOf(a2));
      return "type_error:SafeHtml";
    };
    goog.html.SafeHtml.htmlEscape = function(a2) {
      if (a2 instanceof goog.html.SafeHtml)
        return a2;
      var b2 = "object" == typeof a2, c2 = null;
      b2 && a2.implementsGoogI18nBidiDirectionalString && (c2 = a2.getDirection());
      a2 = b2 && a2.implementsGoogStringTypedString ? a2.getTypedStringValue() : String(a2);
      return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(a2), c2);
    };
    goog.html.SafeHtml.htmlEscapePreservingNewlines = function(a2) {
      if (a2 instanceof goog.html.SafeHtml)
        return a2;
      a2 = goog.html.SafeHtml.htmlEscape(a2);
      return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(a2)), a2.getDirection());
    };
    goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(a2) {
      if (a2 instanceof goog.html.SafeHtml)
        return a2;
      a2 = goog.html.SafeHtml.htmlEscape(a2);
      return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(a2)), a2.getDirection());
    };
    goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
    goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
    goog.html.SafeHtml.URL_ATTRIBUTES_ = { action: true, cite: true, data: true, formaction: true, href: true, manifest: true, poster: true, src: true };
    goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = { APPLET: true, BASE: true, EMBED: true, IFRAME: true, LINK: true, MATH: true, META: true, OBJECT: true, SCRIPT: true, STYLE: true, SVG: true, TEMPLATE: true };
    goog.html.SafeHtml.create = function(a2, b2, c2) {
      goog.html.SafeHtml.verifyTagName(String(a2));
      return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(a2), b2, c2);
    };
    goog.html.SafeHtml.verifyTagName = function(a2) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(a2))
        throw Error("Invalid tag name <" + a2 + ">.");
      if (a2.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_)
        throw Error("Tag name <" + a2 + "> is not allowed for SafeHtml.");
    };
    goog.html.SafeHtml.createIframe = function(a2, b2, c2, d2) {
      a2 && goog.html.TrustedResourceUrl.unwrap(a2);
      var e2 = {};
      e2.src = a2 || null;
      e2.srcdoc = b2 && goog.html.SafeHtml.unwrap(b2);
      a2 = goog.html.SafeHtml.combineAttributes(e2, { sandbox: "" }, c2);
      return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", a2, d2);
    };
    goog.html.SafeHtml.createSandboxIframe = function(a2, b2, c2, d2) {
      if (!goog.html.SafeHtml.canUseSandboxIframe())
        throw Error("The browser does not support sandboxed iframes.");
      var e2 = {};
      e2.src = a2 ? goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a2)) : null;
      e2.srcdoc = b2 || null;
      e2.sandbox = "";
      a2 = goog.html.SafeHtml.combineAttributes(e2, {}, c2);
      return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", a2, d2);
    };
    goog.html.SafeHtml.canUseSandboxIframe = function() {
      return goog.global.HTMLIFrameElement && "sandbox" in goog.global.HTMLIFrameElement.prototype;
    };
    goog.html.SafeHtml.createScriptSrc = function(a2, b2) {
      goog.html.TrustedResourceUrl.unwrap(a2);
      a2 = goog.html.SafeHtml.combineAttributes({ src: a2 }, {}, b2);
      return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", a2);
    };
    goog.html.SafeHtml.createScript = function(a2, b2) {
      for (var c2 in b2) {
        var d2 = c2.toLowerCase();
        if ("language" == d2 || "src" == d2 || "text" == d2 || "type" == d2)
          throw Error('Cannot set "' + d2 + '" attribute');
      }
      c2 = "";
      a2 = goog.array.concat(a2);
      for (d2 = 0; d2 < a2.length; d2++)
        c2 += goog.html.SafeScript.unwrap(a2[d2]);
      a2 = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c2, goog.i18n.bidi.Dir.NEUTRAL);
      return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", b2, a2);
    };
    goog.html.SafeHtml.createStyle = function(a2, b2) {
      b2 = goog.html.SafeHtml.combineAttributes({ type: "text/css" }, {}, b2);
      var c2 = "";
      a2 = goog.array.concat(a2);
      for (var d2 = 0; d2 < a2.length; d2++)
        c2 += goog.html.SafeStyleSheet.unwrap(a2[d2]);
      a2 = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c2, goog.i18n.bidi.Dir.NEUTRAL);
      return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", b2, a2);
    };
    goog.html.SafeHtml.createMetaRefresh = function(a2, b2) {
      a2 = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a2));
      (goog.labs.userAgent.browser.isIE() || goog.labs.userAgent.browser.isEdge()) && goog.string.internal.contains(a2, ";") && (a2 = "'" + a2.replace(/'/g, "%27") + "'");
      return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta", { "http-equiv": "refresh", content: (b2 || 0) + "; url=" + a2 });
    };
    goog.html.SafeHtml.getAttrNameAndValue_ = function(a2, b2, c2) {
      if (c2 instanceof goog.string.Const)
        c2 = goog.string.Const.unwrap(c2);
      else if ("style" == b2.toLowerCase())
        c2 = goog.html.SafeHtml.getStyleValue_(c2);
      else {
        if (/^on/i.test(b2))
          throw Error('Attribute "' + b2 + '" requires goog.string.Const value, "' + c2 + '" given.');
        if (b2.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_)
          if (c2 instanceof goog.html.TrustedResourceUrl)
            c2 = goog.html.TrustedResourceUrl.unwrap(c2);
          else if (c2 instanceof goog.html.SafeUrl)
            c2 = goog.html.SafeUrl.unwrap(c2);
          else if (goog.isString(c2))
            c2 = goog.html.SafeUrl.sanitize(c2).getTypedStringValue();
          else
            throw Error('Attribute "' + b2 + '" on tag "' + a2 + '" requires goog.html.SafeUrl, goog.string.Const, or string, value "' + c2 + '" given.');
      }
      c2.implementsGoogStringTypedString && (c2 = c2.getTypedStringValue());
      goog.asserts.assert(goog.isString(c2) || goog.isNumber(c2), "String or number value expected, got " + typeof c2 + " with value: " + c2);
      return b2 + '="' + goog.string.internal.htmlEscape(String(c2)) + '"';
    };
    goog.html.SafeHtml.getStyleValue_ = function(a2) {
      if (!goog.isObject(a2))
        throw Error('The "style" attribute requires goog.html.SafeStyle or map of style properties, ' + typeof a2 + " given: " + a2);
      a2 instanceof goog.html.SafeStyle || (a2 = goog.html.SafeStyle.create(a2));
      return goog.html.SafeStyle.unwrap(a2);
    };
    goog.html.SafeHtml.createWithDir = function(a2, b2, c2, d2) {
      b2 = goog.html.SafeHtml.create(b2, c2, d2);
      b2.dir_ = a2;
      return b2;
    };
    goog.html.SafeHtml.join = function(a2, b2) {
      a2 = goog.html.SafeHtml.htmlEscape(a2);
      var c2 = a2.getDirection(), d2 = [], e2 = function(a3) {
        goog.isArray(a3) ? goog.array.forEach(a3, e2) : (a3 = goog.html.SafeHtml.htmlEscape(a3), d2.push(goog.html.SafeHtml.unwrap(a3)), a3 = a3.getDirection(), c2 == goog.i18n.bidi.Dir.NEUTRAL ? c2 = a3 : a3 != goog.i18n.bidi.Dir.NEUTRAL && c2 != a3 && (c2 = null));
      };
      goog.array.forEach(b2, e2);
      return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(d2.join(goog.html.SafeHtml.unwrap(a2)), c2);
    };
    goog.html.SafeHtml.concat = function(a2) {
      return goog.html.SafeHtml.join(goog.html.SafeHtml.EMPTY, Array.prototype.slice.call(arguments));
    };
    goog.html.SafeHtml.concatWithDir = function(a2, b2) {
      var c2 = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
      c2.dir_ = a2;
      return c2;
    };
    goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
    goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(a2, b2) {
      return new goog.html.SafeHtml().initSecurityPrivateDoNotAccessOrElse_(a2, b2);
    };
    goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(a2, b2) {
      this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createHTML(a2) : a2;
      this.dir_ = b2;
      return this;
    };
    goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(a2, b2, c2) {
      var d2 = null;
      var e2 = "<" + a2 + goog.html.SafeHtml.stringifyAttributes(a2, b2);
      goog.isDefAndNotNull(c2) ? goog.isArray(c2) || (c2 = [c2]) : c2 = [];
      goog.dom.tags.isVoidTag(a2.toLowerCase()) ? (goog.asserts.assert(!c2.length, "Void tag <" + a2 + "> does not allow content."), e2 += ">") : (d2 = goog.html.SafeHtml.concat(c2), e2 += ">" + goog.html.SafeHtml.unwrap(d2) + "</" + a2 + ">", d2 = d2.getDirection());
      (a2 = b2 && b2.dir) && (d2 = /^(ltr|rtl|auto)$/i.test(a2) ? goog.i18n.bidi.Dir.NEUTRAL : null);
      return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(e2, d2);
    };
    goog.html.SafeHtml.stringifyAttributes = function(a2, b2) {
      var c2 = "";
      if (b2)
        for (var d2 in b2) {
          if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(d2))
            throw Error('Invalid attribute name "' + d2 + '".');
          var e2 = b2[d2];
          goog.isDefAndNotNull(e2) && (c2 += " " + goog.html.SafeHtml.getAttrNameAndValue_(a2, d2, e2));
        }
      return c2;
    };
    goog.html.SafeHtml.combineAttributes = function(a2, b2, c2) {
      var d2 = {}, e2;
      for (e2 in a2)
        goog.asserts.assert(e2.toLowerCase() == e2, "Must be lower case"), d2[e2] = a2[e2];
      for (e2 in b2)
        goog.asserts.assert(e2.toLowerCase() == e2, "Must be lower case"), d2[e2] = b2[e2];
      for (e2 in c2) {
        var f2 = e2.toLowerCase();
        if (f2 in a2)
          throw Error('Cannot override "' + f2 + '" attribute, got "' + e2 + '" with value "' + c2[e2] + '"');
        f2 in b2 && delete d2[f2];
        d2[e2] = c2[e2];
      }
      return d2;
    };
    goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>", goog.i18n.bidi.Dir.NEUTRAL);
    goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
    goog.html.SafeHtml.BR = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>", goog.i18n.bidi.Dir.NEUTRAL);
    goog.html.uncheckedconversions = {};
    goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(a2, b2, c2) {
      goog.asserts.assertString(goog.string.Const.unwrap(a2), "must provide justification");
      goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a2)), "must provide non-empty justification");
      return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b2, c2 || null);
    };
    goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(a2, b2) {
      goog.asserts.assertString(goog.string.Const.unwrap(a2), "must provide justification");
      goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a2)), "must provide non-empty justification");
      return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(b2);
    };
    goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(a2, b2) {
      goog.asserts.assertString(goog.string.Const.unwrap(a2), "must provide justification");
      goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a2)), "must provide non-empty justification");
      return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b2);
    };
    goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(a2, b2) {
      goog.asserts.assertString(goog.string.Const.unwrap(a2), "must provide justification");
      goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a2)), "must provide non-empty justification");
      return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b2);
    };
    goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(a2, b2) {
      goog.asserts.assertString(goog.string.Const.unwrap(a2), "must provide justification");
      goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a2)), "must provide non-empty justification");
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b2);
    };
    goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(a2, b2) {
      goog.asserts.assertString(goog.string.Const.unwrap(a2), "must provide justification");
      goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a2)), "must provide non-empty justification");
      return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b2);
    };
    goog.dom.safe = {};
    goog.dom.safe.InsertAdjacentHtmlPosition = { AFTERBEGIN: "afterbegin", AFTEREND: "afterend", BEFOREBEGIN: "beforebegin", BEFOREEND: "beforeend" };
    goog.dom.safe.insertAdjacentHtml = function(a2, b2, c2) {
      a2.insertAdjacentHTML(b2, goog.html.SafeHtml.unwrapTrustedHTML(c2));
    };
    goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = { MATH: true, SCRIPT: true, STYLE: true, SVG: true, TEMPLATE: true };
    goog.dom.safe.isInnerHtmlCleanupRecursive_ = goog.functions.cacheReturnValue(function() {
      if (goog.DEBUG && "undefined" === typeof document)
        return false;
      var a2 = document.createElement("div"), b2 = document.createElement("div");
      b2.appendChild(document.createElement("div"));
      a2.appendChild(b2);
      if (goog.DEBUG && !a2.firstChild)
        return false;
      b2 = a2.firstChild.firstChild;
      a2.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY);
      return !b2.parentElement;
    });
    goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse = function(a2, b2) {
      if (goog.dom.safe.isInnerHtmlCleanupRecursive_())
        for (; a2.lastChild; )
          a2.removeChild(a2.lastChild);
      a2.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(b2);
    };
    goog.dom.safe.setInnerHtml = function(a2, b2) {
      if (goog.asserts.ENABLE_ASSERTS) {
        var c2 = a2.tagName.toUpperCase();
        if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[c2])
          throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of " + a2.tagName + ".");
      }
      goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(a2, b2);
    };
    goog.dom.safe.setOuterHtml = function(a2, b2) {
      a2.outerHTML = goog.html.SafeHtml.unwrapTrustedHTML(b2);
    };
    goog.dom.safe.setFormElementAction = function(a2, b2) {
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2);
      goog.dom.asserts.assertIsHTMLFormElement(a2).action = goog.html.SafeUrl.unwrapTrustedURL(b2);
    };
    goog.dom.safe.setButtonFormAction = function(a2, b2) {
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2);
      goog.dom.asserts.assertIsHTMLButtonElement(a2).formAction = goog.html.SafeUrl.unwrapTrustedURL(b2);
    };
    goog.dom.safe.setInputFormAction = function(a2, b2) {
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2);
      goog.dom.asserts.assertIsHTMLInputElement(a2).formAction = goog.html.SafeUrl.unwrapTrustedURL(b2);
    };
    goog.dom.safe.setStyle = function(a2, b2) {
      a2.style.cssText = goog.html.SafeStyle.unwrap(b2);
    };
    goog.dom.safe.documentWrite = function(a2, b2) {
      a2.write(goog.html.SafeHtml.unwrapTrustedHTML(b2));
    };
    goog.dom.safe.setAnchorHref = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLAnchorElement(a2);
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2);
      a2.href = goog.html.SafeUrl.unwrapTrustedURL(b2);
    };
    goog.dom.safe.setImageSrc = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLImageElement(a2);
      if (!(b2 instanceof goog.html.SafeUrl)) {
        var c2 = /^data:image\//i.test(b2);
        b2 = goog.html.SafeUrl.sanitizeAssertUnchanged(b2, c2);
      }
      a2.src = goog.html.SafeUrl.unwrapTrustedURL(b2);
    };
    goog.dom.safe.setAudioSrc = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLAudioElement(a2);
      if (!(b2 instanceof goog.html.SafeUrl)) {
        var c2 = /^data:audio\//i.test(b2);
        b2 = goog.html.SafeUrl.sanitizeAssertUnchanged(b2, c2);
      }
      a2.src = goog.html.SafeUrl.unwrapTrustedURL(b2);
    };
    goog.dom.safe.setVideoSrc = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLVideoElement(a2);
      if (!(b2 instanceof goog.html.SafeUrl)) {
        var c2 = /^data:video\//i.test(b2);
        b2 = goog.html.SafeUrl.sanitizeAssertUnchanged(b2, c2);
      }
      a2.src = goog.html.SafeUrl.unwrapTrustedURL(b2);
    };
    goog.dom.safe.setEmbedSrc = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLEmbedElement(a2);
      a2.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b2);
    };
    goog.dom.safe.setFrameSrc = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLFrameElement(a2);
      a2.src = goog.html.TrustedResourceUrl.unwrapTrustedURL(b2);
    };
    goog.dom.safe.setIframeSrc = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLIFrameElement(a2);
      a2.src = goog.html.TrustedResourceUrl.unwrapTrustedURL(b2);
    };
    goog.dom.safe.setIframeSrcdoc = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLIFrameElement(a2);
      a2.srcdoc = goog.html.SafeHtml.unwrapTrustedHTML(b2);
    };
    goog.dom.safe.setLinkHrefAndRel = function(a2, b2, c2) {
      goog.dom.asserts.assertIsHTMLLinkElement(a2);
      a2.rel = c2;
      goog.string.internal.caseInsensitiveContains(c2, "stylesheet") ? (goog.asserts.assert(b2 instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'), a2.href = goog.html.TrustedResourceUrl.unwrapTrustedURL(b2)) : a2.href = b2 instanceof goog.html.TrustedResourceUrl ? goog.html.TrustedResourceUrl.unwrapTrustedURL(b2) : b2 instanceof goog.html.SafeUrl ? goog.html.SafeUrl.unwrapTrustedURL(b2) : goog.html.SafeUrl.unwrapTrustedURL(goog.html.SafeUrl.sanitizeAssertUnchanged(b2));
    };
    goog.dom.safe.setObjectData = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLObjectElement(a2);
      a2.data = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b2);
    };
    goog.dom.safe.setScriptSrc = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLScriptElement(a2);
      a2.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b2);
      (b2 = goog.getScriptNonce()) && a2.setAttribute("nonce", b2);
    };
    goog.dom.safe.setScriptContent = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLScriptElement(a2);
      a2.text = goog.html.SafeScript.unwrapTrustedScript(b2);
      (b2 = goog.getScriptNonce()) && a2.setAttribute("nonce", b2);
    };
    goog.dom.safe.setLocationHref = function(a2, b2) {
      goog.dom.asserts.assertIsLocation(a2);
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2);
      a2.href = goog.html.SafeUrl.unwrapTrustedURL(b2);
    };
    goog.dom.safe.assignLocation = function(a2, b2) {
      goog.dom.asserts.assertIsLocation(a2);
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2);
      a2.assign(goog.html.SafeUrl.unwrapTrustedURL(b2));
    };
    goog.dom.safe.replaceLocation = function(a2, b2) {
      goog.dom.asserts.assertIsLocation(a2);
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2);
      a2.replace(goog.html.SafeUrl.unwrapTrustedURL(b2));
    };
    goog.dom.safe.openInWindow = function(a2, b2, c2, d2, e2) {
      a2 = a2 instanceof goog.html.SafeUrl ? a2 : goog.html.SafeUrl.sanitizeAssertUnchanged(a2);
      return (b2 || goog.global).open(goog.html.SafeUrl.unwrapTrustedURL(a2), c2 ? goog.string.Const.unwrap(c2) : "", d2, e2);
    };
    goog.dom.safe.parseFromStringHtml = function(a2, b2) {
      return goog.dom.safe.parseFromString(a2, b2, "text/html");
    };
    goog.dom.safe.parseFromString = function(a2, b2, c2) {
      return a2.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(b2), c2);
    };
    goog.dom.safe.createImageFromBlob = function(a2) {
      if (!/^image\/.*/g.test(a2.type))
        throw Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");
      var b2 = goog.global.URL.createObjectURL(a2);
      a2 = new goog.global.Image();
      a2.onload = function() {
        goog.global.URL.revokeObjectURL(b2);
      };
      goog.dom.safe.setImageSrc(a2, goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Image blob URL."), b2));
      return a2;
    };
    goog.string.DETECT_DOUBLE_ESCAPING = false;
    goog.string.FORCE_NON_DOM_HTML_UNESCAPING = false;
    goog.string.Unicode = { NBSP: "\xA0" };
    goog.string.startsWith = goog.string.internal.startsWith;
    goog.string.endsWith = goog.string.internal.endsWith;
    goog.string.caseInsensitiveStartsWith = goog.string.internal.caseInsensitiveStartsWith;
    goog.string.caseInsensitiveEndsWith = goog.string.internal.caseInsensitiveEndsWith;
    goog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals;
    goog.string.subs = function(a2, b2) {
      for (var c2 = a2.split("%s"), d2 = "", e2 = Array.prototype.slice.call(arguments, 1); e2.length && 1 < c2.length; )
        d2 += c2.shift() + e2.shift();
      return d2 + c2.join("%s");
    };
    goog.string.collapseWhitespace = function(a2) {
      return a2.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
    };
    goog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace;
    goog.string.isEmptyString = function(a2) {
      return 0 == a2.length;
    };
    goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
    goog.string.isEmptyOrWhitespaceSafe = function(a2) {
      return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a2));
    };
    goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
    goog.string.isBreakingWhitespace = function(a2) {
      return !/[^\t\n\r ]/.test(a2);
    };
    goog.string.isAlpha = function(a2) {
      return !/[^a-zA-Z]/.test(a2);
    };
    goog.string.isNumeric = function(a2) {
      return !/[^0-9]/.test(a2);
    };
    goog.string.isAlphaNumeric = function(a2) {
      return !/[^a-zA-Z0-9]/.test(a2);
    };
    goog.string.isSpace = function(a2) {
      return " " == a2;
    };
    goog.string.isUnicodeChar = function(a2) {
      return 1 == a2.length && " " <= a2 && "~" >= a2 || "\x80" <= a2 && "\uFFFD" >= a2;
    };
    goog.string.stripNewlines = function(a2) {
      return a2.replace(/(\r\n|\r|\n)+/g, " ");
    };
    goog.string.canonicalizeNewlines = function(a2) {
      return a2.replace(/(\r\n|\r|\n)/g, "\n");
    };
    goog.string.normalizeWhitespace = function(a2) {
      return a2.replace(/\xa0|\s/g, " ");
    };
    goog.string.normalizeSpaces = function(a2) {
      return a2.replace(/\xa0|[ \t]+/g, " ");
    };
    goog.string.collapseBreakingSpaces = function(a2) {
      return a2.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
    };
    goog.string.trim = goog.string.internal.trim;
    goog.string.trimLeft = function(a2) {
      return a2.replace(/^[\s\xa0]+/, "");
    };
    goog.string.trimRight = function(a2) {
      return a2.replace(/[\s\xa0]+$/, "");
    };
    goog.string.caseInsensitiveCompare = goog.string.internal.caseInsensitiveCompare;
    goog.string.numberAwareCompare_ = function(a2, b2, c2) {
      if (a2 == b2)
        return 0;
      if (!a2)
        return -1;
      if (!b2)
        return 1;
      for (var d2 = a2.toLowerCase().match(c2), e2 = b2.toLowerCase().match(c2), f2 = Math.min(d2.length, e2.length), g = 0; g < f2; g++) {
        c2 = d2[g];
        var h = e2[g];
        if (c2 != h)
          return a2 = parseInt(c2, 10), !isNaN(a2) && (b2 = parseInt(h, 10), !isNaN(b2) && a2 - b2) ? a2 - b2 : c2 < h ? -1 : 1;
      }
      return d2.length != e2.length ? d2.length - e2.length : a2 < b2 ? -1 : 1;
    };
    goog.string.intAwareCompare = function(a2, b2) {
      return goog.string.numberAwareCompare_(a2, b2, /\d+|\D+/g);
    };
    goog.string.floatAwareCompare = function(a2, b2) {
      return goog.string.numberAwareCompare_(a2, b2, /\d+|\.\d+|\D+/g);
    };
    goog.string.numerateCompare = goog.string.floatAwareCompare;
    goog.string.urlEncode = function(a2) {
      return encodeURIComponent(String(a2));
    };
    goog.string.urlDecode = function(a2) {
      return decodeURIComponent(a2.replace(/\+/g, " "));
    };
    goog.string.newLineToBr = goog.string.internal.newLineToBr;
    goog.string.htmlEscape = function(a2, b2) {
      a2 = goog.string.internal.htmlEscape(a2, b2);
      goog.string.DETECT_DOUBLE_ESCAPING && (a2 = a2.replace(goog.string.E_RE_, "&#101;"));
      return a2;
    };
    goog.string.E_RE_ = /e/g;
    goog.string.unescapeEntities = function(a2) {
      return goog.string.contains(a2, "&") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global ? goog.string.unescapeEntitiesUsingDom_(a2) : goog.string.unescapePureXmlEntities_(a2) : a2;
    };
    goog.string.unescapeEntitiesWithDocument = function(a2, b2) {
      return goog.string.contains(a2, "&") ? goog.string.unescapeEntitiesUsingDom_(a2, b2) : a2;
    };
    goog.string.unescapeEntitiesUsingDom_ = function(a2, b2) {
      var c2 = { "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"' };
      var d2 = b2 ? b2.createElement("div") : goog.global.document.createElement("div");
      return a2.replace(goog.string.HTML_ENTITY_PATTERN_, function(a3, b3) {
        var e2 = c2[a3];
        if (e2)
          return e2;
        "#" == b3.charAt(0) && (b3 = Number("0" + b3.substr(1)), isNaN(b3) || (e2 = String.fromCharCode(b3)));
        e2 || (goog.dom.safe.setInnerHtml(d2, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."), a3 + " ")), e2 = d2.firstChild.nodeValue.slice(0, -1));
        return c2[a3] = e2;
      });
    };
    goog.string.unescapePureXmlEntities_ = function(a2) {
      return a2.replace(/&([^;]+);/g, function(a3, c2) {
        switch (c2) {
          case "amp":
            return "&";
          case "lt":
            return "<";
          case "gt":
            return ">";
          case "quot":
            return '"';
          default:
            return "#" != c2.charAt(0) || (c2 = Number("0" + c2.substr(1)), isNaN(c2)) ? a3 : String.fromCharCode(c2);
        }
      });
    };
    goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
    goog.string.whitespaceEscape = function(a2, b2) {
      return goog.string.newLineToBr(a2.replace(/  /g, " &#160;"), b2);
    };
    goog.string.preserveSpaces = function(a2) {
      return a2.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
    };
    goog.string.stripQuotes = function(a2, b2) {
      for (var c2 = b2.length, d2 = 0; d2 < c2; d2++) {
        var e2 = 1 == c2 ? b2 : b2.charAt(d2);
        if (a2.charAt(0) == e2 && a2.charAt(a2.length - 1) == e2)
          return a2.substring(1, a2.length - 1);
      }
      return a2;
    };
    goog.string.truncate = function(a2, b2, c2) {
      c2 && (a2 = goog.string.unescapeEntities(a2));
      a2.length > b2 && (a2 = a2.substring(0, b2 - 3) + "...");
      c2 && (a2 = goog.string.htmlEscape(a2));
      return a2;
    };
    goog.string.truncateMiddle = function(a2, b2, c2, d2) {
      c2 && (a2 = goog.string.unescapeEntities(a2));
      if (d2 && a2.length > b2) {
        d2 > b2 && (d2 = b2);
        var e2 = a2.length - d2;
        a2 = a2.substring(0, b2 - d2) + "..." + a2.substring(e2);
      } else
        a2.length > b2 && (d2 = Math.floor(b2 / 2), e2 = a2.length - d2, a2 = a2.substring(0, d2 + b2 % 2) + "..." + a2.substring(e2));
      c2 && (a2 = goog.string.htmlEscape(a2));
      return a2;
    };
    goog.string.specialEscapeChars_ = { "\0": "\\0", "\b": "\\b", "\f": "\\f", "\n": "\\n", "\r": "\\r", "	": "\\t", "\v": "\\x0B", '"': '\\"', "\\": "\\\\", "<": "\\u003C" };
    goog.string.jsEscapeCache_ = { "'": "\\'" };
    goog.string.quote = function(a2) {
      a2 = String(a2);
      for (var b2 = ['"'], c2 = 0; c2 < a2.length; c2++) {
        var d2 = a2.charAt(c2), e2 = d2.charCodeAt(0);
        b2[c2 + 1] = goog.string.specialEscapeChars_[d2] || (31 < e2 && 127 > e2 ? d2 : goog.string.escapeChar(d2));
      }
      b2.push('"');
      return b2.join("");
    };
    goog.string.escapeString = function(a2) {
      for (var b2 = [], c2 = 0; c2 < a2.length; c2++)
        b2[c2] = goog.string.escapeChar(a2.charAt(c2));
      return b2.join("");
    };
    goog.string.escapeChar = function(a2) {
      if (a2 in goog.string.jsEscapeCache_)
        return goog.string.jsEscapeCache_[a2];
      if (a2 in goog.string.specialEscapeChars_)
        return goog.string.jsEscapeCache_[a2] = goog.string.specialEscapeChars_[a2];
      var b2 = a2.charCodeAt(0);
      if (31 < b2 && 127 > b2)
        var c2 = a2;
      else {
        if (256 > b2) {
          if (c2 = "\\x", 16 > b2 || 256 < b2)
            c2 += "0";
        } else
          c2 = "\\u", 4096 > b2 && (c2 += "0");
        c2 += b2.toString(16).toUpperCase();
      }
      return goog.string.jsEscapeCache_[a2] = c2;
    };
    goog.string.contains = goog.string.internal.contains;
    goog.string.caseInsensitiveContains = goog.string.internal.caseInsensitiveContains;
    goog.string.countOf = function(a2, b2) {
      return a2 && b2 ? a2.split(b2).length - 1 : 0;
    };
    goog.string.removeAt = function(a2, b2, c2) {
      var d2 = a2;
      0 <= b2 && b2 < a2.length && 0 < c2 && (d2 = a2.substr(0, b2) + a2.substr(b2 + c2, a2.length - b2 - c2));
      return d2;
    };
    goog.string.remove = function(a2, b2) {
      return a2.replace(b2, "");
    };
    goog.string.removeAll = function(a2, b2) {
      b2 = new RegExp(goog.string.regExpEscape(b2), "g");
      return a2.replace(b2, "");
    };
    goog.string.replaceAll = function(a2, b2, c2) {
      b2 = new RegExp(goog.string.regExpEscape(b2), "g");
      return a2.replace(b2, c2.replace(/\$/g, "$$$$"));
    };
    goog.string.regExpEscape = function(a2) {
      return String(a2).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
    };
    goog.string.repeat = String.prototype.repeat ? function(a2, b2) {
      return a2.repeat(b2);
    } : function(a2, b2) {
      return Array(b2 + 1).join(a2);
    };
    goog.string.padNumber = function(a2, b2, c2) {
      a2 = goog.isDef(c2) ? a2.toFixed(c2) : String(a2);
      c2 = a2.indexOf(".");
      -1 == c2 && (c2 = a2.length);
      return goog.string.repeat("0", Math.max(0, b2 - c2)) + a2;
    };
    goog.string.makeSafe = function(a2) {
      return null == a2 ? "" : String(a2);
    };
    goog.string.buildString = function(a2) {
      return Array.prototype.join.call(arguments, "");
    };
    goog.string.getRandomString = function() {
      return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);
    };
    goog.string.compareVersions = goog.string.internal.compareVersions;
    goog.string.hashCode = function(a2) {
      for (var b2 = 0, c2 = 0; c2 < a2.length; ++c2)
        b2 = 31 * b2 + a2.charCodeAt(c2) >>> 0;
      return b2;
    };
    goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;
    goog.string.createUniqueString = function() {
      return "goog_" + goog.string.uniqueStringCounter_++;
    };
    goog.string.toNumber = function(a2) {
      var b2 = Number(a2);
      return 0 == b2 && goog.string.isEmptyOrWhitespace(a2) ? NaN : b2;
    };
    goog.string.isLowerCamelCase = function(a2) {
      return /^[a-z]+([A-Z][a-z]*)*$/.test(a2);
    };
    goog.string.isUpperCamelCase = function(a2) {
      return /^([A-Z][a-z]*)+$/.test(a2);
    };
    goog.string.toCamelCase = function(a2) {
      return String(a2).replace(/\-([a-z])/g, function(a3, c2) {
        return c2.toUpperCase();
      });
    };
    goog.string.toSelectorCase = function(a2) {
      return String(a2).replace(/([A-Z])/g, "-$1").toLowerCase();
    };
    goog.string.toTitleCase = function(a2, b2) {
      b2 = goog.isString(b2) ? goog.string.regExpEscape(b2) : "\\s";
      return a2.replace(new RegExp("(^" + (b2 ? "|[" + b2 + "]+" : "") + ")([a-z])", "g"), function(a3, b3, e2) {
        return b3 + e2.toUpperCase();
      });
    };
    goog.string.capitalize = function(a2) {
      return String(a2.charAt(0)).toUpperCase() + String(a2.substr(1)).toLowerCase();
    };
    goog.string.parseInt = function(a2) {
      isFinite(a2) && (a2 = String(a2));
      return goog.isString(a2) ? /^\s*-?0x/i.test(a2) ? parseInt(a2, 16) : parseInt(a2, 10) : NaN;
    };
    goog.string.splitLimit = function(a2, b2, c2) {
      a2 = a2.split(b2);
      for (var d2 = []; 0 < c2 && a2.length; )
        d2.push(a2.shift()), c2--;
      a2.length && d2.push(a2.join(b2));
      return d2;
    };
    goog.string.lastComponent = function(a2, b2) {
      if (b2)
        "string" == typeof b2 && (b2 = [b2]);
      else
        return a2;
      for (var c2 = -1, d2 = 0; d2 < b2.length; d2++)
        if ("" != b2[d2]) {
          var e2 = a2.lastIndexOf(b2[d2]);
          e2 > c2 && (c2 = e2);
        }
      return -1 == c2 ? a2 : a2.slice(c2 + 1);
    };
    goog.string.editDistance = function(a2, b2) {
      var c2 = [], d2 = [];
      if (a2 == b2)
        return 0;
      if (!a2.length || !b2.length)
        return Math.max(a2.length, b2.length);
      for (var e2 = 0; e2 < b2.length + 1; e2++)
        c2[e2] = e2;
      for (e2 = 0; e2 < a2.length; e2++) {
        d2[0] = e2 + 1;
        for (var f2 = 0; f2 < b2.length; f2++)
          d2[f2 + 1] = Math.min(d2[f2] + 1, c2[f2 + 1] + 1, c2[f2] + Number(a2[e2] != b2[f2]));
        for (f2 = 0; f2 < c2.length; f2++)
          c2[f2] = d2[f2];
      }
      return d2[b2.length];
    };
    goog.labs.userAgent.engine = {};
    goog.labs.userAgent.engine.isPresto = function() {
      return goog.labs.userAgent.util.matchUserAgent("Presto");
    };
    goog.labs.userAgent.engine.isTrident = function() {
      return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
    };
    goog.labs.userAgent.engine.isEdge = function() {
      return goog.labs.userAgent.util.matchUserAgent("Edge");
    };
    goog.labs.userAgent.engine.isWebKit = function() {
      return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
    };
    goog.labs.userAgent.engine.isGecko = function() {
      return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
    };
    goog.labs.userAgent.engine.getVersion = function() {
      var a2 = goog.labs.userAgent.util.getUserAgent();
      if (a2) {
        a2 = goog.labs.userAgent.util.extractVersionTuples(a2);
        var b2 = goog.labs.userAgent.engine.getEngineTuple_(a2);
        if (b2)
          return "Gecko" == b2[0] ? goog.labs.userAgent.engine.getVersionForKey_(a2, "Firefox") : b2[1];
        a2 = a2[0];
        var c2;
        if (a2 && (c2 = a2[2]) && (c2 = /Trident\/([^\s;]+)/.exec(c2)))
          return c2[1];
      }
      return "";
    };
    goog.labs.userAgent.engine.getEngineTuple_ = function(a2) {
      if (!goog.labs.userAgent.engine.isEdge())
        return a2[1];
      for (var b2 = 0; b2 < a2.length; b2++) {
        var c2 = a2[b2];
        if ("Edge" == c2[0])
          return c2;
      }
    };
    goog.labs.userAgent.engine.isVersionOrHigher = function(a2) {
      return 0 <= goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), a2);
    };
    goog.labs.userAgent.engine.getVersionForKey_ = function(a2, b2) {
      return (a2 = goog.array.find(a2, function(a3) {
        return b2 == a3[0];
      })) && a2[1] || "";
    };
    goog.labs.userAgent.platform = {};
    goog.labs.userAgent.platform.isAndroid = function() {
      return goog.labs.userAgent.util.matchUserAgent("Android");
    };
    goog.labs.userAgent.platform.isIpod = function() {
      return goog.labs.userAgent.util.matchUserAgent("iPod");
    };
    goog.labs.userAgent.platform.isIphone = function() {
      return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
    };
    goog.labs.userAgent.platform.isIpad = function() {
      return goog.labs.userAgent.util.matchUserAgent("iPad");
    };
    goog.labs.userAgent.platform.isIos = function() {
      return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
    };
    goog.labs.userAgent.platform.isMacintosh = function() {
      return goog.labs.userAgent.util.matchUserAgent("Macintosh");
    };
    goog.labs.userAgent.platform.isLinux = function() {
      return goog.labs.userAgent.util.matchUserAgent("Linux");
    };
    goog.labs.userAgent.platform.isWindows = function() {
      return goog.labs.userAgent.util.matchUserAgent("Windows");
    };
    goog.labs.userAgent.platform.isChromeOS = function() {
      return goog.labs.userAgent.util.matchUserAgent("CrOS");
    };
    goog.labs.userAgent.platform.isChromecast = function() {
      return goog.labs.userAgent.util.matchUserAgent("CrKey");
    };
    goog.labs.userAgent.platform.isKaiOS = function() {
      return goog.labs.userAgent.util.matchUserAgentIgnoreCase("KaiOS");
    };
    goog.labs.userAgent.platform.isGo2Phone = function() {
      return goog.labs.userAgent.util.matchUserAgentIgnoreCase("GAFP");
    };
    goog.labs.userAgent.platform.getVersion = function() {
      var a2 = goog.labs.userAgent.util.getUserAgent(), b2 = "";
      goog.labs.userAgent.platform.isWindows() ? (b2 = /Windows (?:NT|Phone) ([0-9.]+)/, b2 = (a2 = b2.exec(a2)) ? a2[1] : "0.0") : goog.labs.userAgent.platform.isIos() ? (b2 = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/, b2 = (a2 = b2.exec(a2)) && a2[1].replace(/_/g, ".")) : goog.labs.userAgent.platform.isMacintosh() ? (b2 = /Mac OS X ([0-9_.]+)/, b2 = (a2 = b2.exec(a2)) ? a2[1].replace(/_/g, ".") : "10") : goog.labs.userAgent.platform.isKaiOS() ? (b2 = /(?:KaiOS)\/(\S+)/i, b2 = (a2 = b2.exec(a2)) && a2[1]) : goog.labs.userAgent.platform.isAndroid() ? (b2 = /Android\s+([^\);]+)(\)|;)/, b2 = (a2 = b2.exec(a2)) && a2[1]) : goog.labs.userAgent.platform.isChromeOS() && (b2 = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/, b2 = (a2 = b2.exec(a2)) && a2[1]);
      return b2 || "";
    };
    goog.labs.userAgent.platform.isVersionOrHigher = function(a2) {
      return 0 <= goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), a2);
    };
    goog.reflect = {};
    goog.reflect.object = function(a2, b2) {
      return b2;
    };
    goog.reflect.objectProperty = function(a2, b2) {
      return a2;
    };
    goog.reflect.sinkValue = function(a2) {
      goog.reflect.sinkValue[" "](a2);
      return a2;
    };
    goog.reflect.sinkValue[" "] = goog.nullFunction;
    goog.reflect.canAccessProperty = function(a2, b2) {
      try {
        return goog.reflect.sinkValue(a2[b2]), true;
      } catch (c2) {
      }
      return false;
    };
    goog.reflect.cache = function(a2, b2, c2, d2) {
      d2 = d2 ? d2(b2) : b2;
      return Object.prototype.hasOwnProperty.call(a2, d2) ? a2[d2] : a2[d2] = c2(b2);
    };
    goog.userAgent = {};
    goog.userAgent.ASSUME_IE = false;
    goog.userAgent.ASSUME_EDGE = false;
    goog.userAgent.ASSUME_GECKO = false;
    goog.userAgent.ASSUME_WEBKIT = false;
    goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
    goog.userAgent.ASSUME_OPERA = false;
    goog.userAgent.ASSUME_ANY_VERSION = false;
    goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
    goog.userAgent.getUserAgentString = function() {
      return goog.labs.userAgent.util.getUserAgent();
    };
    goog.userAgent.getNavigatorTyped = function() {
      return goog.global.navigator || null;
    };
    goog.userAgent.getNavigator = function() {
      return goog.userAgent.getNavigatorTyped();
    };
    goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
    goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
    goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();
    goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
    goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
    goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
    goog.userAgent.isMobile_ = function() {
      return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
    };
    goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
    goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
    goog.userAgent.determinePlatform_ = function() {
      var a2 = goog.userAgent.getNavigatorTyped();
      return a2 && a2.platform || "";
    };
    goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
    goog.userAgent.ASSUME_MAC = false;
    goog.userAgent.ASSUME_WINDOWS = false;
    goog.userAgent.ASSUME_LINUX = false;
    goog.userAgent.ASSUME_X11 = false;
    goog.userAgent.ASSUME_ANDROID = false;
    goog.userAgent.ASSUME_IPHONE = false;
    goog.userAgent.ASSUME_IPAD = false;
    goog.userAgent.ASSUME_IPOD = false;
    goog.userAgent.ASSUME_KAIOS = false;
    goog.userAgent.ASSUME_GO2PHONE = false;
    goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD;
    goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
    goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
    goog.userAgent.isLegacyLinux_ = function() {
      return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
    };
    goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
    goog.userAgent.isX11_ = function() {
      var a2 = goog.userAgent.getNavigatorTyped();
      return !!a2 && goog.string.contains(a2.appVersion || "", "X11");
    };
    goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
    goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
    goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
    goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
    goog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIpod();
    goog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIos();
    goog.userAgent.KAIOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_KAIOS : goog.labs.userAgent.platform.isKaiOS();
    goog.userAgent.GO2PHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_GO2PHONE : goog.labs.userAgent.platform.isGo2Phone();
    goog.userAgent.determineVersion_ = function() {
      var a2 = "", b2 = goog.userAgent.getVersionRegexResult_();
      b2 && (a2 = b2 ? b2[1] : "");
      return goog.userAgent.IE && (b2 = goog.userAgent.getDocumentMode_(), null != b2 && b2 > parseFloat(a2)) ? String(b2) : a2;
    };
    goog.userAgent.getVersionRegexResult_ = function() {
      var a2 = goog.userAgent.getUserAgentString();
      if (goog.userAgent.GECKO)
        return /rv:([^\);]+)(\)|;)/.exec(a2);
      if (goog.userAgent.EDGE)
        return /Edge\/([\d\.]+)/.exec(a2);
      if (goog.userAgent.IE)
        return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a2);
      if (goog.userAgent.WEBKIT)
        return /WebKit\/(\S+)/.exec(a2);
      if (goog.userAgent.OPERA)
        return /(?:Version)[ \/]?(\S+)/.exec(a2);
    };
    goog.userAgent.getDocumentMode_ = function() {
      var a2 = goog.global.document;
      return a2 ? a2.documentMode : void 0;
    };
    goog.userAgent.VERSION = goog.userAgent.determineVersion_();
    goog.userAgent.compare = function(a2, b2) {
      return goog.string.compareVersions(a2, b2);
    };
    goog.userAgent.isVersionOrHigherCache_ = {};
    goog.userAgent.isVersionOrHigher = function(a2) {
      return goog.userAgent.ASSUME_ANY_VERSION || goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_, a2, function() {
        return 0 <= goog.string.compareVersions(goog.userAgent.VERSION, a2);
      });
    };
    goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
    goog.userAgent.isDocumentModeOrHigher = function(a2) {
      return Number(goog.userAgent.DOCUMENT_MODE) >= a2;
    };
    goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
    goog.userAgent.DOCUMENT_MODE = function() {
      if (goog.global.document && goog.userAgent.IE)
        return goog.userAgent.getDocumentMode_();
    }();
    goog.userAgent.product = {};
    goog.userAgent.product.ASSUME_FIREFOX = false;
    goog.userAgent.product.ASSUME_IPHONE = false;
    goog.userAgent.product.ASSUME_IPAD = false;
    goog.userAgent.product.ASSUME_ANDROID = false;
    goog.userAgent.product.ASSUME_CHROME = false;
    goog.userAgent.product.ASSUME_SAFARI = false;
    goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;
    goog.userAgent.product.OPERA = goog.userAgent.OPERA;
    goog.userAgent.product.IE = goog.userAgent.IE;
    goog.userAgent.product.EDGE = goog.userAgent.EDGE;
    goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.labs.userAgent.browser.isFirefox();
    goog.userAgent.product.isIphoneOrIpod_ = function() {
      return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpod();
    };
    goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.isIphoneOrIpod_();
    goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
    goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.labs.userAgent.browser.isAndroidBrowser();
    goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.labs.userAgent.browser.isChrome();
    goog.userAgent.product.isSafariDesktop_ = function() {
      return goog.labs.userAgent.browser.isSafari() && !goog.labs.userAgent.platform.isIos();
    };
    goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.isSafariDesktop_();
    goog.crypt.base64 = {};
    goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ + "+/=";
    goog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ + "-_.";
    goog.crypt.base64.Alphabet = { DEFAULT: 0, NO_PADDING: 1, WEBSAFE: 2, WEBSAFE_DOT_PADDING: 3, WEBSAFE_NO_PADDING: 4 };
    goog.crypt.base64.paddingChars_ = "=.";
    goog.crypt.base64.isPadding_ = function(a2) {
      return goog.string.contains(goog.crypt.base64.paddingChars_, a2);
    };
    goog.crypt.base64.byteToCharMaps_ = {};
    goog.crypt.base64.charToByteMap_ = null;
    goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ = goog.userAgent.GECKO || goog.userAgent.WEBKIT && !goog.userAgent.product.SAFARI || goog.userAgent.OPERA;
    goog.crypt.base64.HAS_NATIVE_ENCODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || "function" == typeof goog.global.btoa;
    goog.crypt.base64.HAS_NATIVE_DECODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || !goog.userAgent.product.SAFARI && !goog.userAgent.IE && "function" == typeof goog.global.atob;
    goog.crypt.base64.encodeByteArray = function(a2, b2) {
      goog.asserts.assert(goog.isArrayLike(a2), "encodeByteArray takes an array as a parameter");
      void 0 === b2 && (b2 = goog.crypt.base64.Alphabet.DEFAULT);
      goog.crypt.base64.init_();
      b2 = goog.crypt.base64.byteToCharMaps_[b2];
      for (var c2 = [], d2 = 0; d2 < a2.length; d2 += 3) {
        var e2 = a2[d2], f2 = d2 + 1 < a2.length, g = f2 ? a2[d2 + 1] : 0, h = d2 + 2 < a2.length, k = h ? a2[d2 + 2] : 0, l = e2 >> 2;
        e2 = (e2 & 3) << 4 | g >> 4;
        g = (g & 15) << 2 | k >> 6;
        k &= 63;
        h || (k = 64, f2 || (g = 64));
        c2.push(b2[l], b2[e2], b2[g] || "", b2[k] || "");
      }
      return c2.join("");
    };
    goog.crypt.base64.encodeString = function(a2, b2) {
      return goog.crypt.base64.HAS_NATIVE_ENCODE_ && !b2 ? goog.global.btoa(a2) : goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(a2), b2);
    };
    goog.crypt.base64.decodeString = function(a2, b2) {
      if (goog.crypt.base64.HAS_NATIVE_DECODE_ && !b2)
        return goog.global.atob(a2);
      var c2 = "";
      goog.crypt.base64.decodeStringInternal_(a2, function(a3) {
        c2 += String.fromCharCode(a3);
      });
      return c2;
    };
    goog.crypt.base64.decodeStringToByteArray = function(a2, b2) {
      var c2 = [];
      goog.crypt.base64.decodeStringInternal_(a2, function(a3) {
        c2.push(a3);
      });
      return c2;
    };
    goog.crypt.base64.decodeStringToUint8Array = function(a2) {
      goog.asserts.assert(!goog.userAgent.IE || goog.userAgent.isVersionOrHigher("10"), "Browser does not support typed arrays");
      var b2 = a2.length, c2 = 3 * b2 / 4;
      c2 % 3 ? c2 = Math.floor(c2) : goog.crypt.base64.isPadding_(a2[b2 - 1]) && (c2 = goog.crypt.base64.isPadding_(a2[b2 - 2]) ? c2 - 2 : c2 - 1);
      var d2 = new Uint8Array(c2), e2 = 0;
      goog.crypt.base64.decodeStringInternal_(a2, function(a3) {
        d2[e2++] = a3;
      });
      return d2.subarray(0, e2);
    };
    goog.crypt.base64.decodeStringInternal_ = function(a2, b2) {
      function c2(b3) {
        for (; d2 < a2.length; ) {
          var c3 = a2.charAt(d2++), e3 = goog.crypt.base64.charToByteMap_[c3];
          if (null != e3)
            return e3;
          if (!goog.string.isEmptyOrWhitespace(c3))
            throw Error("Unknown base64 encoding at char: " + c3);
        }
        return b3;
      }
      goog.crypt.base64.init_();
      for (var d2 = 0; ; ) {
        var e2 = c2(-1), f2 = c2(0), g = c2(64), h = c2(64);
        if (64 === h && -1 === e2)
          break;
        b2(e2 << 2 | f2 >> 4);
        64 != g && (b2(f2 << 4 & 240 | g >> 2), 64 != h && b2(g << 6 & 192 | h));
      }
    };
    goog.crypt.base64.init_ = function() {
      if (!goog.crypt.base64.charToByteMap_) {
        goog.crypt.base64.charToByteMap_ = {};
        for (var a2 = goog.crypt.base64.DEFAULT_ALPHABET_COMMON_.split(""), b2 = ["+/=", "+/", "-_=", "-_.", "-_"], c2 = 0; 5 > c2; c2++) {
          var d2 = a2.concat(b2[c2].split(""));
          goog.crypt.base64.byteToCharMaps_[c2] = d2;
          for (var e2 = 0; e2 < d2.length; e2++) {
            var f2 = d2[e2], g = goog.crypt.base64.charToByteMap_[f2];
            void 0 === g ? goog.crypt.base64.charToByteMap_[f2] = e2 : goog.asserts.assert(g === e2);
          }
        }
      }
    };
    jspb.utils = {};
    jspb.utils.split64Low = 0;
    jspb.utils.split64High = 0;
    jspb.utils.splitUint64 = function(a2) {
      var b2 = a2 >>> 0;
      a2 = Math.floor((a2 - b2) / jspb.BinaryConstants.TWO_TO_32) >>> 0;
      jspb.utils.split64Low = b2;
      jspb.utils.split64High = a2;
    };
    jspb.utils.splitInt64 = function(a2) {
      var b2 = 0 > a2;
      a2 = Math.abs(a2);
      var c2 = a2 >>> 0;
      a2 = Math.floor((a2 - c2) / jspb.BinaryConstants.TWO_TO_32);
      a2 >>>= 0;
      b2 && (a2 = ~a2 >>> 0, c2 = (~c2 >>> 0) + 1, 4294967295 < c2 && (c2 = 0, a2++, 4294967295 < a2 && (a2 = 0)));
      jspb.utils.split64Low = c2;
      jspb.utils.split64High = a2;
    };
    jspb.utils.splitZigzag64 = function(a2) {
      var b2 = 0 > a2;
      a2 = 2 * Math.abs(a2);
      jspb.utils.splitUint64(a2);
      a2 = jspb.utils.split64Low;
      var c2 = jspb.utils.split64High;
      b2 && (0 == a2 ? 0 == c2 ? c2 = a2 = 4294967295 : (c2--, a2 = 4294967295) : a2--);
      jspb.utils.split64Low = a2;
      jspb.utils.split64High = c2;
    };
    jspb.utils.splitFloat32 = function(a2) {
      var b2 = 0 > a2 ? 1 : 0;
      a2 = b2 ? -a2 : a2;
      if (0 === a2)
        0 < 1 / a2 ? (jspb.utils.split64High = 0, jspb.utils.split64Low = 0) : (jspb.utils.split64High = 0, jspb.utils.split64Low = 2147483648);
      else if (isNaN(a2))
        jspb.utils.split64High = 0, jspb.utils.split64Low = 2147483647;
      else if (a2 > jspb.BinaryConstants.FLOAT32_MAX)
        jspb.utils.split64High = 0, jspb.utils.split64Low = (b2 << 31 | 2139095040) >>> 0;
      else if (a2 < jspb.BinaryConstants.FLOAT32_MIN)
        a2 = Math.round(a2 / Math.pow(2, -149)), jspb.utils.split64High = 0, jspb.utils.split64Low = (b2 << 31 | a2) >>> 0;
      else {
        var c2 = Math.floor(Math.log(a2) / Math.LN2);
        a2 *= Math.pow(2, -c2);
        a2 = Math.round(a2 * jspb.BinaryConstants.TWO_TO_23);
        16777216 <= a2 && ++c2;
        jspb.utils.split64High = 0;
        jspb.utils.split64Low = (b2 << 31 | c2 + 127 << 23 | a2 & 8388607) >>> 0;
      }
    };
    jspb.utils.splitFloat64 = function(a2) {
      var b2 = 0 > a2 ? 1 : 0;
      a2 = b2 ? -a2 : a2;
      if (0 === a2)
        jspb.utils.split64High = 0 < 1 / a2 ? 0 : 2147483648, jspb.utils.split64Low = 0;
      else if (isNaN(a2))
        jspb.utils.split64High = 2147483647, jspb.utils.split64Low = 4294967295;
      else if (a2 > jspb.BinaryConstants.FLOAT64_MAX)
        jspb.utils.split64High = (b2 << 31 | 2146435072) >>> 0, jspb.utils.split64Low = 0;
      else if (a2 < jspb.BinaryConstants.FLOAT64_MIN) {
        var c2 = a2 / Math.pow(2, -1074);
        a2 = c2 / jspb.BinaryConstants.TWO_TO_32;
        jspb.utils.split64High = (b2 << 31 | a2) >>> 0;
        jspb.utils.split64Low = c2 >>> 0;
      } else {
        c2 = a2;
        var d2 = 0;
        if (2 <= c2)
          for (; 2 <= c2 && 1023 > d2; )
            d2++, c2 /= 2;
        else
          for (; 1 > c2 && -1022 < d2; )
            c2 *= 2, d2--;
        c2 = a2 * Math.pow(2, -d2);
        a2 = c2 * jspb.BinaryConstants.TWO_TO_20 & 1048575;
        c2 = c2 * jspb.BinaryConstants.TWO_TO_52 >>> 0;
        jspb.utils.split64High = (b2 << 31 | d2 + 1023 << 20 | a2) >>> 0;
        jspb.utils.split64Low = c2;
      }
    };
    jspb.utils.splitHash64 = function(a2) {
      var b2 = a2.charCodeAt(0), c2 = a2.charCodeAt(1), d2 = a2.charCodeAt(2), e2 = a2.charCodeAt(3), f2 = a2.charCodeAt(4), g = a2.charCodeAt(5), h = a2.charCodeAt(6);
      a2 = a2.charCodeAt(7);
      jspb.utils.split64Low = b2 + (c2 << 8) + (d2 << 16) + (e2 << 24) >>> 0;
      jspb.utils.split64High = f2 + (g << 8) + (h << 16) + (a2 << 24) >>> 0;
    };
    jspb.utils.joinUint64 = function(a2, b2) {
      return b2 * jspb.BinaryConstants.TWO_TO_32 + (a2 >>> 0);
    };
    jspb.utils.joinInt64 = function(a2, b2) {
      var c2 = b2 & 2147483648;
      c2 && (a2 = ~a2 + 1 >>> 0, b2 = ~b2 >>> 0, 0 == a2 && (b2 = b2 + 1 >>> 0));
      a2 = jspb.utils.joinUint64(a2, b2);
      return c2 ? -a2 : a2;
    };
    jspb.utils.toZigzag64 = function(a2, b2, c2) {
      var d2 = b2 >> 31;
      return c2(a2 << 1 ^ d2, (b2 << 1 | a2 >>> 31) ^ d2);
    };
    jspb.utils.joinZigzag64 = function(a2, b2) {
      return jspb.utils.fromZigzag64(a2, b2, jspb.utils.joinInt64);
    };
    jspb.utils.fromZigzag64 = function(a2, b2, c2) {
      var d2 = -(a2 & 1);
      return c2((a2 >>> 1 | b2 << 31) ^ d2, b2 >>> 1 ^ d2);
    };
    jspb.utils.joinFloat32 = function(a2, b2) {
      b2 = 2 * (a2 >> 31) + 1;
      var c2 = a2 >>> 23 & 255;
      a2 &= 8388607;
      return 255 == c2 ? a2 ? NaN : Infinity * b2 : 0 == c2 ? b2 * Math.pow(2, -149) * a2 : b2 * Math.pow(2, c2 - 150) * (a2 + Math.pow(2, 23));
    };
    jspb.utils.joinFloat64 = function(a2, b2) {
      var c2 = 2 * (b2 >> 31) + 1, d2 = b2 >>> 20 & 2047;
      a2 = jspb.BinaryConstants.TWO_TO_32 * (b2 & 1048575) + a2;
      return 2047 == d2 ? a2 ? NaN : Infinity * c2 : 0 == d2 ? c2 * Math.pow(2, -1074) * a2 : c2 * Math.pow(2, d2 - 1075) * (a2 + jspb.BinaryConstants.TWO_TO_52);
    };
    jspb.utils.joinHash64 = function(a2, b2) {
      return String.fromCharCode(a2 >>> 0 & 255, a2 >>> 8 & 255, a2 >>> 16 & 255, a2 >>> 24 & 255, b2 >>> 0 & 255, b2 >>> 8 & 255, b2 >>> 16 & 255, b2 >>> 24 & 255);
    };
    jspb.utils.DIGITS = "0123456789abcdef".split("");
    jspb.utils.ZERO_CHAR_CODE_ = 48;
    jspb.utils.A_CHAR_CODE_ = 97;
    jspb.utils.joinUnsignedDecimalString = function(a2, b2) {
      function c2(a3, b3) {
        a3 = a3 ? String(a3) : "";
        return b3 ? "0000000".slice(a3.length) + a3 : a3;
      }
      if (2097151 >= b2)
        return "" + jspb.utils.joinUint64(a2, b2);
      var d2 = (a2 >>> 24 | b2 << 8) >>> 0 & 16777215;
      b2 = b2 >> 16 & 65535;
      a2 = (a2 & 16777215) + 6777216 * d2 + 6710656 * b2;
      d2 += 8147497 * b2;
      b2 *= 2;
      1e7 <= a2 && (d2 += Math.floor(a2 / 1e7), a2 %= 1e7);
      1e7 <= d2 && (b2 += Math.floor(d2 / 1e7), d2 %= 1e7);
      return c2(b2, 0) + c2(d2, b2) + c2(a2, 1);
    };
    jspb.utils.joinSignedDecimalString = function(a2, b2) {
      var c2 = b2 & 2147483648;
      c2 && (a2 = ~a2 + 1 >>> 0, b2 = ~b2 + (0 == a2 ? 1 : 0) >>> 0);
      a2 = jspb.utils.joinUnsignedDecimalString(a2, b2);
      return c2 ? "-" + a2 : a2;
    };
    jspb.utils.hash64ToDecimalString = function(a2, b2) {
      jspb.utils.splitHash64(a2);
      a2 = jspb.utils.split64Low;
      var c2 = jspb.utils.split64High;
      return b2 ? jspb.utils.joinSignedDecimalString(a2, c2) : jspb.utils.joinUnsignedDecimalString(a2, c2);
    };
    jspb.utils.hash64ArrayToDecimalStrings = function(a2, b2) {
      for (var c2 = Array(a2.length), d2 = 0; d2 < a2.length; d2++)
        c2[d2] = jspb.utils.hash64ToDecimalString(a2[d2], b2);
      return c2;
    };
    jspb.utils.decimalStringToHash64 = function(a2) {
      function b2(a3, b3) {
        for (var c3 = 0; 8 > c3 && (1 !== a3 || 0 < b3); c3++)
          b3 = a3 * e2[c3] + b3, e2[c3] = b3 & 255, b3 >>>= 8;
      }
      function c2() {
        for (var a3 = 0; 8 > a3; a3++)
          e2[a3] = ~e2[a3] & 255;
      }
      goog.asserts.assert(0 < a2.length);
      var d2 = false;
      "-" === a2[0] && (d2 = true, a2 = a2.slice(1));
      for (var e2 = [0, 0, 0, 0, 0, 0, 0, 0], f2 = 0; f2 < a2.length; f2++)
        b2(10, a2.charCodeAt(f2) - jspb.utils.ZERO_CHAR_CODE_);
      d2 && (c2(), b2(1, 1));
      return goog.crypt.byteArrayToString(e2);
    };
    jspb.utils.splitDecimalString = function(a2) {
      jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a2));
    };
    jspb.utils.toHexDigit_ = function(a2) {
      return String.fromCharCode(10 > a2 ? jspb.utils.ZERO_CHAR_CODE_ + a2 : jspb.utils.A_CHAR_CODE_ - 10 + a2);
    };
    jspb.utils.fromHexCharCode_ = function(a2) {
      return a2 >= jspb.utils.A_CHAR_CODE_ ? a2 - jspb.utils.A_CHAR_CODE_ + 10 : a2 - jspb.utils.ZERO_CHAR_CODE_;
    };
    jspb.utils.hash64ToHexString = function(a2) {
      var b2 = Array(18);
      b2[0] = "0";
      b2[1] = "x";
      for (var c2 = 0; 8 > c2; c2++) {
        var d2 = a2.charCodeAt(7 - c2);
        b2[2 * c2 + 2] = jspb.utils.toHexDigit_(d2 >> 4);
        b2[2 * c2 + 3] = jspb.utils.toHexDigit_(d2 & 15);
      }
      return b2.join("");
    };
    jspb.utils.hexStringToHash64 = function(a2) {
      a2 = a2.toLowerCase();
      goog.asserts.assert(18 == a2.length);
      goog.asserts.assert("0" == a2[0]);
      goog.asserts.assert("x" == a2[1]);
      for (var b2 = "", c2 = 0; 8 > c2; c2++) {
        var d2 = jspb.utils.fromHexCharCode_(a2.charCodeAt(2 * c2 + 2)), e2 = jspb.utils.fromHexCharCode_(a2.charCodeAt(2 * c2 + 3));
        b2 = String.fromCharCode(16 * d2 + e2) + b2;
      }
      return b2;
    };
    jspb.utils.hash64ToNumber = function(a2, b2) {
      jspb.utils.splitHash64(a2);
      a2 = jspb.utils.split64Low;
      var c2 = jspb.utils.split64High;
      return b2 ? jspb.utils.joinInt64(a2, c2) : jspb.utils.joinUint64(a2, c2);
    };
    jspb.utils.numberToHash64 = function(a2) {
      jspb.utils.splitInt64(a2);
      return jspb.utils.joinHash64(jspb.utils.split64Low, jspb.utils.split64High);
    };
    jspb.utils.countVarints = function(a2, b2, c2) {
      for (var d2 = 0, e2 = b2; e2 < c2; e2++)
        d2 += a2[e2] >> 7;
      return c2 - b2 - d2;
    };
    jspb.utils.countVarintFields = function(a2, b2, c2, d2) {
      var e2 = 0;
      d2 = 8 * d2 + jspb.BinaryConstants.WireType.VARINT;
      if (128 > d2)
        for (; b2 < c2 && a2[b2++] == d2; )
          for (e2++; ; ) {
            var f2 = a2[b2++];
            if (0 == (f2 & 128))
              break;
          }
      else
        for (; b2 < c2; ) {
          for (f2 = d2; 128 < f2; ) {
            if (a2[b2] != (f2 & 127 | 128))
              return e2;
            b2++;
            f2 >>= 7;
          }
          if (a2[b2++] != f2)
            break;
          for (e2++; f2 = a2[b2++], 0 != (f2 & 128); )
            ;
        }
      return e2;
    };
    jspb.utils.countFixedFields_ = function(a2, b2, c2, d2, e2) {
      var f2 = 0;
      if (128 > d2)
        for (; b2 < c2 && a2[b2++] == d2; )
          f2++, b2 += e2;
      else
        for (; b2 < c2; ) {
          for (var g = d2; 128 < g; ) {
            if (a2[b2++] != (g & 127 | 128))
              return f2;
            g >>= 7;
          }
          if (a2[b2++] != g)
            break;
          f2++;
          b2 += e2;
        }
      return f2;
    };
    jspb.utils.countFixed32Fields = function(a2, b2, c2, d2) {
      return jspb.utils.countFixedFields_(a2, b2, c2, 8 * d2 + jspb.BinaryConstants.WireType.FIXED32, 4);
    };
    jspb.utils.countFixed64Fields = function(a2, b2, c2, d2) {
      return jspb.utils.countFixedFields_(a2, b2, c2, 8 * d2 + jspb.BinaryConstants.WireType.FIXED64, 8);
    };
    jspb.utils.countDelimitedFields = function(a2, b2, c2, d2) {
      var e2 = 0;
      for (d2 = 8 * d2 + jspb.BinaryConstants.WireType.DELIMITED; b2 < c2; ) {
        for (var f2 = d2; 128 < f2; ) {
          if (a2[b2++] != (f2 & 127 | 128))
            return e2;
          f2 >>= 7;
        }
        if (a2[b2++] != f2)
          break;
        e2++;
        for (var g = 0, h = 1; f2 = a2[b2++], g += (f2 & 127) * h, h *= 128, 0 != (f2 & 128); )
          ;
        b2 += g;
      }
      return e2;
    };
    jspb.utils.debugBytesToTextFormat = function(a2) {
      var b2 = '"';
      if (a2) {
        a2 = jspb.utils.byteSourceToUint8Array(a2);
        for (var c2 = 0; c2 < a2.length; c2++)
          b2 += "\\x", 16 > a2[c2] && (b2 += "0"), b2 += a2[c2].toString(16);
      }
      return b2 + '"';
    };
    jspb.utils.debugScalarToTextFormat = function(a2) {
      return "string" === typeof a2 ? goog.string.quote(a2) : a2.toString();
    };
    jspb.utils.stringToByteArray = function(a2) {
      for (var b2 = new Uint8Array(a2.length), c2 = 0; c2 < a2.length; c2++) {
        var d2 = a2.charCodeAt(c2);
        if (255 < d2)
          throw Error("Conversion error: string contains codepoint outside of byte range");
        b2[c2] = d2;
      }
      return b2;
    };
    jspb.utils.byteSourceToUint8Array = function(a2) {
      if (a2.constructor === Uint8Array)
        return a2;
      if (a2.constructor === ArrayBuffer || "undefined" != typeof Buffer && a2.constructor === Buffer || a2.constructor === Array)
        return new Uint8Array(a2);
      if (a2.constructor === String)
        return goog.crypt.base64.decodeStringToUint8Array(a2);
      goog.asserts.fail("Type not convertible to Uint8Array.");
      return new Uint8Array(0);
    };
    jspb.BinaryDecoder = function(a2, b2, c2) {
      this.bytes_ = null;
      this.cursor_ = this.end_ = this.start_ = 0;
      this.error_ = false;
      a2 && this.setBlock(a2, b2, c2);
    };
    jspb.BinaryDecoder.instanceCache_ = [];
    jspb.BinaryDecoder.alloc = function(a2, b2, c2) {
      if (jspb.BinaryDecoder.instanceCache_.length) {
        var d2 = jspb.BinaryDecoder.instanceCache_.pop();
        a2 && d2.setBlock(a2, b2, c2);
        return d2;
      }
      return new jspb.BinaryDecoder(a2, b2, c2);
    };
    jspb.BinaryDecoder.prototype.free = function() {
      this.clear();
      100 > jspb.BinaryDecoder.instanceCache_.length && jspb.BinaryDecoder.instanceCache_.push(this);
    };
    jspb.BinaryDecoder.prototype.clone = function() {
      return jspb.BinaryDecoder.alloc(this.bytes_, this.start_, this.end_ - this.start_);
    };
    jspb.BinaryDecoder.prototype.clear = function() {
      this.bytes_ = null;
      this.cursor_ = this.end_ = this.start_ = 0;
      this.error_ = false;
    };
    jspb.BinaryDecoder.prototype.getBuffer = function() {
      return this.bytes_;
    };
    jspb.BinaryDecoder.prototype.setBlock = function(a2, b2, c2) {
      this.bytes_ = jspb.utils.byteSourceToUint8Array(a2);
      this.start_ = void 0 !== b2 ? b2 : 0;
      this.end_ = void 0 !== c2 ? this.start_ + c2 : this.bytes_.length;
      this.cursor_ = this.start_;
    };
    jspb.BinaryDecoder.prototype.getEnd = function() {
      return this.end_;
    };
    jspb.BinaryDecoder.prototype.setEnd = function(a2) {
      this.end_ = a2;
    };
    jspb.BinaryDecoder.prototype.reset = function() {
      this.cursor_ = this.start_;
    };
    jspb.BinaryDecoder.prototype.getCursor = function() {
      return this.cursor_;
    };
    jspb.BinaryDecoder.prototype.setCursor = function(a2) {
      this.cursor_ = a2;
    };
    jspb.BinaryDecoder.prototype.advance = function(a2) {
      this.cursor_ += a2;
      goog.asserts.assert(this.cursor_ <= this.end_);
    };
    jspb.BinaryDecoder.prototype.atEnd = function() {
      return this.cursor_ == this.end_;
    };
    jspb.BinaryDecoder.prototype.pastEnd = function() {
      return this.cursor_ > this.end_;
    };
    jspb.BinaryDecoder.prototype.getError = function() {
      return this.error_ || 0 > this.cursor_ || this.cursor_ > this.end_;
    };
    jspb.BinaryDecoder.prototype.readSplitVarint64 = function(a2) {
      for (var b2 = 128, c2 = 0, d2 = 0, e2 = 0; 4 > e2 && 128 <= b2; e2++)
        b2 = this.bytes_[this.cursor_++], c2 |= (b2 & 127) << 7 * e2;
      128 <= b2 && (b2 = this.bytes_[this.cursor_++], c2 |= (b2 & 127) << 28, d2 |= (b2 & 127) >> 4);
      if (128 <= b2)
        for (e2 = 0; 5 > e2 && 128 <= b2; e2++)
          b2 = this.bytes_[this.cursor_++], d2 |= (b2 & 127) << 7 * e2 + 3;
      if (128 > b2)
        return a2(c2 >>> 0, d2 >>> 0);
      goog.asserts.fail("Failed to read varint, encoding is invalid.");
      this.error_ = true;
    };
    jspb.BinaryDecoder.prototype.readSplitZigzagVarint64 = function(a2) {
      return this.readSplitVarint64(function(b2, c2) {
        return jspb.utils.fromZigzag64(b2, c2, a2);
      });
    };
    jspb.BinaryDecoder.prototype.readSplitFixed64 = function(a2) {
      var b2 = this.bytes_, c2 = this.cursor_;
      this.cursor_ += 8;
      for (var d2 = 0, e2 = 0, f2 = c2 + 7; f2 >= c2; f2--)
        d2 = d2 << 8 | b2[f2], e2 = e2 << 8 | b2[f2 + 4];
      return a2(d2, e2);
    };
    jspb.BinaryDecoder.prototype.skipVarint = function() {
      for (; this.bytes_[this.cursor_] & 128; )
        this.cursor_++;
      this.cursor_++;
    };
    jspb.BinaryDecoder.prototype.unskipVarint = function(a2) {
      for (; 128 < a2; )
        this.cursor_--, a2 >>>= 7;
      this.cursor_--;
    };
    jspb.BinaryDecoder.prototype.readUnsignedVarint32 = function() {
      var a2 = this.bytes_;
      var b2 = a2[this.cursor_ + 0];
      var c2 = b2 & 127;
      if (128 > b2)
        return this.cursor_ += 1, goog.asserts.assert(this.cursor_ <= this.end_), c2;
      b2 = a2[this.cursor_ + 1];
      c2 |= (b2 & 127) << 7;
      if (128 > b2)
        return this.cursor_ += 2, goog.asserts.assert(this.cursor_ <= this.end_), c2;
      b2 = a2[this.cursor_ + 2];
      c2 |= (b2 & 127) << 14;
      if (128 > b2)
        return this.cursor_ += 3, goog.asserts.assert(this.cursor_ <= this.end_), c2;
      b2 = a2[this.cursor_ + 3];
      c2 |= (b2 & 127) << 21;
      if (128 > b2)
        return this.cursor_ += 4, goog.asserts.assert(this.cursor_ <= this.end_), c2;
      b2 = a2[this.cursor_ + 4];
      c2 |= (b2 & 15) << 28;
      if (128 > b2)
        return this.cursor_ += 5, goog.asserts.assert(this.cursor_ <= this.end_), c2 >>> 0;
      this.cursor_ += 5;
      128 <= a2[this.cursor_++] && 128 <= a2[this.cursor_++] && 128 <= a2[this.cursor_++] && 128 <= a2[this.cursor_++] && 128 <= a2[this.cursor_++] && goog.asserts.assert(false);
      goog.asserts.assert(this.cursor_ <= this.end_);
      return c2;
    };
    jspb.BinaryDecoder.prototype.readSignedVarint32 = jspb.BinaryDecoder.prototype.readUnsignedVarint32;
    jspb.BinaryDecoder.prototype.readUnsignedVarint32String = function() {
      return this.readUnsignedVarint32().toString();
    };
    jspb.BinaryDecoder.prototype.readSignedVarint32String = function() {
      return this.readSignedVarint32().toString();
    };
    jspb.BinaryDecoder.prototype.readZigzagVarint32 = function() {
      var a2 = this.readUnsignedVarint32();
      return a2 >>> 1 ^ -(a2 & 1);
    };
    jspb.BinaryDecoder.prototype.readUnsignedVarint64 = function() {
      return this.readSplitVarint64(jspb.utils.joinUint64);
    };
    jspb.BinaryDecoder.prototype.readUnsignedVarint64String = function() {
      return this.readSplitVarint64(jspb.utils.joinUnsignedDecimalString);
    };
    jspb.BinaryDecoder.prototype.readSignedVarint64 = function() {
      return this.readSplitVarint64(jspb.utils.joinInt64);
    };
    jspb.BinaryDecoder.prototype.readSignedVarint64String = function() {
      return this.readSplitVarint64(jspb.utils.joinSignedDecimalString);
    };
    jspb.BinaryDecoder.prototype.readZigzagVarint64 = function() {
      return this.readSplitVarint64(jspb.utils.joinZigzag64);
    };
    jspb.BinaryDecoder.prototype.readZigzagVarintHash64 = function() {
      return this.readSplitZigzagVarint64(jspb.utils.joinHash64);
    };
    jspb.BinaryDecoder.prototype.readZigzagVarint64String = function() {
      return this.readSplitZigzagVarint64(jspb.utils.joinSignedDecimalString);
    };
    jspb.BinaryDecoder.prototype.readUint8 = function() {
      var a2 = this.bytes_[this.cursor_ + 0];
      this.cursor_ += 1;
      goog.asserts.assert(this.cursor_ <= this.end_);
      return a2;
    };
    jspb.BinaryDecoder.prototype.readUint16 = function() {
      var a2 = this.bytes_[this.cursor_ + 0], b2 = this.bytes_[this.cursor_ + 1];
      this.cursor_ += 2;
      goog.asserts.assert(this.cursor_ <= this.end_);
      return a2 << 0 | b2 << 8;
    };
    jspb.BinaryDecoder.prototype.readUint32 = function() {
      var a2 = this.bytes_[this.cursor_ + 0], b2 = this.bytes_[this.cursor_ + 1], c2 = this.bytes_[this.cursor_ + 2], d2 = this.bytes_[this.cursor_ + 3];
      this.cursor_ += 4;
      goog.asserts.assert(this.cursor_ <= this.end_);
      return (a2 << 0 | b2 << 8 | c2 << 16 | d2 << 24) >>> 0;
    };
    jspb.BinaryDecoder.prototype.readUint64 = function() {
      var a2 = this.readUint32(), b2 = this.readUint32();
      return jspb.utils.joinUint64(a2, b2);
    };
    jspb.BinaryDecoder.prototype.readUint64String = function() {
      var a2 = this.readUint32(), b2 = this.readUint32();
      return jspb.utils.joinUnsignedDecimalString(a2, b2);
    };
    jspb.BinaryDecoder.prototype.readInt8 = function() {
      var a2 = this.bytes_[this.cursor_ + 0];
      this.cursor_ += 1;
      goog.asserts.assert(this.cursor_ <= this.end_);
      return a2 << 24 >> 24;
    };
    jspb.BinaryDecoder.prototype.readInt16 = function() {
      var a2 = this.bytes_[this.cursor_ + 0], b2 = this.bytes_[this.cursor_ + 1];
      this.cursor_ += 2;
      goog.asserts.assert(this.cursor_ <= this.end_);
      return (a2 << 0 | b2 << 8) << 16 >> 16;
    };
    jspb.BinaryDecoder.prototype.readInt32 = function() {
      var a2 = this.bytes_[this.cursor_ + 0], b2 = this.bytes_[this.cursor_ + 1], c2 = this.bytes_[this.cursor_ + 2], d2 = this.bytes_[this.cursor_ + 3];
      this.cursor_ += 4;
      goog.asserts.assert(this.cursor_ <= this.end_);
      return a2 << 0 | b2 << 8 | c2 << 16 | d2 << 24;
    };
    jspb.BinaryDecoder.prototype.readInt64 = function() {
      var a2 = this.readUint32(), b2 = this.readUint32();
      return jspb.utils.joinInt64(a2, b2);
    };
    jspb.BinaryDecoder.prototype.readInt64String = function() {
      var a2 = this.readUint32(), b2 = this.readUint32();
      return jspb.utils.joinSignedDecimalString(a2, b2);
    };
    jspb.BinaryDecoder.prototype.readFloat = function() {
      var a2 = this.readUint32();
      return jspb.utils.joinFloat32(a2, 0);
    };
    jspb.BinaryDecoder.prototype.readDouble = function() {
      var a2 = this.readUint32(), b2 = this.readUint32();
      return jspb.utils.joinFloat64(a2, b2);
    };
    jspb.BinaryDecoder.prototype.readBool = function() {
      return !!this.bytes_[this.cursor_++];
    };
    jspb.BinaryDecoder.prototype.readEnum = function() {
      return this.readSignedVarint32();
    };
    jspb.BinaryDecoder.prototype.readString = function(a2) {
      var b2 = this.bytes_, c2 = this.cursor_;
      a2 = c2 + a2;
      for (var d2 = [], e2 = ""; c2 < a2; ) {
        var f2 = b2[c2++];
        if (128 > f2)
          d2.push(f2);
        else if (192 > f2)
          continue;
        else if (224 > f2) {
          var g = b2[c2++];
          d2.push((f2 & 31) << 6 | g & 63);
        } else if (240 > f2) {
          g = b2[c2++];
          var h = b2[c2++];
          d2.push((f2 & 15) << 12 | (g & 63) << 6 | h & 63);
        } else if (248 > f2) {
          g = b2[c2++];
          h = b2[c2++];
          var k = b2[c2++];
          f2 = (f2 & 7) << 18 | (g & 63) << 12 | (h & 63) << 6 | k & 63;
          f2 -= 65536;
          d2.push((f2 >> 10 & 1023) + 55296, (f2 & 1023) + 56320);
        }
        8192 <= d2.length && (e2 += String.fromCharCode.apply(null, d2), d2.length = 0);
      }
      e2 += goog.crypt.byteArrayToString(d2);
      this.cursor_ = c2;
      return e2;
    };
    jspb.BinaryDecoder.prototype.readStringWithLength = function() {
      var a2 = this.readUnsignedVarint32();
      return this.readString(a2);
    };
    jspb.BinaryDecoder.prototype.readBytes = function(a2) {
      if (0 > a2 || this.cursor_ + a2 > this.bytes_.length)
        return this.error_ = true, goog.asserts.fail("Invalid byte length!"), new Uint8Array(0);
      var b2 = this.bytes_.subarray(this.cursor_, this.cursor_ + a2);
      this.cursor_ += a2;
      goog.asserts.assert(this.cursor_ <= this.end_);
      return b2;
    };
    jspb.BinaryDecoder.prototype.readVarintHash64 = function() {
      return this.readSplitVarint64(jspb.utils.joinHash64);
    };
    jspb.BinaryDecoder.prototype.readFixedHash64 = function() {
      var a2 = this.bytes_, b2 = this.cursor_, c2 = a2[b2 + 0], d2 = a2[b2 + 1], e2 = a2[b2 + 2], f2 = a2[b2 + 3], g = a2[b2 + 4], h = a2[b2 + 5], k = a2[b2 + 6];
      a2 = a2[b2 + 7];
      this.cursor_ += 8;
      return String.fromCharCode(c2, d2, e2, f2, g, h, k, a2);
    };
    jspb.BinaryReader = function(a2, b2, c2) {
      this.decoder_ = jspb.BinaryDecoder.alloc(a2, b2, c2);
      this.fieldCursor_ = this.decoder_.getCursor();
      this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;
      this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;
      this.error_ = false;
      this.readCallbacks_ = null;
    };
    jspb.BinaryReader.instanceCache_ = [];
    jspb.BinaryReader.alloc = function(a2, b2, c2) {
      if (jspb.BinaryReader.instanceCache_.length) {
        var d2 = jspb.BinaryReader.instanceCache_.pop();
        a2 && d2.decoder_.setBlock(a2, b2, c2);
        return d2;
      }
      return new jspb.BinaryReader(a2, b2, c2);
    };
    jspb.BinaryReader.prototype.alloc = jspb.BinaryReader.alloc;
    jspb.BinaryReader.prototype.free = function() {
      this.decoder_.clear();
      this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;
      this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;
      this.error_ = false;
      this.readCallbacks_ = null;
      100 > jspb.BinaryReader.instanceCache_.length && jspb.BinaryReader.instanceCache_.push(this);
    };
    jspb.BinaryReader.prototype.getFieldCursor = function() {
      return this.fieldCursor_;
    };
    jspb.BinaryReader.prototype.getCursor = function() {
      return this.decoder_.getCursor();
    };
    jspb.BinaryReader.prototype.getBuffer = function() {
      return this.decoder_.getBuffer();
    };
    jspb.BinaryReader.prototype.getFieldNumber = function() {
      return this.nextField_;
    };
    jspb.BinaryReader.prototype.getWireType = function() {
      return this.nextWireType_;
    };
    jspb.BinaryReader.prototype.isDelimited = function() {
      return this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED;
    };
    jspb.BinaryReader.prototype.isEndGroup = function() {
      return this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP;
    };
    jspb.BinaryReader.prototype.getError = function() {
      return this.error_ || this.decoder_.getError();
    };
    jspb.BinaryReader.prototype.setBlock = function(a2, b2, c2) {
      this.decoder_.setBlock(a2, b2, c2);
      this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;
      this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;
    };
    jspb.BinaryReader.prototype.reset = function() {
      this.decoder_.reset();
      this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;
      this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;
    };
    jspb.BinaryReader.prototype.advance = function(a2) {
      this.decoder_.advance(a2);
    };
    jspb.BinaryReader.prototype.nextField = function() {
      if (this.decoder_.atEnd())
        return false;
      if (this.getError())
        return goog.asserts.fail("Decoder hit an error"), false;
      this.fieldCursor_ = this.decoder_.getCursor();
      var a2 = this.decoder_.readUnsignedVarint32(), b2 = a2 >>> 3;
      a2 &= 7;
      if (a2 != jspb.BinaryConstants.WireType.VARINT && a2 != jspb.BinaryConstants.WireType.FIXED32 && a2 != jspb.BinaryConstants.WireType.FIXED64 && a2 != jspb.BinaryConstants.WireType.DELIMITED && a2 != jspb.BinaryConstants.WireType.START_GROUP && a2 != jspb.BinaryConstants.WireType.END_GROUP)
        return goog.asserts.fail("Invalid wire type: %s (at position %s)", a2, this.fieldCursor_), this.error_ = true, false;
      this.nextField_ = b2;
      this.nextWireType_ = a2;
      return true;
    };
    jspb.BinaryReader.prototype.unskipHeader = function() {
      this.decoder_.unskipVarint(this.nextField_ << 3 | this.nextWireType_);
    };
    jspb.BinaryReader.prototype.skipMatchingFields = function() {
      var a2 = this.nextField_;
      for (this.unskipHeader(); this.nextField() && this.getFieldNumber() == a2; )
        this.skipField();
      this.decoder_.atEnd() || this.unskipHeader();
    };
    jspb.BinaryReader.prototype.skipVarintField = function() {
      this.nextWireType_ != jspb.BinaryConstants.WireType.VARINT ? (goog.asserts.fail("Invalid wire type for skipVarintField"), this.skipField()) : this.decoder_.skipVarint();
    };
    jspb.BinaryReader.prototype.skipDelimitedField = function() {
      if (this.nextWireType_ != jspb.BinaryConstants.WireType.DELIMITED)
        goog.asserts.fail("Invalid wire type for skipDelimitedField"), this.skipField();
      else {
        var a2 = this.decoder_.readUnsignedVarint32();
        this.decoder_.advance(a2);
      }
    };
    jspb.BinaryReader.prototype.skipFixed32Field = function() {
      this.nextWireType_ != jspb.BinaryConstants.WireType.FIXED32 ? (goog.asserts.fail("Invalid wire type for skipFixed32Field"), this.skipField()) : this.decoder_.advance(4);
    };
    jspb.BinaryReader.prototype.skipFixed64Field = function() {
      this.nextWireType_ != jspb.BinaryConstants.WireType.FIXED64 ? (goog.asserts.fail("Invalid wire type for skipFixed64Field"), this.skipField()) : this.decoder_.advance(8);
    };
    jspb.BinaryReader.prototype.skipGroup = function() {
      var a2 = this.nextField_;
      do {
        if (!this.nextField()) {
          goog.asserts.fail("Unmatched start-group tag: stream EOF");
          this.error_ = true;
          break;
        }
        if (this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP) {
          this.nextField_ != a2 && (goog.asserts.fail("Unmatched end-group tag"), this.error_ = true);
          break;
        }
        this.skipField();
      } while (1);
    };
    jspb.BinaryReader.prototype.skipField = function() {
      switch (this.nextWireType_) {
        case jspb.BinaryConstants.WireType.VARINT:
          this.skipVarintField();
          break;
        case jspb.BinaryConstants.WireType.FIXED64:
          this.skipFixed64Field();
          break;
        case jspb.BinaryConstants.WireType.DELIMITED:
          this.skipDelimitedField();
          break;
        case jspb.BinaryConstants.WireType.FIXED32:
          this.skipFixed32Field();
          break;
        case jspb.BinaryConstants.WireType.START_GROUP:
          this.skipGroup();
          break;
        default:
          goog.asserts.fail("Invalid wire encoding for field.");
      }
    };
    jspb.BinaryReader.prototype.registerReadCallback = function(a2, b2) {
      null === this.readCallbacks_ && (this.readCallbacks_ = {});
      goog.asserts.assert(!this.readCallbacks_[a2]);
      this.readCallbacks_[a2] = b2;
    };
    jspb.BinaryReader.prototype.runReadCallback = function(a2) {
      goog.asserts.assert(null !== this.readCallbacks_);
      a2 = this.readCallbacks_[a2];
      goog.asserts.assert(a2);
      return a2(this);
    };
    jspb.BinaryReader.prototype.readAny = function(a2) {
      this.nextWireType_ = jspb.BinaryConstants.FieldTypeToWireType(a2);
      var b2 = jspb.BinaryConstants.FieldType;
      switch (a2) {
        case b2.DOUBLE:
          return this.readDouble();
        case b2.FLOAT:
          return this.readFloat();
        case b2.INT64:
          return this.readInt64();
        case b2.UINT64:
          return this.readUint64();
        case b2.INT32:
          return this.readInt32();
        case b2.FIXED64:
          return this.readFixed64();
        case b2.FIXED32:
          return this.readFixed32();
        case b2.BOOL:
          return this.readBool();
        case b2.STRING:
          return this.readString();
        case b2.GROUP:
          goog.asserts.fail("Group field type not supported in readAny()");
        case b2.MESSAGE:
          goog.asserts.fail("Message field type not supported in readAny()");
        case b2.BYTES:
          return this.readBytes();
        case b2.UINT32:
          return this.readUint32();
        case b2.ENUM:
          return this.readEnum();
        case b2.SFIXED32:
          return this.readSfixed32();
        case b2.SFIXED64:
          return this.readSfixed64();
        case b2.SINT32:
          return this.readSint32();
        case b2.SINT64:
          return this.readSint64();
        case b2.FHASH64:
          return this.readFixedHash64();
        case b2.VHASH64:
          return this.readVarintHash64();
        default:
          goog.asserts.fail("Invalid field type in readAny()");
      }
      return 0;
    };
    jspb.BinaryReader.prototype.readMessage = function(a2, b2) {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
      var c2 = this.decoder_.getEnd(), d2 = this.decoder_.readUnsignedVarint32();
      d2 = this.decoder_.getCursor() + d2;
      this.decoder_.setEnd(d2);
      b2(a2, this);
      this.decoder_.setCursor(d2);
      this.decoder_.setEnd(c2);
    };
    jspb.BinaryReader.prototype.readGroup = function(a2, b2, c2) {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.START_GROUP);
      goog.asserts.assert(this.nextField_ == a2);
      c2(b2, this);
      this.error_ || this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP || (goog.asserts.fail("Group submessage did not end with an END_GROUP tag"), this.error_ = true);
    };
    jspb.BinaryReader.prototype.getFieldDecoder = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
      var a2 = this.decoder_.readUnsignedVarint32(), b2 = this.decoder_.getCursor(), c2 = b2 + a2;
      a2 = jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(), b2, a2);
      this.decoder_.setCursor(c2);
      return a2;
    };
    jspb.BinaryReader.prototype.readInt32 = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return this.decoder_.readSignedVarint32();
    };
    jspb.BinaryReader.prototype.readInt32String = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return this.decoder_.readSignedVarint32String();
    };
    jspb.BinaryReader.prototype.readInt64 = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return this.decoder_.readSignedVarint64();
    };
    jspb.BinaryReader.prototype.readInt64String = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return this.decoder_.readSignedVarint64String();
    };
    jspb.BinaryReader.prototype.readUint32 = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return this.decoder_.readUnsignedVarint32();
    };
    jspb.BinaryReader.prototype.readUint32String = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return this.decoder_.readUnsignedVarint32String();
    };
    jspb.BinaryReader.prototype.readUint64 = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return this.decoder_.readUnsignedVarint64();
    };
    jspb.BinaryReader.prototype.readUint64String = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return this.decoder_.readUnsignedVarint64String();
    };
    jspb.BinaryReader.prototype.readSint32 = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return this.decoder_.readZigzagVarint32();
    };
    jspb.BinaryReader.prototype.readSint64 = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return this.decoder_.readZigzagVarint64();
    };
    jspb.BinaryReader.prototype.readSint64String = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return this.decoder_.readZigzagVarint64String();
    };
    jspb.BinaryReader.prototype.readFixed32 = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32);
      return this.decoder_.readUint32();
    };
    jspb.BinaryReader.prototype.readFixed64 = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);
      return this.decoder_.readUint64();
    };
    jspb.BinaryReader.prototype.readFixed64String = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);
      return this.decoder_.readUint64String();
    };
    jspb.BinaryReader.prototype.readSfixed32 = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32);
      return this.decoder_.readInt32();
    };
    jspb.BinaryReader.prototype.readSfixed32String = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32);
      return this.decoder_.readInt32().toString();
    };
    jspb.BinaryReader.prototype.readSfixed64 = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);
      return this.decoder_.readInt64();
    };
    jspb.BinaryReader.prototype.readSfixed64String = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);
      return this.decoder_.readInt64String();
    };
    jspb.BinaryReader.prototype.readFloat = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32);
      return this.decoder_.readFloat();
    };
    jspb.BinaryReader.prototype.readDouble = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);
      return this.decoder_.readDouble();
    };
    jspb.BinaryReader.prototype.readBool = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return !!this.decoder_.readUnsignedVarint32();
    };
    jspb.BinaryReader.prototype.readEnum = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return this.decoder_.readSignedVarint64();
    };
    jspb.BinaryReader.prototype.readString = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
      var a2 = this.decoder_.readUnsignedVarint32();
      return this.decoder_.readString(a2);
    };
    jspb.BinaryReader.prototype.readBytes = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
      var a2 = this.decoder_.readUnsignedVarint32();
      return this.decoder_.readBytes(a2);
    };
    jspb.BinaryReader.prototype.readVarintHash64 = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return this.decoder_.readVarintHash64();
    };
    jspb.BinaryReader.prototype.readSintHash64 = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return this.decoder_.readZigzagVarintHash64();
    };
    jspb.BinaryReader.prototype.readSplitVarint64 = function(a2) {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return this.decoder_.readSplitVarint64(a2);
    };
    jspb.BinaryReader.prototype.readSplitZigzagVarint64 = function(a2) {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
      return this.decoder_.readSplitVarint64(function(b2, c2) {
        return jspb.utils.fromZigzag64(b2, c2, a2);
      });
    };
    jspb.BinaryReader.prototype.readFixedHash64 = function() {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);
      return this.decoder_.readFixedHash64();
    };
    jspb.BinaryReader.prototype.readSplitFixed64 = function(a2) {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);
      return this.decoder_.readSplitFixed64(a2);
    };
    jspb.BinaryReader.prototype.readPackedField_ = function(a2) {
      goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
      var b2 = this.decoder_.readUnsignedVarint32();
      b2 = this.decoder_.getCursor() + b2;
      for (var c2 = []; this.decoder_.getCursor() < b2; )
        c2.push(a2.call(this.decoder_));
      return c2;
    };
    jspb.BinaryReader.prototype.readPackedInt32 = function() {
      return this.readPackedField_(this.decoder_.readSignedVarint32);
    };
    jspb.BinaryReader.prototype.readPackedInt32String = function() {
      return this.readPackedField_(this.decoder_.readSignedVarint32String);
    };
    jspb.BinaryReader.prototype.readPackedInt64 = function() {
      return this.readPackedField_(this.decoder_.readSignedVarint64);
    };
    jspb.BinaryReader.prototype.readPackedInt64String = function() {
      return this.readPackedField_(this.decoder_.readSignedVarint64String);
    };
    jspb.BinaryReader.prototype.readPackedUint32 = function() {
      return this.readPackedField_(this.decoder_.readUnsignedVarint32);
    };
    jspb.BinaryReader.prototype.readPackedUint32String = function() {
      return this.readPackedField_(this.decoder_.readUnsignedVarint32String);
    };
    jspb.BinaryReader.prototype.readPackedUint64 = function() {
      return this.readPackedField_(this.decoder_.readUnsignedVarint64);
    };
    jspb.BinaryReader.prototype.readPackedUint64String = function() {
      return this.readPackedField_(this.decoder_.readUnsignedVarint64String);
    };
    jspb.BinaryReader.prototype.readPackedSint32 = function() {
      return this.readPackedField_(this.decoder_.readZigzagVarint32);
    };
    jspb.BinaryReader.prototype.readPackedSint64 = function() {
      return this.readPackedField_(this.decoder_.readZigzagVarint64);
    };
    jspb.BinaryReader.prototype.readPackedSint64String = function() {
      return this.readPackedField_(this.decoder_.readZigzagVarint64String);
    };
    jspb.BinaryReader.prototype.readPackedFixed32 = function() {
      return this.readPackedField_(this.decoder_.readUint32);
    };
    jspb.BinaryReader.prototype.readPackedFixed64 = function() {
      return this.readPackedField_(this.decoder_.readUint64);
    };
    jspb.BinaryReader.prototype.readPackedFixed64String = function() {
      return this.readPackedField_(this.decoder_.readUint64String);
    };
    jspb.BinaryReader.prototype.readPackedSfixed32 = function() {
      return this.readPackedField_(this.decoder_.readInt32);
    };
    jspb.BinaryReader.prototype.readPackedSfixed64 = function() {
      return this.readPackedField_(this.decoder_.readInt64);
    };
    jspb.BinaryReader.prototype.readPackedSfixed64String = function() {
      return this.readPackedField_(this.decoder_.readInt64String);
    };
    jspb.BinaryReader.prototype.readPackedFloat = function() {
      return this.readPackedField_(this.decoder_.readFloat);
    };
    jspb.BinaryReader.prototype.readPackedDouble = function() {
      return this.readPackedField_(this.decoder_.readDouble);
    };
    jspb.BinaryReader.prototype.readPackedBool = function() {
      return this.readPackedField_(this.decoder_.readBool);
    };
    jspb.BinaryReader.prototype.readPackedEnum = function() {
      return this.readPackedField_(this.decoder_.readEnum);
    };
    jspb.BinaryReader.prototype.readPackedVarintHash64 = function() {
      return this.readPackedField_(this.decoder_.readVarintHash64);
    };
    jspb.BinaryReader.prototype.readPackedFixedHash64 = function() {
      return this.readPackedField_(this.decoder_.readFixedHash64);
    };
    jspb.BinaryEncoder = function() {
      this.buffer_ = [];
    };
    jspb.BinaryEncoder.prototype.length = function() {
      return this.buffer_.length;
    };
    jspb.BinaryEncoder.prototype.end = function() {
      var a2 = this.buffer_;
      this.buffer_ = [];
      return a2;
    };
    jspb.BinaryEncoder.prototype.writeSplitVarint64 = function(a2, b2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(b2 == Math.floor(b2));
      goog.asserts.assert(0 <= a2 && a2 < jspb.BinaryConstants.TWO_TO_32);
      for (goog.asserts.assert(0 <= b2 && b2 < jspb.BinaryConstants.TWO_TO_32); 0 < b2 || 127 < a2; )
        this.buffer_.push(a2 & 127 | 128), a2 = (a2 >>> 7 | b2 << 25) >>> 0, b2 >>>= 7;
      this.buffer_.push(a2);
    };
    jspb.BinaryEncoder.prototype.writeSplitFixed64 = function(a2, b2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(b2 == Math.floor(b2));
      goog.asserts.assert(0 <= a2 && a2 < jspb.BinaryConstants.TWO_TO_32);
      goog.asserts.assert(0 <= b2 && b2 < jspb.BinaryConstants.TWO_TO_32);
      this.writeUint32(a2);
      this.writeUint32(b2);
    };
    jspb.BinaryEncoder.prototype.writeUnsignedVarint32 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      for (goog.asserts.assert(0 <= a2 && a2 < jspb.BinaryConstants.TWO_TO_32); 127 < a2; )
        this.buffer_.push(a2 & 127 | 128), a2 >>>= 7;
      this.buffer_.push(a2);
    };
    jspb.BinaryEncoder.prototype.writeSignedVarint32 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(a2 >= -jspb.BinaryConstants.TWO_TO_31 && a2 < jspb.BinaryConstants.TWO_TO_31);
      if (0 <= a2)
        this.writeUnsignedVarint32(a2);
      else {
        for (var b2 = 0; 9 > b2; b2++)
          this.buffer_.push(a2 & 127 | 128), a2 >>= 7;
        this.buffer_.push(1);
      }
    };
    jspb.BinaryEncoder.prototype.writeUnsignedVarint64 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(0 <= a2 && a2 < jspb.BinaryConstants.TWO_TO_64);
      jspb.utils.splitInt64(a2);
      this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);
    };
    jspb.BinaryEncoder.prototype.writeSignedVarint64 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(a2 >= -jspb.BinaryConstants.TWO_TO_63 && a2 < jspb.BinaryConstants.TWO_TO_63);
      jspb.utils.splitInt64(a2);
      this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);
    };
    jspb.BinaryEncoder.prototype.writeZigzagVarint32 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(a2 >= -jspb.BinaryConstants.TWO_TO_31 && a2 < jspb.BinaryConstants.TWO_TO_31);
      this.writeUnsignedVarint32((a2 << 1 ^ a2 >> 31) >>> 0);
    };
    jspb.BinaryEncoder.prototype.writeZigzagVarint64 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(a2 >= -jspb.BinaryConstants.TWO_TO_63 && a2 < jspb.BinaryConstants.TWO_TO_63);
      jspb.utils.splitZigzag64(a2);
      this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);
    };
    jspb.BinaryEncoder.prototype.writeZigzagVarint64String = function(a2) {
      this.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(a2));
    };
    jspb.BinaryEncoder.prototype.writeZigzagVarintHash64 = function(a2) {
      var b2 = this;
      jspb.utils.splitHash64(a2);
      jspb.utils.toZigzag64(jspb.utils.split64Low, jspb.utils.split64High, function(a3, d2) {
        b2.writeSplitVarint64(a3 >>> 0, d2 >>> 0);
      });
    };
    jspb.BinaryEncoder.prototype.writeUint8 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(0 <= a2 && 256 > a2);
      this.buffer_.push(a2 >>> 0 & 255);
    };
    jspb.BinaryEncoder.prototype.writeUint16 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(0 <= a2 && 65536 > a2);
      this.buffer_.push(a2 >>> 0 & 255);
      this.buffer_.push(a2 >>> 8 & 255);
    };
    jspb.BinaryEncoder.prototype.writeUint32 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(0 <= a2 && a2 < jspb.BinaryConstants.TWO_TO_32);
      this.buffer_.push(a2 >>> 0 & 255);
      this.buffer_.push(a2 >>> 8 & 255);
      this.buffer_.push(a2 >>> 16 & 255);
      this.buffer_.push(a2 >>> 24 & 255);
    };
    jspb.BinaryEncoder.prototype.writeUint64 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(0 <= a2 && a2 < jspb.BinaryConstants.TWO_TO_64);
      jspb.utils.splitUint64(a2);
      this.writeUint32(jspb.utils.split64Low);
      this.writeUint32(jspb.utils.split64High);
    };
    jspb.BinaryEncoder.prototype.writeInt8 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(-128 <= a2 && 128 > a2);
      this.buffer_.push(a2 >>> 0 & 255);
    };
    jspb.BinaryEncoder.prototype.writeInt16 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(-32768 <= a2 && 32768 > a2);
      this.buffer_.push(a2 >>> 0 & 255);
      this.buffer_.push(a2 >>> 8 & 255);
    };
    jspb.BinaryEncoder.prototype.writeInt32 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(a2 >= -jspb.BinaryConstants.TWO_TO_31 && a2 < jspb.BinaryConstants.TWO_TO_31);
      this.buffer_.push(a2 >>> 0 & 255);
      this.buffer_.push(a2 >>> 8 & 255);
      this.buffer_.push(a2 >>> 16 & 255);
      this.buffer_.push(a2 >>> 24 & 255);
    };
    jspb.BinaryEncoder.prototype.writeInt64 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(a2 >= -jspb.BinaryConstants.TWO_TO_63 && a2 < jspb.BinaryConstants.TWO_TO_63);
      jspb.utils.splitInt64(a2);
      this.writeSplitFixed64(jspb.utils.split64Low, jspb.utils.split64High);
    };
    jspb.BinaryEncoder.prototype.writeInt64String = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(+a2 >= -jspb.BinaryConstants.TWO_TO_63 && +a2 < jspb.BinaryConstants.TWO_TO_63);
      jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a2));
      this.writeSplitFixed64(jspb.utils.split64Low, jspb.utils.split64High);
    };
    jspb.BinaryEncoder.prototype.writeFloat = function(a2) {
      goog.asserts.assert(Infinity === a2 || -Infinity === a2 || isNaN(a2) || a2 >= -jspb.BinaryConstants.FLOAT32_MAX && a2 <= jspb.BinaryConstants.FLOAT32_MAX);
      jspb.utils.splitFloat32(a2);
      this.writeUint32(jspb.utils.split64Low);
    };
    jspb.BinaryEncoder.prototype.writeDouble = function(a2) {
      goog.asserts.assert(Infinity === a2 || -Infinity === a2 || isNaN(a2) || a2 >= -jspb.BinaryConstants.FLOAT64_MAX && a2 <= jspb.BinaryConstants.FLOAT64_MAX);
      jspb.utils.splitFloat64(a2);
      this.writeUint32(jspb.utils.split64Low);
      this.writeUint32(jspb.utils.split64High);
    };
    jspb.BinaryEncoder.prototype.writeBool = function(a2) {
      goog.asserts.assert("boolean" === typeof a2 || "number" === typeof a2);
      this.buffer_.push(a2 ? 1 : 0);
    };
    jspb.BinaryEncoder.prototype.writeEnum = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(a2 >= -jspb.BinaryConstants.TWO_TO_31 && a2 < jspb.BinaryConstants.TWO_TO_31);
      this.writeSignedVarint32(a2);
    };
    jspb.BinaryEncoder.prototype.writeBytes = function(a2) {
      this.buffer_.push.apply(this.buffer_, a2);
    };
    jspb.BinaryEncoder.prototype.writeVarintHash64 = function(a2) {
      jspb.utils.splitHash64(a2);
      this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);
    };
    jspb.BinaryEncoder.prototype.writeFixedHash64 = function(a2) {
      jspb.utils.splitHash64(a2);
      this.writeUint32(jspb.utils.split64Low);
      this.writeUint32(jspb.utils.split64High);
    };
    jspb.BinaryEncoder.prototype.writeString = function(a2) {
      for (var b2 = this.buffer_.length, c2 = 0; c2 < a2.length; c2++) {
        var d2 = a2.charCodeAt(c2);
        if (128 > d2)
          this.buffer_.push(d2);
        else if (2048 > d2)
          this.buffer_.push(d2 >> 6 | 192), this.buffer_.push(d2 & 63 | 128);
        else if (65536 > d2)
          if (55296 <= d2 && 56319 >= d2 && c2 + 1 < a2.length) {
            var e2 = a2.charCodeAt(c2 + 1);
            56320 <= e2 && 57343 >= e2 && (d2 = 1024 * (d2 - 55296) + e2 - 56320 + 65536, this.buffer_.push(d2 >> 18 | 240), this.buffer_.push(d2 >> 12 & 63 | 128), this.buffer_.push(d2 >> 6 & 63 | 128), this.buffer_.push(d2 & 63 | 128), c2++);
          } else
            this.buffer_.push(d2 >> 12 | 224), this.buffer_.push(d2 >> 6 & 63 | 128), this.buffer_.push(d2 & 63 | 128);
      }
      return this.buffer_.length - b2;
    };
    jspb.arith = {};
    jspb.arith.UInt64 = function(a2, b2) {
      this.lo = a2;
      this.hi = b2;
    };
    jspb.arith.UInt64.prototype.cmp = function(a2) {
      return this.hi < a2.hi || this.hi == a2.hi && this.lo < a2.lo ? -1 : this.hi == a2.hi && this.lo == a2.lo ? 0 : 1;
    };
    jspb.arith.UInt64.prototype.rightShift = function() {
      return new jspb.arith.UInt64((this.lo >>> 1 | (this.hi & 1) << 31) >>> 0, this.hi >>> 1 >>> 0);
    };
    jspb.arith.UInt64.prototype.leftShift = function() {
      return new jspb.arith.UInt64(this.lo << 1 >>> 0, (this.hi << 1 | this.lo >>> 31) >>> 0);
    };
    jspb.arith.UInt64.prototype.msb = function() {
      return !!(this.hi & 2147483648);
    };
    jspb.arith.UInt64.prototype.lsb = function() {
      return !!(this.lo & 1);
    };
    jspb.arith.UInt64.prototype.zero = function() {
      return 0 == this.lo && 0 == this.hi;
    };
    jspb.arith.UInt64.prototype.add = function(a2) {
      return new jspb.arith.UInt64((this.lo + a2.lo & 4294967295) >>> 0 >>> 0, ((this.hi + a2.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + a2.lo ? 1 : 0) >>> 0);
    };
    jspb.arith.UInt64.prototype.sub = function(a2) {
      return new jspb.arith.UInt64((this.lo - a2.lo & 4294967295) >>> 0 >>> 0, ((this.hi - a2.hi & 4294967295) >>> 0) - (0 > this.lo - a2.lo ? 1 : 0) >>> 0);
    };
    jspb.arith.UInt64.mul32x32 = function(a2, b2) {
      var c2 = a2 & 65535;
      a2 >>>= 16;
      var d2 = b2 & 65535, e2 = b2 >>> 16;
      b2 = c2 * d2 + 65536 * (c2 * e2 & 65535) + 65536 * (a2 * d2 & 65535);
      for (c2 = a2 * e2 + (c2 * e2 >>> 16) + (a2 * d2 >>> 16); 4294967296 <= b2; )
        b2 -= 4294967296, c2 += 1;
      return new jspb.arith.UInt64(b2 >>> 0, c2 >>> 0);
    };
    jspb.arith.UInt64.prototype.mul = function(a2) {
      var b2 = jspb.arith.UInt64.mul32x32(this.lo, a2);
      a2 = jspb.arith.UInt64.mul32x32(this.hi, a2);
      a2.hi = a2.lo;
      a2.lo = 0;
      return b2.add(a2);
    };
    jspb.arith.UInt64.prototype.div = function(a2) {
      if (0 == a2)
        return [];
      var b2 = new jspb.arith.UInt64(0, 0), c2 = new jspb.arith.UInt64(this.lo, this.hi);
      a2 = new jspb.arith.UInt64(a2, 0);
      for (var d2 = new jspb.arith.UInt64(1, 0); !a2.msb(); )
        a2 = a2.leftShift(), d2 = d2.leftShift();
      for (; !d2.zero(); )
        0 >= a2.cmp(c2) && (b2 = b2.add(d2), c2 = c2.sub(a2)), a2 = a2.rightShift(), d2 = d2.rightShift();
      return [b2, c2];
    };
    jspb.arith.UInt64.prototype.toString = function() {
      for (var a2 = "", b2 = this; !b2.zero(); ) {
        b2 = b2.div(10);
        var c2 = b2[0];
        a2 = b2[1].lo + a2;
        b2 = c2;
      }
      "" == a2 && (a2 = "0");
      return a2;
    };
    jspb.arith.UInt64.fromString = function(a2) {
      for (var b2 = new jspb.arith.UInt64(0, 0), c2 = new jspb.arith.UInt64(0, 0), d2 = 0; d2 < a2.length; d2++) {
        if ("0" > a2[d2] || "9" < a2[d2])
          return null;
        var e2 = parseInt(a2[d2], 10);
        c2.lo = e2;
        b2 = b2.mul(10).add(c2);
      }
      return b2;
    };
    jspb.arith.UInt64.prototype.clone = function() {
      return new jspb.arith.UInt64(this.lo, this.hi);
    };
    jspb.arith.Int64 = function(a2, b2) {
      this.lo = a2;
      this.hi = b2;
    };
    jspb.arith.Int64.prototype.add = function(a2) {
      return new jspb.arith.Int64((this.lo + a2.lo & 4294967295) >>> 0 >>> 0, ((this.hi + a2.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + a2.lo ? 1 : 0) >>> 0);
    };
    jspb.arith.Int64.prototype.sub = function(a2) {
      return new jspb.arith.Int64((this.lo - a2.lo & 4294967295) >>> 0 >>> 0, ((this.hi - a2.hi & 4294967295) >>> 0) - (0 > this.lo - a2.lo ? 1 : 0) >>> 0);
    };
    jspb.arith.Int64.prototype.clone = function() {
      return new jspb.arith.Int64(this.lo, this.hi);
    };
    jspb.arith.Int64.prototype.toString = function() {
      var a2 = 0 != (this.hi & 2147483648), b2 = new jspb.arith.UInt64(this.lo, this.hi);
      a2 && (b2 = new jspb.arith.UInt64(0, 0).sub(b2));
      return (a2 ? "-" : "") + b2.toString();
    };
    jspb.arith.Int64.fromString = function(a2) {
      var b2 = 0 < a2.length && "-" == a2[0];
      b2 && (a2 = a2.substring(1));
      a2 = jspb.arith.UInt64.fromString(a2);
      if (null === a2)
        return null;
      b2 && (a2 = new jspb.arith.UInt64(0, 0).sub(a2));
      return new jspb.arith.Int64(a2.lo, a2.hi);
    };
    jspb.BinaryWriter = function() {
      this.blocks_ = [];
      this.totalLength_ = 0;
      this.encoder_ = new jspb.BinaryEncoder();
      this.bookmarks_ = [];
    };
    jspb.BinaryWriter.prototype.appendUint8Array_ = function(a2) {
      var b2 = this.encoder_.end();
      this.blocks_.push(b2);
      this.blocks_.push(a2);
      this.totalLength_ += b2.length + a2.length;
    };
    jspb.BinaryWriter.prototype.beginDelimited_ = function(a2) {
      this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.DELIMITED);
      a2 = this.encoder_.end();
      this.blocks_.push(a2);
      this.totalLength_ += a2.length;
      a2.push(this.totalLength_);
      return a2;
    };
    jspb.BinaryWriter.prototype.endDelimited_ = function(a2) {
      var b2 = a2.pop();
      b2 = this.totalLength_ + this.encoder_.length() - b2;
      for (goog.asserts.assert(0 <= b2); 127 < b2; )
        a2.push(b2 & 127 | 128), b2 >>>= 7, this.totalLength_++;
      a2.push(b2);
      this.totalLength_++;
    };
    jspb.BinaryWriter.prototype.writeSerializedMessage = function(a2, b2, c2) {
      this.appendUint8Array_(a2.subarray(b2, c2));
    };
    jspb.BinaryWriter.prototype.maybeWriteSerializedMessage = function(a2, b2, c2) {
      null != a2 && null != b2 && null != c2 && this.writeSerializedMessage(a2, b2, c2);
    };
    jspb.BinaryWriter.prototype.reset = function() {
      this.blocks_ = [];
      this.encoder_.end();
      this.totalLength_ = 0;
      this.bookmarks_ = [];
    };
    jspb.BinaryWriter.prototype.getResultBuffer = function() {
      goog.asserts.assert(0 == this.bookmarks_.length);
      for (var a2 = new Uint8Array(this.totalLength_ + this.encoder_.length()), b2 = this.blocks_, c2 = b2.length, d2 = 0, e2 = 0; e2 < c2; e2++) {
        var f2 = b2[e2];
        a2.set(f2, d2);
        d2 += f2.length;
      }
      b2 = this.encoder_.end();
      a2.set(b2, d2);
      d2 += b2.length;
      goog.asserts.assert(d2 == a2.length);
      this.blocks_ = [a2];
      return a2;
    };
    jspb.BinaryWriter.prototype.getResultBase64String = function(a2) {
      return goog.crypt.base64.encodeByteArray(this.getResultBuffer(), a2);
    };
    jspb.BinaryWriter.prototype.beginSubMessage = function(a2) {
      this.bookmarks_.push(this.beginDelimited_(a2));
    };
    jspb.BinaryWriter.prototype.endSubMessage = function() {
      goog.asserts.assert(0 <= this.bookmarks_.length);
      this.endDelimited_(this.bookmarks_.pop());
    };
    jspb.BinaryWriter.prototype.writeFieldHeader_ = function(a2, b2) {
      goog.asserts.assert(1 <= a2 && a2 == Math.floor(a2));
      this.encoder_.writeUnsignedVarint32(8 * a2 + b2);
    };
    jspb.BinaryWriter.prototype.writeAny = function(a2, b2, c2) {
      var d2 = jspb.BinaryConstants.FieldType;
      switch (a2) {
        case d2.DOUBLE:
          this.writeDouble(b2, c2);
          break;
        case d2.FLOAT:
          this.writeFloat(b2, c2);
          break;
        case d2.INT64:
          this.writeInt64(b2, c2);
          break;
        case d2.UINT64:
          this.writeUint64(b2, c2);
          break;
        case d2.INT32:
          this.writeInt32(b2, c2);
          break;
        case d2.FIXED64:
          this.writeFixed64(b2, c2);
          break;
        case d2.FIXED32:
          this.writeFixed32(b2, c2);
          break;
        case d2.BOOL:
          this.writeBool(b2, c2);
          break;
        case d2.STRING:
          this.writeString(b2, c2);
          break;
        case d2.GROUP:
          goog.asserts.fail("Group field type not supported in writeAny()");
          break;
        case d2.MESSAGE:
          goog.asserts.fail("Message field type not supported in writeAny()");
          break;
        case d2.BYTES:
          this.writeBytes(b2, c2);
          break;
        case d2.UINT32:
          this.writeUint32(b2, c2);
          break;
        case d2.ENUM:
          this.writeEnum(b2, c2);
          break;
        case d2.SFIXED32:
          this.writeSfixed32(b2, c2);
          break;
        case d2.SFIXED64:
          this.writeSfixed64(b2, c2);
          break;
        case d2.SINT32:
          this.writeSint32(b2, c2);
          break;
        case d2.SINT64:
          this.writeSint64(b2, c2);
          break;
        case d2.FHASH64:
          this.writeFixedHash64(b2, c2);
          break;
        case d2.VHASH64:
          this.writeVarintHash64(b2, c2);
          break;
        default:
          goog.asserts.fail("Invalid field type in writeAny()");
      }
    };
    jspb.BinaryWriter.prototype.writeUnsignedVarint32_ = function(a2, b2) {
      null != b2 && (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeUnsignedVarint32(b2));
    };
    jspb.BinaryWriter.prototype.writeSignedVarint32_ = function(a2, b2) {
      null != b2 && (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(b2));
    };
    jspb.BinaryWriter.prototype.writeUnsignedVarint64_ = function(a2, b2) {
      null != b2 && (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeUnsignedVarint64(b2));
    };
    jspb.BinaryWriter.prototype.writeSignedVarint64_ = function(a2, b2) {
      null != b2 && (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint64(b2));
    };
    jspb.BinaryWriter.prototype.writeZigzagVarint32_ = function(a2, b2) {
      null != b2 && (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint32(b2));
    };
    jspb.BinaryWriter.prototype.writeZigzagVarint64_ = function(a2, b2) {
      null != b2 && (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint64(b2));
    };
    jspb.BinaryWriter.prototype.writeZigzagVarint64String_ = function(a2, b2) {
      null != b2 && (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint64String(b2));
    };
    jspb.BinaryWriter.prototype.writeZigzagVarintHash64_ = function(a2, b2) {
      null != b2 && (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarintHash64(b2));
    };
    jspb.BinaryWriter.prototype.writeInt32 = function(a2, b2) {
      null != b2 && (goog.asserts.assert(b2 >= -jspb.BinaryConstants.TWO_TO_31 && b2 < jspb.BinaryConstants.TWO_TO_31), this.writeSignedVarint32_(a2, b2));
    };
    jspb.BinaryWriter.prototype.writeInt32String = function(a2, b2) {
      null != b2 && (b2 = parseInt(b2, 10), goog.asserts.assert(b2 >= -jspb.BinaryConstants.TWO_TO_31 && b2 < jspb.BinaryConstants.TWO_TO_31), this.writeSignedVarint32_(a2, b2));
    };
    jspb.BinaryWriter.prototype.writeInt64 = function(a2, b2) {
      null != b2 && (goog.asserts.assert(b2 >= -jspb.BinaryConstants.TWO_TO_63 && b2 < jspb.BinaryConstants.TWO_TO_63), this.writeSignedVarint64_(a2, b2));
    };
    jspb.BinaryWriter.prototype.writeInt64String = function(a2, b2) {
      null != b2 && (b2 = jspb.arith.Int64.fromString(b2), this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSplitVarint64(b2.lo, b2.hi));
    };
    jspb.BinaryWriter.prototype.writeUint32 = function(a2, b2) {
      null != b2 && (goog.asserts.assert(0 <= b2 && b2 < jspb.BinaryConstants.TWO_TO_32), this.writeUnsignedVarint32_(a2, b2));
    };
    jspb.BinaryWriter.prototype.writeUint32String = function(a2, b2) {
      null != b2 && (b2 = parseInt(b2, 10), goog.asserts.assert(0 <= b2 && b2 < jspb.BinaryConstants.TWO_TO_32), this.writeUnsignedVarint32_(a2, b2));
    };
    jspb.BinaryWriter.prototype.writeUint64 = function(a2, b2) {
      null != b2 && (goog.asserts.assert(0 <= b2 && b2 < jspb.BinaryConstants.TWO_TO_64), this.writeUnsignedVarint64_(a2, b2));
    };
    jspb.BinaryWriter.prototype.writeUint64String = function(a2, b2) {
      null != b2 && (b2 = jspb.arith.UInt64.fromString(b2), this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSplitVarint64(b2.lo, b2.hi));
    };
    jspb.BinaryWriter.prototype.writeSint32 = function(a2, b2) {
      null != b2 && (goog.asserts.assert(b2 >= -jspb.BinaryConstants.TWO_TO_31 && b2 < jspb.BinaryConstants.TWO_TO_31), this.writeZigzagVarint32_(a2, b2));
    };
    jspb.BinaryWriter.prototype.writeSint64 = function(a2, b2) {
      null != b2 && (goog.asserts.assert(b2 >= -jspb.BinaryConstants.TWO_TO_63 && b2 < jspb.BinaryConstants.TWO_TO_63), this.writeZigzagVarint64_(a2, b2));
    };
    jspb.BinaryWriter.prototype.writeSintHash64 = function(a2, b2) {
      null != b2 && this.writeZigzagVarintHash64_(a2, b2);
    };
    jspb.BinaryWriter.prototype.writeSint64String = function(a2, b2) {
      null != b2 && this.writeZigzagVarint64String_(a2, b2);
    };
    jspb.BinaryWriter.prototype.writeFixed32 = function(a2, b2) {
      null != b2 && (goog.asserts.assert(0 <= b2 && b2 < jspb.BinaryConstants.TWO_TO_32), this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeUint32(b2));
    };
    jspb.BinaryWriter.prototype.writeFixed64 = function(a2, b2) {
      null != b2 && (goog.asserts.assert(0 <= b2 && b2 < jspb.BinaryConstants.TWO_TO_64), this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeUint64(b2));
    };
    jspb.BinaryWriter.prototype.writeFixed64String = function(a2, b2) {
      null != b2 && (b2 = jspb.arith.UInt64.fromString(b2), this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeSplitFixed64(b2.lo, b2.hi));
    };
    jspb.BinaryWriter.prototype.writeSfixed32 = function(a2, b2) {
      null != b2 && (goog.asserts.assert(b2 >= -jspb.BinaryConstants.TWO_TO_31 && b2 < jspb.BinaryConstants.TWO_TO_31), this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeInt32(b2));
    };
    jspb.BinaryWriter.prototype.writeSfixed64 = function(a2, b2) {
      null != b2 && (goog.asserts.assert(b2 >= -jspb.BinaryConstants.TWO_TO_63 && b2 < jspb.BinaryConstants.TWO_TO_63), this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeInt64(b2));
    };
    jspb.BinaryWriter.prototype.writeSfixed64String = function(a2, b2) {
      null != b2 && (b2 = jspb.arith.Int64.fromString(b2), this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeSplitFixed64(b2.lo, b2.hi));
    };
    jspb.BinaryWriter.prototype.writeFloat = function(a2, b2) {
      null != b2 && (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeFloat(b2));
    };
    jspb.BinaryWriter.prototype.writeDouble = function(a2, b2) {
      null != b2 && (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeDouble(b2));
    };
    jspb.BinaryWriter.prototype.writeBool = function(a2, b2) {
      null != b2 && (goog.asserts.assert("boolean" === typeof b2 || "number" === typeof b2), this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeBool(b2));
    };
    jspb.BinaryWriter.prototype.writeEnum = function(a2, b2) {
      null != b2 && (goog.asserts.assert(b2 >= -jspb.BinaryConstants.TWO_TO_31 && b2 < jspb.BinaryConstants.TWO_TO_31), this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(b2));
    };
    jspb.BinaryWriter.prototype.writeString = function(a2, b2) {
      null != b2 && (a2 = this.beginDelimited_(a2), this.encoder_.writeString(b2), this.endDelimited_(a2));
    };
    jspb.BinaryWriter.prototype.writeBytes = function(a2, b2) {
      null != b2 && (b2 = jspb.utils.byteSourceToUint8Array(b2), this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(b2.length), this.appendUint8Array_(b2));
    };
    jspb.BinaryWriter.prototype.writeMessage = function(a2, b2, c2) {
      null != b2 && (a2 = this.beginDelimited_(a2), c2(b2, this), this.endDelimited_(a2));
    };
    jspb.BinaryWriter.prototype.writeMessageSet = function(a2, b2, c2) {
      null != b2 && (this.writeFieldHeader_(1, jspb.BinaryConstants.WireType.START_GROUP), this.writeFieldHeader_(2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(a2), a2 = this.beginDelimited_(3), c2(b2, this), this.endDelimited_(a2), this.writeFieldHeader_(1, jspb.BinaryConstants.WireType.END_GROUP));
    };
    jspb.BinaryWriter.prototype.writeGroup = function(a2, b2, c2) {
      null != b2 && (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.START_GROUP), c2(b2, this), this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.END_GROUP));
    };
    jspb.BinaryWriter.prototype.writeFixedHash64 = function(a2, b2) {
      null != b2 && (goog.asserts.assert(8 == b2.length), this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeFixedHash64(b2));
    };
    jspb.BinaryWriter.prototype.writeVarintHash64 = function(a2, b2) {
      null != b2 && (goog.asserts.assert(8 == b2.length), this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeVarintHash64(b2));
    };
    jspb.BinaryWriter.prototype.writeSplitFixed64 = function(a2, b2, c2) {
      this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.FIXED64);
      this.encoder_.writeSplitFixed64(b2, c2);
    };
    jspb.BinaryWriter.prototype.writeSplitVarint64 = function(a2, b2, c2) {
      this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.VARINT);
      this.encoder_.writeSplitVarint64(b2, c2);
    };
    jspb.BinaryWriter.prototype.writeSplitZigzagVarint64 = function(a2, b2, c2) {
      this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.VARINT);
      var d2 = this.encoder_;
      jspb.utils.toZigzag64(b2, c2, function(a3, b3) {
        d2.writeSplitVarint64(a3 >>> 0, b3 >>> 0);
      });
    };
    jspb.BinaryWriter.prototype.writeRepeatedInt32 = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeSignedVarint32_(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedInt32String = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeInt32String(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedInt64 = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeSignedVarint64_(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedSplitFixed64 = function(a2, b2, c2, d2) {
      if (null != b2)
        for (var e2 = 0; e2 < b2.length; e2++)
          this.writeSplitFixed64(a2, c2(b2[e2]), d2(b2[e2]));
    };
    jspb.BinaryWriter.prototype.writeRepeatedSplitVarint64 = function(a2, b2, c2, d2) {
      if (null != b2)
        for (var e2 = 0; e2 < b2.length; e2++)
          this.writeSplitVarint64(a2, c2(b2[e2]), d2(b2[e2]));
    };
    jspb.BinaryWriter.prototype.writeRepeatedSplitZigzagVarint64 = function(a2, b2, c2, d2) {
      if (null != b2)
        for (var e2 = 0; e2 < b2.length; e2++)
          this.writeSplitZigzagVarint64(a2, c2(b2[e2]), d2(b2[e2]));
    };
    jspb.BinaryWriter.prototype.writeRepeatedInt64String = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeInt64String(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedUint32 = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeUnsignedVarint32_(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedUint32String = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeUint32String(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedUint64 = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeUnsignedVarint64_(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedUint64String = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeUint64String(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedSint32 = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeZigzagVarint32_(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedSint64 = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeZigzagVarint64_(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedSint64String = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeZigzagVarint64String_(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedSintHash64 = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeZigzagVarintHash64_(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedFixed32 = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeFixed32(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedFixed64 = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeFixed64(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedFixed64String = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeFixed64String(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedSfixed32 = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeSfixed32(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedSfixed64 = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeSfixed64(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedSfixed64String = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeSfixed64String(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedFloat = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeFloat(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedDouble = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeDouble(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedBool = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeBool(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedEnum = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeEnum(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedString = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeString(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedBytes = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeBytes(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedMessage = function(a2, b2, c2) {
      if (null != b2)
        for (var d2 = 0; d2 < b2.length; d2++) {
          var e2 = this.beginDelimited_(a2);
          c2(b2[d2], this);
          this.endDelimited_(e2);
        }
    };
    jspb.BinaryWriter.prototype.writeRepeatedGroup = function(a2, b2, c2) {
      if (null != b2)
        for (var d2 = 0; d2 < b2.length; d2++)
          this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.START_GROUP), c2(b2[d2], this), this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.END_GROUP);
    };
    jspb.BinaryWriter.prototype.writeRepeatedFixedHash64 = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeFixedHash64(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writeRepeatedVarintHash64 = function(a2, b2) {
      if (null != b2)
        for (var c2 = 0; c2 < b2.length; c2++)
          this.writeVarintHash64(a2, b2[c2]);
    };
    jspb.BinaryWriter.prototype.writePackedInt32 = function(a2, b2) {
      if (null != b2 && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c2 = 0; c2 < b2.length; c2++)
          this.encoder_.writeSignedVarint32(b2[c2]);
        this.endDelimited_(a2);
      }
    };
    jspb.BinaryWriter.prototype.writePackedInt32String = function(a2, b2) {
      if (null != b2 && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c2 = 0; c2 < b2.length; c2++)
          this.encoder_.writeSignedVarint32(parseInt(b2[c2], 10));
        this.endDelimited_(a2);
      }
    };
    jspb.BinaryWriter.prototype.writePackedInt64 = function(a2, b2) {
      if (null != b2 && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c2 = 0; c2 < b2.length; c2++)
          this.encoder_.writeSignedVarint64(b2[c2]);
        this.endDelimited_(a2);
      }
    };
    jspb.BinaryWriter.prototype.writePackedSplitFixed64 = function(a2, b2, c2, d2) {
      if (null != b2) {
        a2 = this.beginDelimited_(a2);
        for (var e2 = 0; e2 < b2.length; e2++)
          this.encoder_.writeSplitFixed64(c2(b2[e2]), d2(b2[e2]));
        this.endDelimited_(a2);
      }
    };
    jspb.BinaryWriter.prototype.writePackedSplitVarint64 = function(a2, b2, c2, d2) {
      if (null != b2) {
        a2 = this.beginDelimited_(a2);
        for (var e2 = 0; e2 < b2.length; e2++)
          this.encoder_.writeSplitVarint64(c2(b2[e2]), d2(b2[e2]));
        this.endDelimited_(a2);
      }
    };
    jspb.BinaryWriter.prototype.writePackedSplitZigzagVarint64 = function(a2, b2, c2, d2) {
      if (null != b2) {
        a2 = this.beginDelimited_(a2);
        for (var e2 = this.encoder_, f2 = 0; f2 < b2.length; f2++)
          jspb.utils.toZigzag64(c2(b2[f2]), d2(b2[f2]), function(a3, b3) {
            e2.writeSplitVarint64(a3 >>> 0, b3 >>> 0);
          });
        this.endDelimited_(a2);
      }
    };
    jspb.BinaryWriter.prototype.writePackedInt64String = function(a2, b2) {
      if (null != b2 && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c2 = 0; c2 < b2.length; c2++) {
          var d2 = jspb.arith.Int64.fromString(b2[c2]);
          this.encoder_.writeSplitVarint64(d2.lo, d2.hi);
        }
        this.endDelimited_(a2);
      }
    };
    jspb.BinaryWriter.prototype.writePackedUint32 = function(a2, b2) {
      if (null != b2 && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c2 = 0; c2 < b2.length; c2++)
          this.encoder_.writeUnsignedVarint32(b2[c2]);
        this.endDelimited_(a2);
      }
    };
    jspb.BinaryWriter.prototype.writePackedUint32String = function(a2, b2) {
      if (null != b2 && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c2 = 0; c2 < b2.length; c2++)
          this.encoder_.writeUnsignedVarint32(parseInt(b2[c2], 10));
        this.endDelimited_(a2);
      }
    };
    jspb.BinaryWriter.prototype.writePackedUint64 = function(a2, b2) {
      if (null != b2 && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c2 = 0; c2 < b2.length; c2++)
          this.encoder_.writeUnsignedVarint64(b2[c2]);
        this.endDelimited_(a2);
      }
    };
    jspb.BinaryWriter.prototype.writePackedUint64String = function(a2, b2) {
      if (null != b2 && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c2 = 0; c2 < b2.length; c2++) {
          var d2 = jspb.arith.UInt64.fromString(b2[c2]);
          this.encoder_.writeSplitVarint64(d2.lo, d2.hi);
        }
        this.endDelimited_(a2);
      }
    };
    jspb.BinaryWriter.prototype.writePackedSint32 = function(a2, b2) {
      if (null != b2 && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c2 = 0; c2 < b2.length; c2++)
          this.encoder_.writeZigzagVarint32(b2[c2]);
        this.endDelimited_(a2);
      }
    };
    jspb.BinaryWriter.prototype.writePackedSint64 = function(a2, b2) {
      if (null != b2 && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c2 = 0; c2 < b2.length; c2++)
          this.encoder_.writeZigzagVarint64(b2[c2]);
        this.endDelimited_(a2);
      }
    };
    jspb.BinaryWriter.prototype.writePackedSint64String = function(a2, b2) {
      if (null != b2 && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c2 = 0; c2 < b2.length; c2++)
          this.encoder_.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(b2[c2]));
        this.endDelimited_(a2);
      }
    };
    jspb.BinaryWriter.prototype.writePackedSintHash64 = function(a2, b2) {
      if (null != b2 && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c2 = 0; c2 < b2.length; c2++)
          this.encoder_.writeZigzagVarintHash64(b2[c2]);
        this.endDelimited_(a2);
      }
    };
    jspb.BinaryWriter.prototype.writePackedFixed32 = function(a2, b2) {
      if (null != b2 && b2.length)
        for (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * b2.length), a2 = 0; a2 < b2.length; a2++)
          this.encoder_.writeUint32(b2[a2]);
    };
    jspb.BinaryWriter.prototype.writePackedFixed64 = function(a2, b2) {
      if (null != b2 && b2.length)
        for (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b2.length), a2 = 0; a2 < b2.length; a2++)
          this.encoder_.writeUint64(b2[a2]);
    };
    jspb.BinaryWriter.prototype.writePackedFixed64String = function(a2, b2) {
      if (null != b2 && b2.length)
        for (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b2.length), a2 = 0; a2 < b2.length; a2++) {
          var c2 = jspb.arith.UInt64.fromString(b2[a2]);
          this.encoder_.writeSplitFixed64(c2.lo, c2.hi);
        }
    };
    jspb.BinaryWriter.prototype.writePackedSfixed32 = function(a2, b2) {
      if (null != b2 && b2.length)
        for (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * b2.length), a2 = 0; a2 < b2.length; a2++)
          this.encoder_.writeInt32(b2[a2]);
    };
    jspb.BinaryWriter.prototype.writePackedSfixed64 = function(a2, b2) {
      if (null != b2 && b2.length)
        for (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b2.length), a2 = 0; a2 < b2.length; a2++)
          this.encoder_.writeInt64(b2[a2]);
    };
    jspb.BinaryWriter.prototype.writePackedSfixed64String = function(a2, b2) {
      if (null != b2 && b2.length)
        for (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b2.length), a2 = 0; a2 < b2.length; a2++)
          this.encoder_.writeInt64String(b2[a2]);
    };
    jspb.BinaryWriter.prototype.writePackedFloat = function(a2, b2) {
      if (null != b2 && b2.length)
        for (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * b2.length), a2 = 0; a2 < b2.length; a2++)
          this.encoder_.writeFloat(b2[a2]);
    };
    jspb.BinaryWriter.prototype.writePackedDouble = function(a2, b2) {
      if (null != b2 && b2.length)
        for (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b2.length), a2 = 0; a2 < b2.length; a2++)
          this.encoder_.writeDouble(b2[a2]);
    };
    jspb.BinaryWriter.prototype.writePackedBool = function(a2, b2) {
      if (null != b2 && b2.length)
        for (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(b2.length), a2 = 0; a2 < b2.length; a2++)
          this.encoder_.writeBool(b2[a2]);
    };
    jspb.BinaryWriter.prototype.writePackedEnum = function(a2, b2) {
      if (null != b2 && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c2 = 0; c2 < b2.length; c2++)
          this.encoder_.writeEnum(b2[c2]);
        this.endDelimited_(a2);
      }
    };
    jspb.BinaryWriter.prototype.writePackedFixedHash64 = function(a2, b2) {
      if (null != b2 && b2.length)
        for (this.writeFieldHeader_(a2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b2.length), a2 = 0; a2 < b2.length; a2++)
          this.encoder_.writeFixedHash64(b2[a2]);
    };
    jspb.BinaryWriter.prototype.writePackedVarintHash64 = function(a2, b2) {
      if (null != b2 && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c2 = 0; c2 < b2.length; c2++)
          this.encoder_.writeVarintHash64(b2[c2]);
        this.endDelimited_(a2);
      }
    };
    jspb.Map = function(a2, b2) {
      this.arr_ = a2;
      this.valueCtor_ = b2;
      this.map_ = {};
      this.arrClean = true;
      0 < this.arr_.length && this.loadFromArray_();
    };
    jspb.Map.prototype.loadFromArray_ = function() {
      for (var a2 = 0; a2 < this.arr_.length; a2++) {
        var b2 = this.arr_[a2], c2 = b2[0];
        this.map_[c2.toString()] = new jspb.Map.Entry_(c2, b2[1]);
      }
      this.arrClean = true;
    };
    jspb.Map.prototype.toArray = function() {
      if (this.arrClean) {
        if (this.valueCtor_) {
          var a2 = this.map_, b2;
          for (b2 in a2)
            if (Object.prototype.hasOwnProperty.call(a2, b2)) {
              var c2 = a2[b2].valueWrapper;
              c2 && c2.toArray();
            }
        }
      } else {
        this.arr_.length = 0;
        a2 = this.stringKeys_();
        a2.sort();
        for (b2 = 0; b2 < a2.length; b2++) {
          var d2 = this.map_[a2[b2]];
          (c2 = d2.valueWrapper) && c2.toArray();
          this.arr_.push([d2.key, d2.value]);
        }
        this.arrClean = true;
      }
      return this.arr_;
    };
    jspb.Map.prototype.toObject = function(a2, b2) {
      for (var c2 = this.toArray(), d2 = [], e2 = 0; e2 < c2.length; e2++) {
        var f2 = this.map_[c2[e2][0].toString()];
        this.wrapEntry_(f2);
        var g = f2.valueWrapper;
        g ? (goog.asserts.assert(b2), d2.push([f2.key, b2(a2, g)])) : d2.push([f2.key, f2.value]);
      }
      return d2;
    };
    jspb.Map.fromObject = function(a2, b2, c2) {
      b2 = new jspb.Map([], b2);
      for (var d2 = 0; d2 < a2.length; d2++) {
        var e2 = a2[d2][0], f2 = c2(a2[d2][1]);
        b2.set(e2, f2);
      }
      return b2;
    };
    jspb.Map.ArrayIteratorIterable_ = function(a2) {
      this.idx_ = 0;
      this.arr_ = a2;
    };
    jspb.Map.ArrayIteratorIterable_.prototype.next = function() {
      return this.idx_ < this.arr_.length ? { done: false, value: this.arr_[this.idx_++] } : { done: true, value: void 0 };
    };
    "undefined" != typeof Symbol && (jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator] = function() {
      return this;
    });
    jspb.Map.prototype.getLength = function() {
      return this.stringKeys_().length;
    };
    jspb.Map.prototype.clear = function() {
      this.map_ = {};
      this.arrClean = false;
    };
    jspb.Map.prototype.del = function(a2) {
      a2 = a2.toString();
      var b2 = this.map_.hasOwnProperty(a2);
      delete this.map_[a2];
      this.arrClean = false;
      return b2;
    };
    jspb.Map.prototype.getEntryList = function() {
      var a2 = [], b2 = this.stringKeys_();
      b2.sort();
      for (var c2 = 0; c2 < b2.length; c2++) {
        var d2 = this.map_[b2[c2]];
        a2.push([d2.key, d2.value]);
      }
      return a2;
    };
    jspb.Map.prototype.entries = function() {
      var a2 = [], b2 = this.stringKeys_();
      b2.sort();
      for (var c2 = 0; c2 < b2.length; c2++) {
        var d2 = this.map_[b2[c2]];
        a2.push([d2.key, this.wrapEntry_(d2)]);
      }
      return new jspb.Map.ArrayIteratorIterable_(a2);
    };
    jspb.Map.prototype.keys = function() {
      var a2 = [], b2 = this.stringKeys_();
      b2.sort();
      for (var c2 = 0; c2 < b2.length; c2++)
        a2.push(this.map_[b2[c2]].key);
      return new jspb.Map.ArrayIteratorIterable_(a2);
    };
    jspb.Map.prototype.values = function() {
      var a2 = [], b2 = this.stringKeys_();
      b2.sort();
      for (var c2 = 0; c2 < b2.length; c2++)
        a2.push(this.wrapEntry_(this.map_[b2[c2]]));
      return new jspb.Map.ArrayIteratorIterable_(a2);
    };
    jspb.Map.prototype.forEach = function(a2, b2) {
      var c2 = this.stringKeys_();
      c2.sort();
      for (var d2 = 0; d2 < c2.length; d2++) {
        var e2 = this.map_[c2[d2]];
        a2.call(b2, this.wrapEntry_(e2), e2.key, this);
      }
    };
    jspb.Map.prototype.set = function(a2, b2) {
      var c2 = new jspb.Map.Entry_(a2);
      this.valueCtor_ ? (c2.valueWrapper = b2, c2.value = b2.toArray()) : c2.value = b2;
      this.map_[a2.toString()] = c2;
      this.arrClean = false;
      return this;
    };
    jspb.Map.prototype.wrapEntry_ = function(a2) {
      return this.valueCtor_ ? (a2.valueWrapper || (a2.valueWrapper = new this.valueCtor_(a2.value)), a2.valueWrapper) : a2.value;
    };
    jspb.Map.prototype.get = function(a2) {
      if (a2 = this.map_[a2.toString()])
        return this.wrapEntry_(a2);
    };
    jspb.Map.prototype.has = function(a2) {
      return a2.toString() in this.map_;
    };
    jspb.Map.prototype.serializeBinary = function(a2, b2, c2, d2, e2) {
      var f2 = this.stringKeys_();
      f2.sort();
      for (var g = 0; g < f2.length; g++) {
        var h = this.map_[f2[g]];
        b2.beginSubMessage(a2);
        c2.call(b2, 1, h.key);
        this.valueCtor_ ? d2.call(b2, 2, this.wrapEntry_(h), e2) : d2.call(b2, 2, h.value);
        b2.endSubMessage();
      }
    };
    jspb.Map.deserializeBinary = function(a2, b2, c2, d2, e2, f2, g) {
      for (; b2.nextField() && !b2.isEndGroup(); ) {
        var h = b2.getFieldNumber();
        1 == h ? f2 = c2.call(b2) : 2 == h && (a2.valueCtor_ ? (goog.asserts.assert(e2), g || (g = new a2.valueCtor_()), d2.call(b2, g, e2)) : g = d2.call(b2));
      }
      goog.asserts.assert(void 0 != f2);
      goog.asserts.assert(void 0 != g);
      a2.set(f2, g);
    };
    jspb.Map.prototype.stringKeys_ = function() {
      var a2 = this.map_, b2 = [], c2;
      for (c2 in a2)
        Object.prototype.hasOwnProperty.call(a2, c2) && b2.push(c2);
      return b2;
    };
    jspb.Map.Entry_ = function(a2, b2) {
      this.key = a2;
      this.value = b2;
      this.valueWrapper = void 0;
    };
    jspb.ExtensionFieldInfo = function(a2, b2, c2, d2, e2) {
      this.fieldIndex = a2;
      this.fieldName = b2;
      this.ctor = c2;
      this.toObjectFn = d2;
      this.isRepeated = e2;
    };
    jspb.ExtensionFieldBinaryInfo = function(a2, b2, c2, d2, e2, f2) {
      this.fieldInfo = a2;
      this.binaryReaderFn = b2;
      this.binaryWriterFn = c2;
      this.binaryMessageSerializeFn = d2;
      this.binaryMessageDeserializeFn = e2;
      this.isPacked = f2;
    };
    jspb.ExtensionFieldInfo.prototype.isMessageType = function() {
      return !!this.ctor;
    };
    jspb.Message = function() {
    };
    jspb.Message.GENERATE_TO_OBJECT = true;
    jspb.Message.GENERATE_FROM_OBJECT = !goog.DISALLOW_TEST_ONLY_CODE;
    jspb.Message.GENERATE_TO_STRING = true;
    jspb.Message.ASSUME_LOCAL_ARRAYS = false;
    jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS = true;
    jspb.Message.SUPPORTS_UINT8ARRAY_ = "function" == typeof Uint8Array;
    jspb.Message.prototype.getJsPbMessageId = function() {
      return this.messageId_;
    };
    jspb.Message.getIndex_ = function(a2, b2) {
      return b2 + a2.arrayIndexOffset_;
    };
    jspb.Message.hiddenES6Property_ = function() {
    };
    jspb.Message.getFieldNumber_ = function(a2, b2) {
      return b2 - a2.arrayIndexOffset_;
    };
    jspb.Message.initialize = function(a2, b2, c2, d2, e2, f2) {
      a2.wrappers_ = null;
      b2 || (b2 = c2 ? [c2] : []);
      a2.messageId_ = c2 ? String(c2) : void 0;
      a2.arrayIndexOffset_ = 0 === c2 ? -1 : 0;
      a2.array = b2;
      jspb.Message.initPivotAndExtensionObject_(a2, d2);
      a2.convertedPrimitiveFields_ = {};
      jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS || (a2.repeatedFields = e2);
      if (e2)
        for (b2 = 0; b2 < e2.length; b2++)
          c2 = e2[b2], c2 < a2.pivot_ ? (c2 = jspb.Message.getIndex_(a2, c2), a2.array[c2] = a2.array[c2] || jspb.Message.EMPTY_LIST_SENTINEL_) : (jspb.Message.maybeInitEmptyExtensionObject_(a2), a2.extensionObject_[c2] = a2.extensionObject_[c2] || jspb.Message.EMPTY_LIST_SENTINEL_);
      if (f2 && f2.length)
        for (b2 = 0; b2 < f2.length; b2++)
          jspb.Message.computeOneofCase(a2, f2[b2]);
    };
    jspb.Message.EMPTY_LIST_SENTINEL_ = goog.DEBUG && Object.freeze ? Object.freeze([]) : [];
    jspb.Message.isArray_ = function(a2) {
      return jspb.Message.ASSUME_LOCAL_ARRAYS ? a2 instanceof Array : Array.isArray(a2);
    };
    jspb.Message.isExtensionObject_ = function(a2) {
      return null !== a2 && "object" == typeof a2 && !jspb.Message.isArray_(a2) && !(jspb.Message.SUPPORTS_UINT8ARRAY_ && a2 instanceof Uint8Array);
    };
    jspb.Message.initPivotAndExtensionObject_ = function(a2, b2) {
      var c2 = a2.array.length, d2 = -1;
      if (c2 && (d2 = c2 - 1, c2 = a2.array[d2], jspb.Message.isExtensionObject_(c2))) {
        a2.pivot_ = jspb.Message.getFieldNumber_(a2, d2);
        a2.extensionObject_ = c2;
        return;
      }
      -1 < b2 ? (a2.pivot_ = Math.max(b2, jspb.Message.getFieldNumber_(a2, d2 + 1)), a2.extensionObject_ = null) : a2.pivot_ = Number.MAX_VALUE;
    };
    jspb.Message.maybeInitEmptyExtensionObject_ = function(a2) {
      var b2 = jspb.Message.getIndex_(a2, a2.pivot_);
      a2.array[b2] || (a2.extensionObject_ = a2.array[b2] = {});
    };
    jspb.Message.toObjectList = function(a2, b2, c2) {
      for (var d2 = [], e2 = 0; e2 < a2.length; e2++)
        d2[e2] = b2.call(a2[e2], c2, a2[e2]);
      return d2;
    };
    jspb.Message.toObjectExtension = function(a2, b2, c2, d2, e2) {
      for (var f2 in c2) {
        var g = c2[f2], h = d2.call(a2, g);
        if (null != h) {
          for (var k in g.fieldName)
            if (g.fieldName.hasOwnProperty(k))
              break;
          b2[k] = g.toObjectFn ? g.isRepeated ? jspb.Message.toObjectList(h, g.toObjectFn, e2) : g.toObjectFn(e2, h) : h;
        }
      }
    };
    jspb.Message.serializeBinaryExtensions = function(a2, b2, c2, d2) {
      for (var e2 in c2) {
        var f2 = c2[e2], g = f2.fieldInfo;
        if (!f2.binaryWriterFn)
          throw Error("Message extension present that was generated without binary serialization support");
        var h = d2.call(a2, g);
        if (null != h)
          if (g.isMessageType())
            if (f2.binaryMessageSerializeFn)
              f2.binaryWriterFn.call(b2, g.fieldIndex, h, f2.binaryMessageSerializeFn);
            else
              throw Error("Message extension present holding submessage without binary support enabled, and message is being serialized to binary format");
          else
            f2.binaryWriterFn.call(b2, g.fieldIndex, h);
      }
    };
    jspb.Message.readBinaryExtension = function(a2, b2, c2, d2, e2) {
      var f2 = c2[b2.getFieldNumber()];
      if (f2) {
        c2 = f2.fieldInfo;
        if (!f2.binaryReaderFn)
          throw Error("Deserializing extension whose generated code does not support binary format");
        if (c2.isMessageType()) {
          var g = new c2.ctor();
          f2.binaryReaderFn.call(b2, g, f2.binaryMessageDeserializeFn);
        } else
          g = f2.binaryReaderFn.call(b2);
        c2.isRepeated && !f2.isPacked ? (b2 = d2.call(a2, c2)) ? b2.push(g) : e2.call(a2, c2, [g]) : e2.call(a2, c2, g);
      } else
        b2.skipField();
    };
    jspb.Message.getField = function(a2, b2) {
      if (b2 < a2.pivot_) {
        b2 = jspb.Message.getIndex_(a2, b2);
        var c2 = a2.array[b2];
        return c2 === jspb.Message.EMPTY_LIST_SENTINEL_ ? a2.array[b2] = [] : c2;
      }
      if (a2.extensionObject_)
        return c2 = a2.extensionObject_[b2], c2 === jspb.Message.EMPTY_LIST_SENTINEL_ ? a2.extensionObject_[b2] = [] : c2;
    };
    jspb.Message.getRepeatedField = function(a2, b2) {
      return jspb.Message.getField(a2, b2);
    };
    jspb.Message.getOptionalFloatingPointField = function(a2, b2) {
      a2 = jspb.Message.getField(a2, b2);
      return null == a2 ? a2 : +a2;
    };
    jspb.Message.getBooleanField = function(a2, b2) {
      a2 = jspb.Message.getField(a2, b2);
      return null == a2 ? a2 : !!a2;
    };
    jspb.Message.getRepeatedFloatingPointField = function(a2, b2) {
      var c2 = jspb.Message.getRepeatedField(a2, b2);
      a2.convertedPrimitiveFields_ || (a2.convertedPrimitiveFields_ = {});
      if (!a2.convertedPrimitiveFields_[b2]) {
        for (var d2 = 0; d2 < c2.length; d2++)
          c2[d2] = +c2[d2];
        a2.convertedPrimitiveFields_[b2] = true;
      }
      return c2;
    };
    jspb.Message.getRepeatedBooleanField = function(a2, b2) {
      var c2 = jspb.Message.getRepeatedField(a2, b2);
      a2.convertedPrimitiveFields_ || (a2.convertedPrimitiveFields_ = {});
      if (!a2.convertedPrimitiveFields_[b2]) {
        for (var d2 = 0; d2 < c2.length; d2++)
          c2[d2] = !!c2[d2];
        a2.convertedPrimitiveFields_[b2] = true;
      }
      return c2;
    };
    jspb.Message.bytesAsB64 = function(a2) {
      if (null == a2 || "string" === typeof a2)
        return a2;
      if (jspb.Message.SUPPORTS_UINT8ARRAY_ && a2 instanceof Uint8Array)
        return goog.crypt.base64.encodeByteArray(a2);
      goog.asserts.fail("Cannot coerce to b64 string: " + goog.typeOf(a2));
      return null;
    };
    jspb.Message.bytesAsU8 = function(a2) {
      if (null == a2 || a2 instanceof Uint8Array)
        return a2;
      if ("string" === typeof a2)
        return goog.crypt.base64.decodeStringToUint8Array(a2);
      goog.asserts.fail("Cannot coerce to Uint8Array: " + goog.typeOf(a2));
      return null;
    };
    jspb.Message.bytesListAsB64 = function(a2) {
      jspb.Message.assertConsistentTypes_(a2);
      return a2.length && "string" !== typeof a2[0] ? goog.array.map(a2, jspb.Message.bytesAsB64) : a2;
    };
    jspb.Message.bytesListAsU8 = function(a2) {
      jspb.Message.assertConsistentTypes_(a2);
      return !a2.length || a2[0] instanceof Uint8Array ? a2 : goog.array.map(a2, jspb.Message.bytesAsU8);
    };
    jspb.Message.assertConsistentTypes_ = function(a2) {
      if (goog.DEBUG && a2 && 1 < a2.length) {
        var b2 = goog.typeOf(a2[0]);
        goog.array.forEach(a2, function(a3) {
          goog.typeOf(a3) != b2 && goog.asserts.fail("Inconsistent type in JSPB repeated field array. Got " + goog.typeOf(a3) + " expected " + b2);
        });
      }
    };
    jspb.Message.getFieldWithDefault = function(a2, b2, c2) {
      a2 = jspb.Message.getField(a2, b2);
      return null == a2 ? c2 : a2;
    };
    jspb.Message.getBooleanFieldWithDefault = function(a2, b2, c2) {
      a2 = jspb.Message.getBooleanField(a2, b2);
      return null == a2 ? c2 : a2;
    };
    jspb.Message.getFloatingPointFieldWithDefault = function(a2, b2, c2) {
      a2 = jspb.Message.getOptionalFloatingPointField(a2, b2);
      return null == a2 ? c2 : a2;
    };
    jspb.Message.getFieldProto3 = jspb.Message.getFieldWithDefault;
    jspb.Message.getMapField = function(a2, b2, c2, d2) {
      a2.wrappers_ || (a2.wrappers_ = {});
      if (b2 in a2.wrappers_)
        return a2.wrappers_[b2];
      var e2 = jspb.Message.getField(a2, b2);
      if (!e2) {
        if (c2)
          return;
        e2 = [];
        jspb.Message.setField(a2, b2, e2);
      }
      return a2.wrappers_[b2] = new jspb.Map(e2, d2);
    };
    jspb.Message.setField = function(a2, b2, c2) {
      goog.asserts.assertInstanceof(a2, jspb.Message);
      b2 < a2.pivot_ ? a2.array[jspb.Message.getIndex_(a2, b2)] = c2 : (jspb.Message.maybeInitEmptyExtensionObject_(a2), a2.extensionObject_[b2] = c2);
      return a2;
    };
    jspb.Message.setProto3IntField = function(a2, b2, c2) {
      return jspb.Message.setFieldIgnoringDefault_(a2, b2, c2, 0);
    };
    jspb.Message.setProto3FloatField = function(a2, b2, c2) {
      return jspb.Message.setFieldIgnoringDefault_(a2, b2, c2, 0);
    };
    jspb.Message.setProto3BooleanField = function(a2, b2, c2) {
      return jspb.Message.setFieldIgnoringDefault_(a2, b2, c2, false);
    };
    jspb.Message.setProto3StringField = function(a2, b2, c2) {
      return jspb.Message.setFieldIgnoringDefault_(a2, b2, c2, "");
    };
    jspb.Message.setProto3BytesField = function(a2, b2, c2) {
      return jspb.Message.setFieldIgnoringDefault_(a2, b2, c2, "");
    };
    jspb.Message.setProto3EnumField = function(a2, b2, c2) {
      return jspb.Message.setFieldIgnoringDefault_(a2, b2, c2, 0);
    };
    jspb.Message.setProto3StringIntField = function(a2, b2, c2) {
      return jspb.Message.setFieldIgnoringDefault_(a2, b2, c2, "0");
    };
    jspb.Message.setFieldIgnoringDefault_ = function(a2, b2, c2, d2) {
      goog.asserts.assertInstanceof(a2, jspb.Message);
      c2 !== d2 ? jspb.Message.setField(a2, b2, c2) : b2 < a2.pivot_ ? a2.array[jspb.Message.getIndex_(a2, b2)] = null : (jspb.Message.maybeInitEmptyExtensionObject_(a2), delete a2.extensionObject_[b2]);
      return a2;
    };
    jspb.Message.addToRepeatedField = function(a2, b2, c2, d2) {
      goog.asserts.assertInstanceof(a2, jspb.Message);
      b2 = jspb.Message.getRepeatedField(a2, b2);
      void 0 != d2 ? b2.splice(d2, 0, c2) : b2.push(c2);
      return a2;
    };
    jspb.Message.setOneofField = function(a2, b2, c2, d2) {
      goog.asserts.assertInstanceof(a2, jspb.Message);
      (c2 = jspb.Message.computeOneofCase(a2, c2)) && c2 !== b2 && void 0 !== d2 && (a2.wrappers_ && c2 in a2.wrappers_ && (a2.wrappers_[c2] = void 0), jspb.Message.setField(a2, c2, void 0));
      return jspb.Message.setField(a2, b2, d2);
    };
    jspb.Message.computeOneofCase = function(a2, b2) {
      for (var c2, d2, e2 = 0; e2 < b2.length; e2++) {
        var f2 = b2[e2], g = jspb.Message.getField(a2, f2);
        null != g && (c2 = f2, d2 = g, jspb.Message.setField(a2, f2, void 0));
      }
      return c2 ? (jspb.Message.setField(a2, c2, d2), c2) : 0;
    };
    jspb.Message.getWrapperField = function(a2, b2, c2, d2) {
      a2.wrappers_ || (a2.wrappers_ = {});
      if (!a2.wrappers_[c2]) {
        var e2 = jspb.Message.getField(a2, c2);
        if (d2 || e2)
          a2.wrappers_[c2] = new b2(e2);
      }
      return a2.wrappers_[c2];
    };
    jspb.Message.getRepeatedWrapperField = function(a2, b2, c2) {
      jspb.Message.wrapRepeatedField_(a2, b2, c2);
      b2 = a2.wrappers_[c2];
      b2 == jspb.Message.EMPTY_LIST_SENTINEL_ && (b2 = a2.wrappers_[c2] = []);
      return b2;
    };
    jspb.Message.wrapRepeatedField_ = function(a2, b2, c2) {
      a2.wrappers_ || (a2.wrappers_ = {});
      if (!a2.wrappers_[c2]) {
        for (var d2 = jspb.Message.getRepeatedField(a2, c2), e2 = [], f2 = 0; f2 < d2.length; f2++)
          e2[f2] = new b2(d2[f2]);
        a2.wrappers_[c2] = e2;
      }
    };
    jspb.Message.setWrapperField = function(a2, b2, c2) {
      goog.asserts.assertInstanceof(a2, jspb.Message);
      a2.wrappers_ || (a2.wrappers_ = {});
      var d2 = c2 ? c2.toArray() : c2;
      a2.wrappers_[b2] = c2;
      return jspb.Message.setField(a2, b2, d2);
    };
    jspb.Message.setOneofWrapperField = function(a2, b2, c2, d2) {
      goog.asserts.assertInstanceof(a2, jspb.Message);
      a2.wrappers_ || (a2.wrappers_ = {});
      var e2 = d2 ? d2.toArray() : d2;
      a2.wrappers_[b2] = d2;
      return jspb.Message.setOneofField(a2, b2, c2, e2);
    };
    jspb.Message.setRepeatedWrapperField = function(a2, b2, c2) {
      goog.asserts.assertInstanceof(a2, jspb.Message);
      a2.wrappers_ || (a2.wrappers_ = {});
      c2 = c2 || [];
      for (var d2 = [], e2 = 0; e2 < c2.length; e2++)
        d2[e2] = c2[e2].toArray();
      a2.wrappers_[b2] = c2;
      return jspb.Message.setField(a2, b2, d2);
    };
    jspb.Message.addToRepeatedWrapperField = function(a2, b2, c2, d2, e2) {
      jspb.Message.wrapRepeatedField_(a2, d2, b2);
      var f2 = a2.wrappers_[b2];
      f2 || (f2 = a2.wrappers_[b2] = []);
      c2 = c2 ? c2 : new d2();
      a2 = jspb.Message.getRepeatedField(a2, b2);
      void 0 != e2 ? (f2.splice(e2, 0, c2), a2.splice(e2, 0, c2.toArray())) : (f2.push(c2), a2.push(c2.toArray()));
      return c2;
    };
    jspb.Message.toMap = function(a2, b2, c2, d2) {
      for (var e2 = {}, f2 = 0; f2 < a2.length; f2++)
        e2[b2.call(a2[f2])] = c2 ? c2.call(a2[f2], d2, a2[f2]) : a2[f2];
      return e2;
    };
    jspb.Message.prototype.syncMapFields_ = function() {
      if (this.wrappers_)
        for (var a2 in this.wrappers_) {
          var b2 = this.wrappers_[a2];
          if (Array.isArray(b2))
            for (var c2 = 0; c2 < b2.length; c2++)
              b2[c2] && b2[c2].toArray();
          else
            b2 && b2.toArray();
        }
    };
    jspb.Message.prototype.toArray = function() {
      this.syncMapFields_();
      return this.array;
    };
    jspb.Message.GENERATE_TO_STRING && (jspb.Message.prototype.toString = function() {
      this.syncMapFields_();
      return this.array.toString();
    });
    jspb.Message.prototype.getExtension = function(a2) {
      if (this.extensionObject_) {
        this.wrappers_ || (this.wrappers_ = {});
        var b2 = a2.fieldIndex;
        if (a2.isRepeated) {
          if (a2.isMessageType())
            return this.wrappers_[b2] || (this.wrappers_[b2] = goog.array.map(this.extensionObject_[b2] || [], function(b3) {
              return new a2.ctor(b3);
            })), this.wrappers_[b2];
        } else if (a2.isMessageType())
          return !this.wrappers_[b2] && this.extensionObject_[b2] && (this.wrappers_[b2] = new a2.ctor(this.extensionObject_[b2])), this.wrappers_[b2];
        return this.extensionObject_[b2];
      }
    };
    jspb.Message.prototype.setExtension = function(a2, b2) {
      this.wrappers_ || (this.wrappers_ = {});
      jspb.Message.maybeInitEmptyExtensionObject_(this);
      var c2 = a2.fieldIndex;
      a2.isRepeated ? (b2 = b2 || [], a2.isMessageType() ? (this.wrappers_[c2] = b2, this.extensionObject_[c2] = goog.array.map(b2, function(a3) {
        return a3.toArray();
      })) : this.extensionObject_[c2] = b2) : a2.isMessageType() ? (this.wrappers_[c2] = b2, this.extensionObject_[c2] = b2 ? b2.toArray() : b2) : this.extensionObject_[c2] = b2;
      return this;
    };
    jspb.Message.difference = function(a2, b2) {
      if (!(a2 instanceof b2.constructor))
        throw Error("Messages have different types.");
      var c2 = a2.toArray();
      b2 = b2.toArray();
      var d2 = [], e2 = 0, f2 = c2.length > b2.length ? c2.length : b2.length;
      a2.getJsPbMessageId() && (d2[0] = a2.getJsPbMessageId(), e2 = 1);
      for (; e2 < f2; e2++)
        jspb.Message.compareFields(c2[e2], b2[e2]) || (d2[e2] = b2[e2]);
      return new a2.constructor(d2);
    };
    jspb.Message.equals = function(a2, b2) {
      return a2 == b2 || !(!a2 || !b2) && a2 instanceof b2.constructor && jspb.Message.compareFields(a2.toArray(), b2.toArray());
    };
    jspb.Message.compareExtensions = function(a2, b2) {
      a2 = a2 || {};
      b2 = b2 || {};
      var c2 = {}, d2;
      for (d2 in a2)
        c2[d2] = 0;
      for (d2 in b2)
        c2[d2] = 0;
      for (d2 in c2)
        if (!jspb.Message.compareFields(a2[d2], b2[d2]))
          return false;
      return true;
    };
    jspb.Message.compareFields = function(a2, b2) {
      if (a2 == b2)
        return true;
      if (!goog.isObject(a2) || !goog.isObject(b2))
        return "number" === typeof a2 && isNaN(a2) || "number" === typeof b2 && isNaN(b2) ? String(a2) == String(b2) : false;
      if (a2.constructor != b2.constructor)
        return false;
      if (jspb.Message.SUPPORTS_UINT8ARRAY_ && a2.constructor === Uint8Array) {
        if (a2.length != b2.length)
          return false;
        for (var c2 = 0; c2 < a2.length; c2++)
          if (a2[c2] != b2[c2])
            return false;
        return true;
      }
      if (a2.constructor === Array) {
        var d2 = void 0, e2 = void 0, f2 = Math.max(a2.length, b2.length);
        for (c2 = 0; c2 < f2; c2++) {
          var g = a2[c2], h = b2[c2];
          g && g.constructor == Object && (goog.asserts.assert(void 0 === d2), goog.asserts.assert(c2 === a2.length - 1), d2 = g, g = void 0);
          h && h.constructor == Object && (goog.asserts.assert(void 0 === e2), goog.asserts.assert(c2 === b2.length - 1), e2 = h, h = void 0);
          if (!jspb.Message.compareFields(g, h))
            return false;
        }
        return d2 || e2 ? (d2 = d2 || {}, e2 = e2 || {}, jspb.Message.compareExtensions(d2, e2)) : true;
      }
      if (a2.constructor === Object)
        return jspb.Message.compareExtensions(a2, b2);
      throw Error("Invalid type in JSPB array");
    };
    jspb.Message.prototype.cloneMessage = function() {
      return jspb.Message.cloneMessage(this);
    };
    jspb.Message.prototype.clone = function() {
      return jspb.Message.cloneMessage(this);
    };
    jspb.Message.clone = function(a2) {
      return jspb.Message.cloneMessage(a2);
    };
    jspb.Message.cloneMessage = function(a2) {
      return new a2.constructor(jspb.Message.clone_(a2.toArray()));
    };
    jspb.Message.copyInto = function(a2, b2) {
      goog.asserts.assertInstanceof(a2, jspb.Message);
      goog.asserts.assertInstanceof(b2, jspb.Message);
      goog.asserts.assert(a2.constructor == b2.constructor, "Copy source and target message should have the same type.");
      a2 = jspb.Message.clone(a2);
      for (var c2 = b2.toArray(), d2 = a2.toArray(), e2 = c2.length = 0; e2 < d2.length; e2++)
        c2[e2] = d2[e2];
      b2.wrappers_ = a2.wrappers_;
      b2.extensionObject_ = a2.extensionObject_;
    };
    jspb.Message.clone_ = function(a2) {
      if (Array.isArray(a2)) {
        for (var b2 = Array(a2.length), c2 = 0; c2 < a2.length; c2++) {
          var d2 = a2[c2];
          null != d2 && (b2[c2] = "object" == typeof d2 ? jspb.Message.clone_(goog.asserts.assert(d2)) : d2);
        }
        return b2;
      }
      if (jspb.Message.SUPPORTS_UINT8ARRAY_ && a2 instanceof Uint8Array)
        return new Uint8Array(a2);
      b2 = {};
      for (c2 in a2)
        d2 = a2[c2], null != d2 && (b2[c2] = "object" == typeof d2 ? jspb.Message.clone_(goog.asserts.assert(d2)) : d2);
      return b2;
    };
    jspb.Message.registerMessageType = function(a2, b2) {
      b2.messageId = a2;
    };
    jspb.Message.messageSetExtensions = {};
    jspb.Message.messageSetExtensionsBinary = {};
    jspb.Export = {};
    "object" === typeof exports && (exports.Map = jspb.Map, exports.Message = jspb.Message, exports.BinaryReader = jspb.BinaryReader, exports.BinaryWriter = jspb.BinaryWriter, exports.ExtensionFieldInfo = jspb.ExtensionFieldInfo, exports.ExtensionFieldBinaryInfo = jspb.ExtensionFieldBinaryInfo, exports.exportSymbol = goog.exportSymbol, exports.inherits = goog.inherits, exports.object = { extend: goog.object.extend }, exports.typeOf = goog.typeOf);
  }
});

// node_modules/@tharsis/proto/dist/proto/cosmos/base/v1beta1/coin.js
var require_coin = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/cosmos/base/v1beta1/coin.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.cosmos = void 0;
    var pb_1 = __importStar(require_google_protobuf());
    var cosmos;
    (function(cosmos2) {
      var base;
      (function(base2) {
        var v1beta1;
        (function(v1beta12) {
          class Coin extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("denom" in data && data.denom != void 0) {
                  this.denom = data.denom;
                }
                if ("amount" in data && data.amount != void 0) {
                  this.amount = data.amount;
                }
              }
            }
            get denom() {
              return pb_1.Message.getField(this, 1);
            }
            set denom(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get amount() {
              return pb_1.Message.getField(this, 2);
            }
            set amount(value) {
              pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
              const message = new Coin({});
              if (data.denom != null) {
                message.denom = data.denom;
              }
              if (data.amount != null) {
                message.amount = data.amount;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.denom != null) {
                data.denom = this.denom;
              }
              if (this.amount != null) {
                data.amount = this.amount;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.denom === "string" && this.denom.length)
                writer.writeString(1, this.denom);
              if (typeof this.amount === "string" && this.amount.length)
                writer.writeString(2, this.amount);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Coin();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.denom = reader.readString();
                    break;
                  case 2:
                    message.amount = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Coin.deserialize(bytes);
            }
          }
          v1beta12.Coin = Coin;
          class DecCoin extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("denom" in data && data.denom != void 0) {
                  this.denom = data.denom;
                }
                if ("amount" in data && data.amount != void 0) {
                  this.amount = data.amount;
                }
              }
            }
            get denom() {
              return pb_1.Message.getField(this, 1);
            }
            set denom(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get amount() {
              return pb_1.Message.getField(this, 2);
            }
            set amount(value) {
              pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
              const message = new DecCoin({});
              if (data.denom != null) {
                message.denom = data.denom;
              }
              if (data.amount != null) {
                message.amount = data.amount;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.denom != null) {
                data.denom = this.denom;
              }
              if (this.amount != null) {
                data.amount = this.amount;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.denom === "string" && this.denom.length)
                writer.writeString(1, this.denom);
              if (typeof this.amount === "string" && this.amount.length)
                writer.writeString(2, this.amount);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DecCoin();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.denom = reader.readString();
                    break;
                  case 2:
                    message.amount = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return DecCoin.deserialize(bytes);
            }
          }
          v1beta12.DecCoin = DecCoin;
          class IntProto extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("int" in data && data.int != void 0) {
                  this.int = data.int;
                }
              }
            }
            get int() {
              return pb_1.Message.getField(this, 1);
            }
            set int(value) {
              pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
              const message = new IntProto({});
              if (data.int != null) {
                message.int = data.int;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.int != null) {
                data.int = this.int;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.int === "string" && this.int.length)
                writer.writeString(1, this.int);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new IntProto();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.int = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return IntProto.deserialize(bytes);
            }
          }
          v1beta12.IntProto = IntProto;
          class DecProto extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("dec" in data && data.dec != void 0) {
                  this.dec = data.dec;
                }
              }
            }
            get dec() {
              return pb_1.Message.getField(this, 1);
            }
            set dec(value) {
              pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
              const message = new DecProto({});
              if (data.dec != null) {
                message.dec = data.dec;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.dec != null) {
                data.dec = this.dec;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.dec === "string" && this.dec.length)
                writer.writeString(1, this.dec);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DecProto();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.dec = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return DecProto.deserialize(bytes);
            }
          }
          v1beta12.DecProto = DecProto;
        })(v1beta1 = base2.v1beta1 || (base2.v1beta1 = {}));
      })(base = cosmos2.base || (cosmos2.base = {}));
    })(cosmos = exports2.cosmos || (exports2.cosmos = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/evmos/erc20/v1/tx.js
var require_tx = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/evmos/erc20/v1/tx.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.evmos = void 0;
    var dependency_3 = __importStar(require_coin());
    var pb_1 = __importStar(require_google_protobuf());
    var evmos;
    (function(evmos2) {
      var erc20;
      (function(erc202) {
        var v1;
        (function(v12) {
          class MsgConvertCoin extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("coin" in data && data.coin != void 0) {
                  this.coin = data.coin;
                }
                if ("receiver" in data && data.receiver != void 0) {
                  this.receiver = data.receiver;
                }
                if ("sender" in data && data.sender != void 0) {
                  this.sender = data.sender;
                }
              }
            }
            get coin() {
              return pb_1.Message.getWrapperField(this, dependency_3.cosmos.base.v1beta1.Coin, 1);
            }
            set coin(value) {
              pb_1.Message.setWrapperField(this, 1, value);
            }
            get receiver() {
              return pb_1.Message.getField(this, 2);
            }
            set receiver(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get sender() {
              return pb_1.Message.getField(this, 3);
            }
            set sender(value) {
              pb_1.Message.setField(this, 3, value);
            }
            static fromObject(data) {
              const message = new MsgConvertCoin({});
              if (data.coin != null) {
                message.coin = dependency_3.cosmos.base.v1beta1.Coin.fromObject(data.coin);
              }
              if (data.receiver != null) {
                message.receiver = data.receiver;
              }
              if (data.sender != null) {
                message.sender = data.sender;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.coin != null) {
                data.coin = this.coin.toObject();
              }
              if (this.receiver != null) {
                data.receiver = this.receiver;
              }
              if (this.sender != null) {
                data.sender = this.sender;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.coin !== void 0)
                writer.writeMessage(1, this.coin, () => this.coin.serialize(writer));
              if (typeof this.receiver === "string" && this.receiver.length)
                writer.writeString(2, this.receiver);
              if (typeof this.sender === "string" && this.sender.length)
                writer.writeString(3, this.sender);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgConvertCoin();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.coin, () => message.coin = dependency_3.cosmos.base.v1beta1.Coin.deserialize(reader));
                    break;
                  case 2:
                    message.receiver = reader.readString();
                    break;
                  case 3:
                    message.sender = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgConvertCoin.deserialize(bytes);
            }
          }
          v12.MsgConvertCoin = MsgConvertCoin;
          class MsgConvertCoinResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
              }
            }
            static fromObject(data) {
              const message = new MsgConvertCoinResponse({});
              return message;
            }
            toObject() {
              const data = {};
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgConvertCoinResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgConvertCoinResponse.deserialize(bytes);
            }
          }
          v12.MsgConvertCoinResponse = MsgConvertCoinResponse;
          class MsgConvertERC20 extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("contract_address" in data && data.contract_address != void 0) {
                  this.contract_address = data.contract_address;
                }
                if ("amount" in data && data.amount != void 0) {
                  this.amount = data.amount;
                }
                if ("receiver" in data && data.receiver != void 0) {
                  this.receiver = data.receiver;
                }
                if ("sender" in data && data.sender != void 0) {
                  this.sender = data.sender;
                }
              }
            }
            get contract_address() {
              return pb_1.Message.getField(this, 1);
            }
            set contract_address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get amount() {
              return pb_1.Message.getField(this, 2);
            }
            set amount(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get receiver() {
              return pb_1.Message.getField(this, 3);
            }
            set receiver(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get sender() {
              return pb_1.Message.getField(this, 4);
            }
            set sender(value) {
              pb_1.Message.setField(this, 4, value);
            }
            static fromObject(data) {
              const message = new MsgConvertERC20({});
              if (data.contract_address != null) {
                message.contract_address = data.contract_address;
              }
              if (data.amount != null) {
                message.amount = data.amount;
              }
              if (data.receiver != null) {
                message.receiver = data.receiver;
              }
              if (data.sender != null) {
                message.sender = data.sender;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.contract_address != null) {
                data.contract_address = this.contract_address;
              }
              if (this.amount != null) {
                data.amount = this.amount;
              }
              if (this.receiver != null) {
                data.receiver = this.receiver;
              }
              if (this.sender != null) {
                data.sender = this.sender;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.contract_address === "string" && this.contract_address.length)
                writer.writeString(1, this.contract_address);
              if (typeof this.amount === "string" && this.amount.length)
                writer.writeString(2, this.amount);
              if (typeof this.receiver === "string" && this.receiver.length)
                writer.writeString(3, this.receiver);
              if (typeof this.sender === "string" && this.sender.length)
                writer.writeString(4, this.sender);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgConvertERC20();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.contract_address = reader.readString();
                    break;
                  case 2:
                    message.amount = reader.readString();
                    break;
                  case 3:
                    message.receiver = reader.readString();
                    break;
                  case 4:
                    message.sender = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgConvertERC20.deserialize(bytes);
            }
          }
          v12.MsgConvertERC20 = MsgConvertERC20;
          class MsgConvertERC20Response extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
              }
            }
            static fromObject(data) {
              const message = new MsgConvertERC20Response({});
              return message;
            }
            toObject() {
              const data = {};
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgConvertERC20Response();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgConvertERC20Response.deserialize(bytes);
            }
          }
          v12.MsgConvertERC20Response = MsgConvertERC20Response;
        })(v1 = erc202.v1 || (erc202.v1 = {}));
      })(erc20 = evmos2.erc20 || (evmos2.erc20 = {}));
    })(evmos = exports2.evmos || (exports2.evmos = {}));
  }
});

// node_modules/@tharsis/proto/dist/messages/erc20/msgConvertCoin.js
var require_msgConvertCoin = __commonJS({
  "node_modules/@tharsis/proto/dist/messages/erc20/msgConvertCoin.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createMsgConvertCoin = void 0;
    var erc20 = __importStar(require_tx());
    var coin = __importStar(require_coin());
    function createMsgConvertCoin(denom, amount, receiver, sender) {
      const msg = new erc20.evmos.erc20.v1.MsgConvertCoin({
        coin: new coin.cosmos.base.v1beta1.Coin({
          denom,
          amount
        }),
        receiver,
        sender
      });
      return {
        message: msg,
        path: "evmos.erc20.v1.MsgConvertCoin"
      };
    }
    exports2.createMsgConvertCoin = createMsgConvertCoin;
  }
});

// node_modules/@tharsis/proto/dist/messages/erc20/msgConvertERC20.js
var require_msgConvertERC20 = __commonJS({
  "node_modules/@tharsis/proto/dist/messages/erc20/msgConvertERC20.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createMsgConvertERC20 = void 0;
    var erc20 = __importStar(require_tx());
    function createMsgConvertERC20(contractAddress, amount, receiver, sender) {
      const msg = new erc20.evmos.erc20.v1.MsgConvertERC20({
        contract_address: contractAddress,
        amount,
        receiver,
        sender
      });
      return {
        message: msg,
        path: "evmos.erc20.v1.MsgConvertERC20"
      };
    }
    exports2.createMsgConvertERC20 = createMsgConvertERC20;
  }
});

// node_modules/@tharsis/proto/dist/proto/google/protobuf/any.js
var require_any = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/google/protobuf/any.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.google = void 0;
    var pb_1 = __importStar(require_google_protobuf());
    var google;
    (function(google2) {
      var protobuf;
      (function(protobuf2) {
        class Any extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("type_url" in data && data.type_url != void 0) {
                this.type_url = data.type_url;
              }
              if ("value" in data && data.value != void 0) {
                this.value = data.value;
              }
            }
          }
          get type_url() {
            return pb_1.Message.getField(this, 1);
          }
          set type_url(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get value() {
            return pb_1.Message.getField(this, 2);
          }
          set value(value) {
            pb_1.Message.setField(this, 2, value);
          }
          static fromObject(data) {
            const message = new Any({});
            if (data.type_url != null) {
              message.type_url = data.type_url;
            }
            if (data.value != null) {
              message.value = data.value;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.type_url != null) {
              data.type_url = this.type_url;
            }
            if (this.value != null) {
              data.value = this.value;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.type_url === "string" && this.type_url.length)
              writer.writeString(1, this.type_url);
            if (this.value !== void 0)
              writer.writeBytes(2, this.value);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Any();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.type_url = reader.readString();
                  break;
                case 2:
                  message.value = reader.readBytes();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return Any.deserialize(bytes);
          }
        }
        protobuf2.Any = Any;
      })(protobuf = google2.protobuf || (google2.protobuf = {}));
    })(google = exports2.google || (exports2.google = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/google/protobuf/timestamp.js
var require_timestamp = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/google/protobuf/timestamp.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.google = void 0;
    var pb_1 = __importStar(require_google_protobuf());
    var google;
    (function(google2) {
      var protobuf;
      (function(protobuf2) {
        class Timestamp extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("seconds" in data && data.seconds != void 0) {
                this.seconds = data.seconds;
              }
              if ("nanos" in data && data.nanos != void 0) {
                this.nanos = data.nanos;
              }
            }
          }
          get seconds() {
            return pb_1.Message.getField(this, 1);
          }
          set seconds(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get nanos() {
            return pb_1.Message.getField(this, 2);
          }
          set nanos(value) {
            pb_1.Message.setField(this, 2, value);
          }
          static fromObject(data) {
            const message = new Timestamp({});
            if (data.seconds != null) {
              message.seconds = data.seconds;
            }
            if (data.nanos != null) {
              message.nanos = data.nanos;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.seconds != null) {
              data.seconds = this.seconds;
            }
            if (this.nanos != null) {
              data.nanos = this.nanos;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.seconds !== void 0)
              writer.writeInt64(1, this.seconds);
            if (this.nanos !== void 0)
              writer.writeInt32(2, this.nanos);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Timestamp();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.seconds = reader.readInt64();
                  break;
                case 2:
                  message.nanos = reader.readInt32();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return Timestamp.deserialize(bytes);
          }
        }
        protobuf2.Timestamp = Timestamp;
      })(protobuf = google2.protobuf || (google2.protobuf = {}));
    })(google = exports2.google || (exports2.google = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/cosmos/upgrade/v1beta1/upgrade.js
var require_upgrade = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/cosmos/upgrade/v1beta1/upgrade.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.cosmos = void 0;
    var dependency_1 = __importStar(require_any());
    var dependency_3 = __importStar(require_timestamp());
    var pb_1 = __importStar(require_google_protobuf());
    var cosmos;
    (function(cosmos2) {
      var upgrade;
      (function(upgrade2) {
        var v1beta1;
        (function(v1beta12) {
          class Plan extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != void 0) {
                  this.name = data.name;
                }
                if ("time" in data && data.time != void 0) {
                  this.time = data.time;
                }
                if ("height" in data && data.height != void 0) {
                  this.height = data.height;
                }
                if ("info" in data && data.info != void 0) {
                  this.info = data.info;
                }
                if ("upgraded_client_state" in data && data.upgraded_client_state != void 0) {
                  this.upgraded_client_state = data.upgraded_client_state;
                }
              }
            }
            get name() {
              return pb_1.Message.getField(this, 1);
            }
            set name(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get time() {
              return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Timestamp, 2);
            }
            set time(value) {
              pb_1.Message.setWrapperField(this, 2, value);
            }
            get height() {
              return pb_1.Message.getField(this, 3);
            }
            set height(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get info() {
              return pb_1.Message.getField(this, 4);
            }
            set info(value) {
              pb_1.Message.setField(this, 4, value);
            }
            get upgraded_client_state() {
              return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Any, 5);
            }
            set upgraded_client_state(value) {
              pb_1.Message.setWrapperField(this, 5, value);
            }
            static fromObject(data) {
              const message = new Plan({});
              if (data.name != null) {
                message.name = data.name;
              }
              if (data.time != null) {
                message.time = dependency_3.google.protobuf.Timestamp.fromObject(data.time);
              }
              if (data.height != null) {
                message.height = data.height;
              }
              if (data.info != null) {
                message.info = data.info;
              }
              if (data.upgraded_client_state != null) {
                message.upgraded_client_state = dependency_1.google.protobuf.Any.fromObject(data.upgraded_client_state);
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.name != null) {
                data.name = this.name;
              }
              if (this.time != null) {
                data.time = this.time.toObject();
              }
              if (this.height != null) {
                data.height = this.height;
              }
              if (this.info != null) {
                data.info = this.info;
              }
              if (this.upgraded_client_state != null) {
                data.upgraded_client_state = this.upgraded_client_state.toObject();
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.name === "string" && this.name.length)
                writer.writeString(1, this.name);
              if (this.time !== void 0)
                writer.writeMessage(2, this.time, () => this.time.serialize(writer));
              if (this.height !== void 0)
                writer.writeInt64(3, this.height);
              if (typeof this.info === "string" && this.info.length)
                writer.writeString(4, this.info);
              if (this.upgraded_client_state !== void 0)
                writer.writeMessage(5, this.upgraded_client_state, () => this.upgraded_client_state.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Plan();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.name = reader.readString();
                    break;
                  case 2:
                    reader.readMessage(message.time, () => message.time = dependency_3.google.protobuf.Timestamp.deserialize(reader));
                    break;
                  case 3:
                    message.height = reader.readInt64();
                    break;
                  case 4:
                    message.info = reader.readString();
                    break;
                  case 5:
                    reader.readMessage(message.upgraded_client_state, () => message.upgraded_client_state = dependency_1.google.protobuf.Any.deserialize(reader));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Plan.deserialize(bytes);
            }
          }
          v1beta12.Plan = Plan;
          class SoftwareUpgradeProposal extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("title" in data && data.title != void 0) {
                  this.title = data.title;
                }
                if ("description" in data && data.description != void 0) {
                  this.description = data.description;
                }
                if ("plan" in data && data.plan != void 0) {
                  this.plan = data.plan;
                }
              }
            }
            get title() {
              return pb_1.Message.getField(this, 1);
            }
            set title(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get description() {
              return pb_1.Message.getField(this, 2);
            }
            set description(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get plan() {
              return pb_1.Message.getWrapperField(this, Plan, 3);
            }
            set plan(value) {
              pb_1.Message.setWrapperField(this, 3, value);
            }
            static fromObject(data) {
              const message = new SoftwareUpgradeProposal({});
              if (data.title != null) {
                message.title = data.title;
              }
              if (data.description != null) {
                message.description = data.description;
              }
              if (data.plan != null) {
                message.plan = Plan.fromObject(data.plan);
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.title != null) {
                data.title = this.title;
              }
              if (this.description != null) {
                data.description = this.description;
              }
              if (this.plan != null) {
                data.plan = this.plan.toObject();
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.title === "string" && this.title.length)
                writer.writeString(1, this.title);
              if (typeof this.description === "string" && this.description.length)
                writer.writeString(2, this.description);
              if (this.plan !== void 0)
                writer.writeMessage(3, this.plan, () => this.plan.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SoftwareUpgradeProposal();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.title = reader.readString();
                    break;
                  case 2:
                    message.description = reader.readString();
                    break;
                  case 3:
                    reader.readMessage(message.plan, () => message.plan = Plan.deserialize(reader));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return SoftwareUpgradeProposal.deserialize(bytes);
            }
          }
          v1beta12.SoftwareUpgradeProposal = SoftwareUpgradeProposal;
          class CancelSoftwareUpgradeProposal extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("title" in data && data.title != void 0) {
                  this.title = data.title;
                }
                if ("description" in data && data.description != void 0) {
                  this.description = data.description;
                }
              }
            }
            get title() {
              return pb_1.Message.getField(this, 1);
            }
            set title(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get description() {
              return pb_1.Message.getField(this, 2);
            }
            set description(value) {
              pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
              const message = new CancelSoftwareUpgradeProposal({});
              if (data.title != null) {
                message.title = data.title;
              }
              if (data.description != null) {
                message.description = data.description;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.title != null) {
                data.title = this.title;
              }
              if (this.description != null) {
                data.description = this.description;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.title === "string" && this.title.length)
                writer.writeString(1, this.title);
              if (typeof this.description === "string" && this.description.length)
                writer.writeString(2, this.description);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CancelSoftwareUpgradeProposal();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.title = reader.readString();
                    break;
                  case 2:
                    message.description = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return CancelSoftwareUpgradeProposal.deserialize(bytes);
            }
          }
          v1beta12.CancelSoftwareUpgradeProposal = CancelSoftwareUpgradeProposal;
          class ModuleVersion extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != void 0) {
                  this.name = data.name;
                }
                if ("version" in data && data.version != void 0) {
                  this.version = data.version;
                }
              }
            }
            get name() {
              return pb_1.Message.getField(this, 1);
            }
            set name(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get version() {
              return pb_1.Message.getField(this, 2);
            }
            set version(value) {
              pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
              const message = new ModuleVersion({});
              if (data.name != null) {
                message.name = data.name;
              }
              if (data.version != null) {
                message.version = data.version;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.name != null) {
                data.name = this.name;
              }
              if (this.version != null) {
                data.version = this.version;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.name === "string" && this.name.length)
                writer.writeString(1, this.name);
              if (this.version !== void 0)
                writer.writeUint64(2, this.version);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ModuleVersion();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.name = reader.readString();
                    break;
                  case 2:
                    message.version = reader.readUint64();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return ModuleVersion.deserialize(bytes);
            }
          }
          v1beta12.ModuleVersion = ModuleVersion;
        })(v1beta1 = upgrade2.v1beta1 || (upgrade2.v1beta1 = {}));
      })(upgrade = cosmos2.upgrade || (cosmos2.upgrade = {}));
    })(cosmos = exports2.cosmos || (exports2.cosmos = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/ibc/core/client/v1/client.js
var require_client = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/ibc/core/client/v1/client.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ibc = void 0;
    var dependency_2 = __importStar(require_any());
    var dependency_3 = __importStar(require_upgrade());
    var pb_1 = __importStar(require_google_protobuf());
    var ibc;
    (function(ibc2) {
      var core;
      (function(core2) {
        var client;
        (function(client2) {
          var v1;
          (function(v12) {
            class IdentifiedClientState extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
                if (!Array.isArray(data) && typeof data == "object") {
                  if ("client_id" in data && data.client_id != void 0) {
                    this.client_id = data.client_id;
                  }
                  if ("client_state" in data && data.client_state != void 0) {
                    this.client_state = data.client_state;
                  }
                }
              }
              get client_id() {
                return pb_1.Message.getField(this, 1);
              }
              set client_id(value) {
                pb_1.Message.setField(this, 1, value);
              }
              get client_state() {
                return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Any, 2);
              }
              set client_state(value) {
                pb_1.Message.setWrapperField(this, 2, value);
              }
              static fromObject(data) {
                const message = new IdentifiedClientState({});
                if (data.client_id != null) {
                  message.client_id = data.client_id;
                }
                if (data.client_state != null) {
                  message.client_state = dependency_2.google.protobuf.Any.fromObject(data.client_state);
                }
                return message;
              }
              toObject() {
                const data = {};
                if (this.client_id != null) {
                  data.client_id = this.client_id;
                }
                if (this.client_state != null) {
                  data.client_state = this.client_state.toObject();
                }
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (typeof this.client_id === "string" && this.client_id.length)
                  writer.writeString(1, this.client_id);
                if (this.client_state !== void 0)
                  writer.writeMessage(2, this.client_state, () => this.client_state.serialize(writer));
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new IdentifiedClientState();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    case 1:
                      message.client_id = reader.readString();
                      break;
                    case 2:
                      reader.readMessage(message.client_state, () => message.client_state = dependency_2.google.protobuf.Any.deserialize(reader));
                      break;
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return IdentifiedClientState.deserialize(bytes);
              }
            }
            v12.IdentifiedClientState = IdentifiedClientState;
            class ConsensusStateWithHeight extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
                if (!Array.isArray(data) && typeof data == "object") {
                  if ("height" in data && data.height != void 0) {
                    this.height = data.height;
                  }
                  if ("consensus_state" in data && data.consensus_state != void 0) {
                    this.consensus_state = data.consensus_state;
                  }
                }
              }
              get height() {
                return pb_1.Message.getWrapperField(this, Height, 1);
              }
              set height(value) {
                pb_1.Message.setWrapperField(this, 1, value);
              }
              get consensus_state() {
                return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Any, 2);
              }
              set consensus_state(value) {
                pb_1.Message.setWrapperField(this, 2, value);
              }
              static fromObject(data) {
                const message = new ConsensusStateWithHeight({});
                if (data.height != null) {
                  message.height = Height.fromObject(data.height);
                }
                if (data.consensus_state != null) {
                  message.consensus_state = dependency_2.google.protobuf.Any.fromObject(data.consensus_state);
                }
                return message;
              }
              toObject() {
                const data = {};
                if (this.height != null) {
                  data.height = this.height.toObject();
                }
                if (this.consensus_state != null) {
                  data.consensus_state = this.consensus_state.toObject();
                }
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.height !== void 0)
                  writer.writeMessage(1, this.height, () => this.height.serialize(writer));
                if (this.consensus_state !== void 0)
                  writer.writeMessage(2, this.consensus_state, () => this.consensus_state.serialize(writer));
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ConsensusStateWithHeight();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    case 1:
                      reader.readMessage(message.height, () => message.height = Height.deserialize(reader));
                      break;
                    case 2:
                      reader.readMessage(message.consensus_state, () => message.consensus_state = dependency_2.google.protobuf.Any.deserialize(reader));
                      break;
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return ConsensusStateWithHeight.deserialize(bytes);
              }
            }
            v12.ConsensusStateWithHeight = ConsensusStateWithHeight;
            class ClientConsensusStates extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);
                if (!Array.isArray(data) && typeof data == "object") {
                  if ("client_id" in data && data.client_id != void 0) {
                    this.client_id = data.client_id;
                  }
                  if ("consensus_states" in data && data.consensus_states != void 0) {
                    this.consensus_states = data.consensus_states;
                  }
                }
              }
              get client_id() {
                return pb_1.Message.getField(this, 1);
              }
              set client_id(value) {
                pb_1.Message.setField(this, 1, value);
              }
              get consensus_states() {
                return pb_1.Message.getRepeatedWrapperField(this, ConsensusStateWithHeight, 2);
              }
              set consensus_states(value) {
                pb_1.Message.setRepeatedWrapperField(this, 2, value);
              }
              static fromObject(data) {
                const message = new ClientConsensusStates({});
                if (data.client_id != null) {
                  message.client_id = data.client_id;
                }
                if (data.consensus_states != null) {
                  message.consensus_states = data.consensus_states.map((item) => ConsensusStateWithHeight.fromObject(item));
                }
                return message;
              }
              toObject() {
                const data = {};
                if (this.client_id != null) {
                  data.client_id = this.client_id;
                }
                if (this.consensus_states != null) {
                  data.consensus_states = this.consensus_states.map((item) => item.toObject());
                }
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (typeof this.client_id === "string" && this.client_id.length)
                  writer.writeString(1, this.client_id);
                if (this.consensus_states !== void 0)
                  writer.writeRepeatedMessage(2, this.consensus_states, (item) => item.serialize(writer));
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ClientConsensusStates();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    case 1:
                      message.client_id = reader.readString();
                      break;
                    case 2:
                      reader.readMessage(message.consensus_states, () => pb_1.Message.addToRepeatedWrapperField(message, 2, ConsensusStateWithHeight.deserialize(reader), ConsensusStateWithHeight));
                      break;
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return ClientConsensusStates.deserialize(bytes);
              }
            }
            v12.ClientConsensusStates = ClientConsensusStates;
            class ClientUpdateProposal extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
                if (!Array.isArray(data) && typeof data == "object") {
                  if ("title" in data && data.title != void 0) {
                    this.title = data.title;
                  }
                  if ("description" in data && data.description != void 0) {
                    this.description = data.description;
                  }
                  if ("subject_client_id" in data && data.subject_client_id != void 0) {
                    this.subject_client_id = data.subject_client_id;
                  }
                  if ("substitute_client_id" in data && data.substitute_client_id != void 0) {
                    this.substitute_client_id = data.substitute_client_id;
                  }
                }
              }
              get title() {
                return pb_1.Message.getField(this, 1);
              }
              set title(value) {
                pb_1.Message.setField(this, 1, value);
              }
              get description() {
                return pb_1.Message.getField(this, 2);
              }
              set description(value) {
                pb_1.Message.setField(this, 2, value);
              }
              get subject_client_id() {
                return pb_1.Message.getField(this, 3);
              }
              set subject_client_id(value) {
                pb_1.Message.setField(this, 3, value);
              }
              get substitute_client_id() {
                return pb_1.Message.getField(this, 4);
              }
              set substitute_client_id(value) {
                pb_1.Message.setField(this, 4, value);
              }
              static fromObject(data) {
                const message = new ClientUpdateProposal({});
                if (data.title != null) {
                  message.title = data.title;
                }
                if (data.description != null) {
                  message.description = data.description;
                }
                if (data.subject_client_id != null) {
                  message.subject_client_id = data.subject_client_id;
                }
                if (data.substitute_client_id != null) {
                  message.substitute_client_id = data.substitute_client_id;
                }
                return message;
              }
              toObject() {
                const data = {};
                if (this.title != null) {
                  data.title = this.title;
                }
                if (this.description != null) {
                  data.description = this.description;
                }
                if (this.subject_client_id != null) {
                  data.subject_client_id = this.subject_client_id;
                }
                if (this.substitute_client_id != null) {
                  data.substitute_client_id = this.substitute_client_id;
                }
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (typeof this.title === "string" && this.title.length)
                  writer.writeString(1, this.title);
                if (typeof this.description === "string" && this.description.length)
                  writer.writeString(2, this.description);
                if (typeof this.subject_client_id === "string" && this.subject_client_id.length)
                  writer.writeString(3, this.subject_client_id);
                if (typeof this.substitute_client_id === "string" && this.substitute_client_id.length)
                  writer.writeString(4, this.substitute_client_id);
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ClientUpdateProposal();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    case 1:
                      message.title = reader.readString();
                      break;
                    case 2:
                      message.description = reader.readString();
                      break;
                    case 3:
                      message.subject_client_id = reader.readString();
                      break;
                    case 4:
                      message.substitute_client_id = reader.readString();
                      break;
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return ClientUpdateProposal.deserialize(bytes);
              }
            }
            v12.ClientUpdateProposal = ClientUpdateProposal;
            class UpgradeProposal extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
                if (!Array.isArray(data) && typeof data == "object") {
                  if ("title" in data && data.title != void 0) {
                    this.title = data.title;
                  }
                  if ("description" in data && data.description != void 0) {
                    this.description = data.description;
                  }
                  if ("plan" in data && data.plan != void 0) {
                    this.plan = data.plan;
                  }
                  if ("upgraded_client_state" in data && data.upgraded_client_state != void 0) {
                    this.upgraded_client_state = data.upgraded_client_state;
                  }
                }
              }
              get title() {
                return pb_1.Message.getField(this, 1);
              }
              set title(value) {
                pb_1.Message.setField(this, 1, value);
              }
              get description() {
                return pb_1.Message.getField(this, 2);
              }
              set description(value) {
                pb_1.Message.setField(this, 2, value);
              }
              get plan() {
                return pb_1.Message.getWrapperField(this, dependency_3.cosmos.upgrade.v1beta1.Plan, 3);
              }
              set plan(value) {
                pb_1.Message.setWrapperField(this, 3, value);
              }
              get upgraded_client_state() {
                return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Any, 4);
              }
              set upgraded_client_state(value) {
                pb_1.Message.setWrapperField(this, 4, value);
              }
              static fromObject(data) {
                const message = new UpgradeProposal({});
                if (data.title != null) {
                  message.title = data.title;
                }
                if (data.description != null) {
                  message.description = data.description;
                }
                if (data.plan != null) {
                  message.plan = dependency_3.cosmos.upgrade.v1beta1.Plan.fromObject(data.plan);
                }
                if (data.upgraded_client_state != null) {
                  message.upgraded_client_state = dependency_2.google.protobuf.Any.fromObject(data.upgraded_client_state);
                }
                return message;
              }
              toObject() {
                const data = {};
                if (this.title != null) {
                  data.title = this.title;
                }
                if (this.description != null) {
                  data.description = this.description;
                }
                if (this.plan != null) {
                  data.plan = this.plan.toObject();
                }
                if (this.upgraded_client_state != null) {
                  data.upgraded_client_state = this.upgraded_client_state.toObject();
                }
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (typeof this.title === "string" && this.title.length)
                  writer.writeString(1, this.title);
                if (typeof this.description === "string" && this.description.length)
                  writer.writeString(2, this.description);
                if (this.plan !== void 0)
                  writer.writeMessage(3, this.plan, () => this.plan.serialize(writer));
                if (this.upgraded_client_state !== void 0)
                  writer.writeMessage(4, this.upgraded_client_state, () => this.upgraded_client_state.serialize(writer));
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UpgradeProposal();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    case 1:
                      message.title = reader.readString();
                      break;
                    case 2:
                      message.description = reader.readString();
                      break;
                    case 3:
                      reader.readMessage(message.plan, () => message.plan = dependency_3.cosmos.upgrade.v1beta1.Plan.deserialize(reader));
                      break;
                    case 4:
                      reader.readMessage(message.upgraded_client_state, () => message.upgraded_client_state = dependency_2.google.protobuf.Any.deserialize(reader));
                      break;
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return UpgradeProposal.deserialize(bytes);
              }
            }
            v12.UpgradeProposal = UpgradeProposal;
            class Height extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
                if (!Array.isArray(data) && typeof data == "object") {
                  if ("revision_number" in data && data.revision_number != void 0) {
                    this.revision_number = data.revision_number;
                  }
                  if ("revision_height" in data && data.revision_height != void 0) {
                    this.revision_height = data.revision_height;
                  }
                }
              }
              get revision_number() {
                return pb_1.Message.getField(this, 1);
              }
              set revision_number(value) {
                pb_1.Message.setField(this, 1, value);
              }
              get revision_height() {
                return pb_1.Message.getField(this, 2);
              }
              set revision_height(value) {
                pb_1.Message.setField(this, 2, value);
              }
              static fromObject(data) {
                const message = new Height({});
                if (data.revision_number != null) {
                  message.revision_number = data.revision_number;
                }
                if (data.revision_height != null) {
                  message.revision_height = data.revision_height;
                }
                return message;
              }
              toObject() {
                const data = {};
                if (this.revision_number != null) {
                  data.revision_number = this.revision_number;
                }
                if (this.revision_height != null) {
                  data.revision_height = this.revision_height;
                }
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.revision_number !== void 0)
                  writer.writeUint64(1, this.revision_number);
                if (this.revision_height !== void 0)
                  writer.writeUint64(2, this.revision_height);
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Height();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    case 1:
                      message.revision_number = reader.readUint64();
                      break;
                    case 2:
                      message.revision_height = reader.readUint64();
                      break;
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return Height.deserialize(bytes);
              }
            }
            v12.Height = Height;
            class Params extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
                if (!Array.isArray(data) && typeof data == "object") {
                  if ("allowed_clients" in data && data.allowed_clients != void 0) {
                    this.allowed_clients = data.allowed_clients;
                  }
                }
              }
              get allowed_clients() {
                return pb_1.Message.getField(this, 1);
              }
              set allowed_clients(value) {
                pb_1.Message.setField(this, 1, value);
              }
              static fromObject(data) {
                const message = new Params({});
                if (data.allowed_clients != null) {
                  message.allowed_clients = data.allowed_clients;
                }
                return message;
              }
              toObject() {
                const data = {};
                if (this.allowed_clients != null) {
                  data.allowed_clients = this.allowed_clients;
                }
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.allowed_clients !== void 0)
                  writer.writeRepeatedString(1, this.allowed_clients);
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Params();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    case 1:
                      pb_1.Message.addToRepeatedField(message, 1, reader.readString());
                      break;
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return Params.deserialize(bytes);
              }
            }
            v12.Params = Params;
          })(v1 = client2.v1 || (client2.v1 = {}));
        })(client = core2.client || (core2.client = {}));
      })(core = ibc2.core || (ibc2.core = {}));
    })(ibc = exports2.ibc || (exports2.ibc = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/ibc/applications/transfer/v1/tx.js
var require_tx2 = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/ibc/applications/transfer/v1/tx.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ibc = void 0;
    var dependency_2 = __importStar(require_coin());
    var dependency_3 = __importStar(require_client());
    var pb_1 = __importStar(require_google_protobuf());
    var ibc;
    (function(ibc2) {
      var applications;
      (function(applications2) {
        var transfer;
        (function(transfer2) {
          var v1;
          (function(v12) {
            class MsgTransfer extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
                if (!Array.isArray(data) && typeof data == "object") {
                  if ("source_port" in data && data.source_port != void 0) {
                    this.source_port = data.source_port;
                  }
                  if ("source_channel" in data && data.source_channel != void 0) {
                    this.source_channel = data.source_channel;
                  }
                  if ("token" in data && data.token != void 0) {
                    this.token = data.token;
                  }
                  if ("sender" in data && data.sender != void 0) {
                    this.sender = data.sender;
                  }
                  if ("receiver" in data && data.receiver != void 0) {
                    this.receiver = data.receiver;
                  }
                  if ("timeout_height" in data && data.timeout_height != void 0) {
                    this.timeout_height = data.timeout_height;
                  }
                  if ("timeout_timestamp" in data && data.timeout_timestamp != void 0) {
                    this.timeout_timestamp = data.timeout_timestamp;
                  }
                }
              }
              get source_port() {
                return pb_1.Message.getField(this, 1);
              }
              set source_port(value) {
                pb_1.Message.setField(this, 1, value);
              }
              get source_channel() {
                return pb_1.Message.getField(this, 2);
              }
              set source_channel(value) {
                pb_1.Message.setField(this, 2, value);
              }
              get token() {
                return pb_1.Message.getWrapperField(this, dependency_2.cosmos.base.v1beta1.Coin, 3);
              }
              set token(value) {
                pb_1.Message.setWrapperField(this, 3, value);
              }
              get sender() {
                return pb_1.Message.getField(this, 4);
              }
              set sender(value) {
                pb_1.Message.setField(this, 4, value);
              }
              get receiver() {
                return pb_1.Message.getField(this, 5);
              }
              set receiver(value) {
                pb_1.Message.setField(this, 5, value);
              }
              get timeout_height() {
                return pb_1.Message.getWrapperField(this, dependency_3.ibc.core.client.v1.Height, 6);
              }
              set timeout_height(value) {
                pb_1.Message.setWrapperField(this, 6, value);
              }
              get timeout_timestamp() {
                return pb_1.Message.getField(this, 7);
              }
              set timeout_timestamp(value) {
                pb_1.Message.setField(this, 7, value);
              }
              static fromObject(data) {
                const message = new MsgTransfer({});
                if (data.source_port != null) {
                  message.source_port = data.source_port;
                }
                if (data.source_channel != null) {
                  message.source_channel = data.source_channel;
                }
                if (data.token != null) {
                  message.token = dependency_2.cosmos.base.v1beta1.Coin.fromObject(data.token);
                }
                if (data.sender != null) {
                  message.sender = data.sender;
                }
                if (data.receiver != null) {
                  message.receiver = data.receiver;
                }
                if (data.timeout_height != null) {
                  message.timeout_height = dependency_3.ibc.core.client.v1.Height.fromObject(data.timeout_height);
                }
                if (data.timeout_timestamp != null) {
                  message.timeout_timestamp = data.timeout_timestamp;
                }
                return message;
              }
              toObject() {
                const data = {};
                if (this.source_port != null) {
                  data.source_port = this.source_port;
                }
                if (this.source_channel != null) {
                  data.source_channel = this.source_channel;
                }
                if (this.token != null) {
                  data.token = this.token.toObject();
                }
                if (this.sender != null) {
                  data.sender = this.sender;
                }
                if (this.receiver != null) {
                  data.receiver = this.receiver;
                }
                if (this.timeout_height != null) {
                  data.timeout_height = this.timeout_height.toObject();
                }
                if (this.timeout_timestamp != null) {
                  data.timeout_timestamp = this.timeout_timestamp;
                }
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (typeof this.source_port === "string" && this.source_port.length)
                  writer.writeString(1, this.source_port);
                if (typeof this.source_channel === "string" && this.source_channel.length)
                  writer.writeString(2, this.source_channel);
                if (this.token !== void 0)
                  writer.writeMessage(3, this.token, () => this.token.serialize(writer));
                if (typeof this.sender === "string" && this.sender.length)
                  writer.writeString(4, this.sender);
                if (typeof this.receiver === "string" && this.receiver.length)
                  writer.writeString(5, this.receiver);
                if (this.timeout_height !== void 0)
                  writer.writeMessage(6, this.timeout_height, () => this.timeout_height.serialize(writer));
                if (this.timeout_timestamp !== void 0)
                  writer.writeUint64(7, this.timeout_timestamp);
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgTransfer();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    case 1:
                      message.source_port = reader.readString();
                      break;
                    case 2:
                      message.source_channel = reader.readString();
                      break;
                    case 3:
                      reader.readMessage(message.token, () => message.token = dependency_2.cosmos.base.v1beta1.Coin.deserialize(reader));
                      break;
                    case 4:
                      message.sender = reader.readString();
                      break;
                    case 5:
                      message.receiver = reader.readString();
                      break;
                    case 6:
                      reader.readMessage(message.timeout_height, () => message.timeout_height = dependency_3.ibc.core.client.v1.Height.deserialize(reader));
                      break;
                    case 7:
                      message.timeout_timestamp = reader.readUint64();
                      break;
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return MsgTransfer.deserialize(bytes);
              }
            }
            v12.MsgTransfer = MsgTransfer;
            class MsgTransferResponse extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
                if (!Array.isArray(data) && typeof data == "object") {
                }
              }
              static fromObject(data) {
                const message = new MsgTransferResponse({});
                return message;
              }
              toObject() {
                const data = {};
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgTransferResponse();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return MsgTransferResponse.deserialize(bytes);
              }
            }
            v12.MsgTransferResponse = MsgTransferResponse;
          })(v1 = transfer2.v1 || (transfer2.v1 = {}));
        })(transfer = applications2.transfer || (applications2.transfer = {}));
      })(applications = ibc2.applications || (ibc2.applications = {}));
    })(ibc = exports2.ibc || (exports2.ibc = {}));
  }
});

// node_modules/@tharsis/proto/dist/messages/ibcMsgTransfer.js
var require_ibcMsgTransfer = __commonJS({
  "node_modules/@tharsis/proto/dist/messages/ibcMsgTransfer.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createIBCMsgTransfer = void 0;
    var coin = __importStar(require_coin());
    var ibcMsg = __importStar(require_tx2());
    var ibcCore = __importStar(require_client());
    function createIBCMsgTransfer(sourcePort, sourceChannel, amount, denom, sender, receiver, revisionNumber, revisionHeight, timeoutTimestamp) {
      const token = new coin.cosmos.base.v1beta1.Coin({
        denom,
        amount
      });
      const timeoutHeight = new ibcCore.ibc.core.client.v1.Height({
        revision_number: revisionNumber,
        revision_height: revisionHeight
      });
      const ibcMessage = new ibcMsg.ibc.applications.transfer.v1.MsgTransfer({
        source_port: sourcePort,
        source_channel: sourceChannel,
        token,
        sender,
        receiver,
        timeout_height: timeoutHeight,
        timeout_timestamp: parseInt(timeoutTimestamp, 10)
      });
      return {
        message: ibcMessage,
        path: "ibc.applications.transfer.v1.MsgTransfer"
      };
    }
    exports2.createIBCMsgTransfer = createIBCMsgTransfer;
  }
});

// node_modules/@tharsis/proto/dist/proto/ethermint/evm/v1/evm.js
var require_evm = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/ethermint/evm/v1/evm.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ethermint = void 0;
    var pb_1 = __importStar(require_google_protobuf());
    var ethermint;
    (function(ethermint2) {
      var evm;
      (function(evm2) {
        var v1;
        (function(v12) {
          class Params extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("evm_denom" in data && data.evm_denom != void 0) {
                  this.evm_denom = data.evm_denom;
                }
                if ("enable_create" in data && data.enable_create != void 0) {
                  this.enable_create = data.enable_create;
                }
                if ("enable_call" in data && data.enable_call != void 0) {
                  this.enable_call = data.enable_call;
                }
                if ("extra_eips" in data && data.extra_eips != void 0) {
                  this.extra_eips = data.extra_eips;
                }
                if ("chain_config" in data && data.chain_config != void 0) {
                  this.chain_config = data.chain_config;
                }
              }
            }
            get evm_denom() {
              return pb_1.Message.getField(this, 1);
            }
            set evm_denom(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get enable_create() {
              return pb_1.Message.getField(this, 2);
            }
            set enable_create(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get enable_call() {
              return pb_1.Message.getField(this, 3);
            }
            set enable_call(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get extra_eips() {
              return pb_1.Message.getField(this, 4);
            }
            set extra_eips(value) {
              pb_1.Message.setField(this, 4, value);
            }
            get chain_config() {
              return pb_1.Message.getWrapperField(this, ChainConfig, 5);
            }
            set chain_config(value) {
              pb_1.Message.setWrapperField(this, 5, value);
            }
            static fromObject(data) {
              const message = new Params({});
              if (data.evm_denom != null) {
                message.evm_denom = data.evm_denom;
              }
              if (data.enable_create != null) {
                message.enable_create = data.enable_create;
              }
              if (data.enable_call != null) {
                message.enable_call = data.enable_call;
              }
              if (data.extra_eips != null) {
                message.extra_eips = data.extra_eips;
              }
              if (data.chain_config != null) {
                message.chain_config = ChainConfig.fromObject(data.chain_config);
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.evm_denom != null) {
                data.evm_denom = this.evm_denom;
              }
              if (this.enable_create != null) {
                data.enable_create = this.enable_create;
              }
              if (this.enable_call != null) {
                data.enable_call = this.enable_call;
              }
              if (this.extra_eips != null) {
                data.extra_eips = this.extra_eips;
              }
              if (this.chain_config != null) {
                data.chain_config = this.chain_config.toObject();
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.evm_denom === "string" && this.evm_denom.length)
                writer.writeString(1, this.evm_denom);
              if (this.enable_create !== void 0)
                writer.writeBool(2, this.enable_create);
              if (this.enable_call !== void 0)
                writer.writeBool(3, this.enable_call);
              if (this.extra_eips !== void 0)
                writer.writePackedInt64(4, this.extra_eips);
              if (this.chain_config !== void 0)
                writer.writeMessage(5, this.chain_config, () => this.chain_config.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Params();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.evm_denom = reader.readString();
                    break;
                  case 2:
                    message.enable_create = reader.readBool();
                    break;
                  case 3:
                    message.enable_call = reader.readBool();
                    break;
                  case 4:
                    message.extra_eips = reader.readPackedInt64();
                    break;
                  case 5:
                    reader.readMessage(message.chain_config, () => message.chain_config = ChainConfig.deserialize(reader));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Params.deserialize(bytes);
            }
          }
          v12.Params = Params;
          class ChainConfig extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("homestead_block" in data && data.homestead_block != void 0) {
                  this.homestead_block = data.homestead_block;
                }
                if ("dao_fork_block" in data && data.dao_fork_block != void 0) {
                  this.dao_fork_block = data.dao_fork_block;
                }
                if ("dao_fork_support" in data && data.dao_fork_support != void 0) {
                  this.dao_fork_support = data.dao_fork_support;
                }
                if ("eip150_block" in data && data.eip150_block != void 0) {
                  this.eip150_block = data.eip150_block;
                }
                if ("eip150_hash" in data && data.eip150_hash != void 0) {
                  this.eip150_hash = data.eip150_hash;
                }
                if ("eip155_block" in data && data.eip155_block != void 0) {
                  this.eip155_block = data.eip155_block;
                }
                if ("eip158_block" in data && data.eip158_block != void 0) {
                  this.eip158_block = data.eip158_block;
                }
                if ("byzantium_block" in data && data.byzantium_block != void 0) {
                  this.byzantium_block = data.byzantium_block;
                }
                if ("constantinople_block" in data && data.constantinople_block != void 0) {
                  this.constantinople_block = data.constantinople_block;
                }
                if ("petersburg_block" in data && data.petersburg_block != void 0) {
                  this.petersburg_block = data.petersburg_block;
                }
                if ("istanbul_block" in data && data.istanbul_block != void 0) {
                  this.istanbul_block = data.istanbul_block;
                }
                if ("muir_glacier_block" in data && data.muir_glacier_block != void 0) {
                  this.muir_glacier_block = data.muir_glacier_block;
                }
                if ("berlin_block" in data && data.berlin_block != void 0) {
                  this.berlin_block = data.berlin_block;
                }
                if ("london_block" in data && data.london_block != void 0) {
                  this.london_block = data.london_block;
                }
                if ("arrow_glacier_block" in data && data.arrow_glacier_block != void 0) {
                  this.arrow_glacier_block = data.arrow_glacier_block;
                }
                if ("merge_fork_block" in data && data.merge_fork_block != void 0) {
                  this.merge_fork_block = data.merge_fork_block;
                }
              }
            }
            get homestead_block() {
              return pb_1.Message.getField(this, 1);
            }
            set homestead_block(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get dao_fork_block() {
              return pb_1.Message.getField(this, 2);
            }
            set dao_fork_block(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get dao_fork_support() {
              return pb_1.Message.getField(this, 3);
            }
            set dao_fork_support(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get eip150_block() {
              return pb_1.Message.getField(this, 4);
            }
            set eip150_block(value) {
              pb_1.Message.setField(this, 4, value);
            }
            get eip150_hash() {
              return pb_1.Message.getField(this, 5);
            }
            set eip150_hash(value) {
              pb_1.Message.setField(this, 5, value);
            }
            get eip155_block() {
              return pb_1.Message.getField(this, 6);
            }
            set eip155_block(value) {
              pb_1.Message.setField(this, 6, value);
            }
            get eip158_block() {
              return pb_1.Message.getField(this, 7);
            }
            set eip158_block(value) {
              pb_1.Message.setField(this, 7, value);
            }
            get byzantium_block() {
              return pb_1.Message.getField(this, 8);
            }
            set byzantium_block(value) {
              pb_1.Message.setField(this, 8, value);
            }
            get constantinople_block() {
              return pb_1.Message.getField(this, 9);
            }
            set constantinople_block(value) {
              pb_1.Message.setField(this, 9, value);
            }
            get petersburg_block() {
              return pb_1.Message.getField(this, 10);
            }
            set petersburg_block(value) {
              pb_1.Message.setField(this, 10, value);
            }
            get istanbul_block() {
              return pb_1.Message.getField(this, 11);
            }
            set istanbul_block(value) {
              pb_1.Message.setField(this, 11, value);
            }
            get muir_glacier_block() {
              return pb_1.Message.getField(this, 12);
            }
            set muir_glacier_block(value) {
              pb_1.Message.setField(this, 12, value);
            }
            get berlin_block() {
              return pb_1.Message.getField(this, 13);
            }
            set berlin_block(value) {
              pb_1.Message.setField(this, 13, value);
            }
            get london_block() {
              return pb_1.Message.getField(this, 17);
            }
            set london_block(value) {
              pb_1.Message.setField(this, 17, value);
            }
            get arrow_glacier_block() {
              return pb_1.Message.getField(this, 18);
            }
            set arrow_glacier_block(value) {
              pb_1.Message.setField(this, 18, value);
            }
            get merge_fork_block() {
              return pb_1.Message.getField(this, 19);
            }
            set merge_fork_block(value) {
              pb_1.Message.setField(this, 19, value);
            }
            static fromObject(data) {
              const message = new ChainConfig({});
              if (data.homestead_block != null) {
                message.homestead_block = data.homestead_block;
              }
              if (data.dao_fork_block != null) {
                message.dao_fork_block = data.dao_fork_block;
              }
              if (data.dao_fork_support != null) {
                message.dao_fork_support = data.dao_fork_support;
              }
              if (data.eip150_block != null) {
                message.eip150_block = data.eip150_block;
              }
              if (data.eip150_hash != null) {
                message.eip150_hash = data.eip150_hash;
              }
              if (data.eip155_block != null) {
                message.eip155_block = data.eip155_block;
              }
              if (data.eip158_block != null) {
                message.eip158_block = data.eip158_block;
              }
              if (data.byzantium_block != null) {
                message.byzantium_block = data.byzantium_block;
              }
              if (data.constantinople_block != null) {
                message.constantinople_block = data.constantinople_block;
              }
              if (data.petersburg_block != null) {
                message.petersburg_block = data.petersburg_block;
              }
              if (data.istanbul_block != null) {
                message.istanbul_block = data.istanbul_block;
              }
              if (data.muir_glacier_block != null) {
                message.muir_glacier_block = data.muir_glacier_block;
              }
              if (data.berlin_block != null) {
                message.berlin_block = data.berlin_block;
              }
              if (data.london_block != null) {
                message.london_block = data.london_block;
              }
              if (data.arrow_glacier_block != null) {
                message.arrow_glacier_block = data.arrow_glacier_block;
              }
              if (data.merge_fork_block != null) {
                message.merge_fork_block = data.merge_fork_block;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.homestead_block != null) {
                data.homestead_block = this.homestead_block;
              }
              if (this.dao_fork_block != null) {
                data.dao_fork_block = this.dao_fork_block;
              }
              if (this.dao_fork_support != null) {
                data.dao_fork_support = this.dao_fork_support;
              }
              if (this.eip150_block != null) {
                data.eip150_block = this.eip150_block;
              }
              if (this.eip150_hash != null) {
                data.eip150_hash = this.eip150_hash;
              }
              if (this.eip155_block != null) {
                data.eip155_block = this.eip155_block;
              }
              if (this.eip158_block != null) {
                data.eip158_block = this.eip158_block;
              }
              if (this.byzantium_block != null) {
                data.byzantium_block = this.byzantium_block;
              }
              if (this.constantinople_block != null) {
                data.constantinople_block = this.constantinople_block;
              }
              if (this.petersburg_block != null) {
                data.petersburg_block = this.petersburg_block;
              }
              if (this.istanbul_block != null) {
                data.istanbul_block = this.istanbul_block;
              }
              if (this.muir_glacier_block != null) {
                data.muir_glacier_block = this.muir_glacier_block;
              }
              if (this.berlin_block != null) {
                data.berlin_block = this.berlin_block;
              }
              if (this.london_block != null) {
                data.london_block = this.london_block;
              }
              if (this.arrow_glacier_block != null) {
                data.arrow_glacier_block = this.arrow_glacier_block;
              }
              if (this.merge_fork_block != null) {
                data.merge_fork_block = this.merge_fork_block;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.homestead_block === "string" && this.homestead_block.length)
                writer.writeString(1, this.homestead_block);
              if (typeof this.dao_fork_block === "string" && this.dao_fork_block.length)
                writer.writeString(2, this.dao_fork_block);
              if (this.dao_fork_support !== void 0)
                writer.writeBool(3, this.dao_fork_support);
              if (typeof this.eip150_block === "string" && this.eip150_block.length)
                writer.writeString(4, this.eip150_block);
              if (typeof this.eip150_hash === "string" && this.eip150_hash.length)
                writer.writeString(5, this.eip150_hash);
              if (typeof this.eip155_block === "string" && this.eip155_block.length)
                writer.writeString(6, this.eip155_block);
              if (typeof this.eip158_block === "string" && this.eip158_block.length)
                writer.writeString(7, this.eip158_block);
              if (typeof this.byzantium_block === "string" && this.byzantium_block.length)
                writer.writeString(8, this.byzantium_block);
              if (typeof this.constantinople_block === "string" && this.constantinople_block.length)
                writer.writeString(9, this.constantinople_block);
              if (typeof this.petersburg_block === "string" && this.petersburg_block.length)
                writer.writeString(10, this.petersburg_block);
              if (typeof this.istanbul_block === "string" && this.istanbul_block.length)
                writer.writeString(11, this.istanbul_block);
              if (typeof this.muir_glacier_block === "string" && this.muir_glacier_block.length)
                writer.writeString(12, this.muir_glacier_block);
              if (typeof this.berlin_block === "string" && this.berlin_block.length)
                writer.writeString(13, this.berlin_block);
              if (typeof this.london_block === "string" && this.london_block.length)
                writer.writeString(17, this.london_block);
              if (typeof this.arrow_glacier_block === "string" && this.arrow_glacier_block.length)
                writer.writeString(18, this.arrow_glacier_block);
              if (typeof this.merge_fork_block === "string" && this.merge_fork_block.length)
                writer.writeString(19, this.merge_fork_block);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ChainConfig();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.homestead_block = reader.readString();
                    break;
                  case 2:
                    message.dao_fork_block = reader.readString();
                    break;
                  case 3:
                    message.dao_fork_support = reader.readBool();
                    break;
                  case 4:
                    message.eip150_block = reader.readString();
                    break;
                  case 5:
                    message.eip150_hash = reader.readString();
                    break;
                  case 6:
                    message.eip155_block = reader.readString();
                    break;
                  case 7:
                    message.eip158_block = reader.readString();
                    break;
                  case 8:
                    message.byzantium_block = reader.readString();
                    break;
                  case 9:
                    message.constantinople_block = reader.readString();
                    break;
                  case 10:
                    message.petersburg_block = reader.readString();
                    break;
                  case 11:
                    message.istanbul_block = reader.readString();
                    break;
                  case 12:
                    message.muir_glacier_block = reader.readString();
                    break;
                  case 13:
                    message.berlin_block = reader.readString();
                    break;
                  case 17:
                    message.london_block = reader.readString();
                    break;
                  case 18:
                    message.arrow_glacier_block = reader.readString();
                    break;
                  case 19:
                    message.merge_fork_block = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return ChainConfig.deserialize(bytes);
            }
          }
          v12.ChainConfig = ChainConfig;
          class State extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("key" in data && data.key != void 0) {
                  this.key = data.key;
                }
                if ("value" in data && data.value != void 0) {
                  this.value = data.value;
                }
              }
            }
            get key() {
              return pb_1.Message.getField(this, 1);
            }
            set key(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get value() {
              return pb_1.Message.getField(this, 2);
            }
            set value(value) {
              pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
              const message = new State({});
              if (data.key != null) {
                message.key = data.key;
              }
              if (data.value != null) {
                message.value = data.value;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.key != null) {
                data.key = this.key;
              }
              if (this.value != null) {
                data.value = this.value;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.key === "string" && this.key.length)
                writer.writeString(1, this.key);
              if (typeof this.value === "string" && this.value.length)
                writer.writeString(2, this.value);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new State();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.key = reader.readString();
                    break;
                  case 2:
                    message.value = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return State.deserialize(bytes);
            }
          }
          v12.State = State;
          class TransactionLogs extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("hash" in data && data.hash != void 0) {
                  this.hash = data.hash;
                }
                if ("logs" in data && data.logs != void 0) {
                  this.logs = data.logs;
                }
              }
            }
            get hash() {
              return pb_1.Message.getField(this, 1);
            }
            set hash(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get logs() {
              return pb_1.Message.getRepeatedWrapperField(this, Log, 2);
            }
            set logs(value) {
              pb_1.Message.setRepeatedWrapperField(this, 2, value);
            }
            static fromObject(data) {
              const message = new TransactionLogs({});
              if (data.hash != null) {
                message.hash = data.hash;
              }
              if (data.logs != null) {
                message.logs = data.logs.map((item) => Log.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.hash != null) {
                data.hash = this.hash;
              }
              if (this.logs != null) {
                data.logs = this.logs.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.hash === "string" && this.hash.length)
                writer.writeString(1, this.hash);
              if (this.logs !== void 0)
                writer.writeRepeatedMessage(2, this.logs, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TransactionLogs();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.hash = reader.readString();
                    break;
                  case 2:
                    reader.readMessage(message.logs, () => pb_1.Message.addToRepeatedWrapperField(message, 2, Log.deserialize(reader), Log));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return TransactionLogs.deserialize(bytes);
            }
          }
          v12.TransactionLogs = TransactionLogs;
          class Log extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("address" in data && data.address != void 0) {
                  this.address = data.address;
                }
                if ("topics" in data && data.topics != void 0) {
                  this.topics = data.topics;
                }
                if ("data" in data && data.data != void 0) {
                  this.data = data.data;
                }
                if ("block_number" in data && data.block_number != void 0) {
                  this.block_number = data.block_number;
                }
                if ("tx_hash" in data && data.tx_hash != void 0) {
                  this.tx_hash = data.tx_hash;
                }
                if ("tx_index" in data && data.tx_index != void 0) {
                  this.tx_index = data.tx_index;
                }
                if ("block_hash" in data && data.block_hash != void 0) {
                  this.block_hash = data.block_hash;
                }
                if ("index" in data && data.index != void 0) {
                  this.index = data.index;
                }
                if ("removed" in data && data.removed != void 0) {
                  this.removed = data.removed;
                }
              }
            }
            get address() {
              return pb_1.Message.getField(this, 1);
            }
            set address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get topics() {
              return pb_1.Message.getField(this, 2);
            }
            set topics(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get data() {
              return pb_1.Message.getField(this, 3);
            }
            set data(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get block_number() {
              return pb_1.Message.getField(this, 4);
            }
            set block_number(value) {
              pb_1.Message.setField(this, 4, value);
            }
            get tx_hash() {
              return pb_1.Message.getField(this, 5);
            }
            set tx_hash(value) {
              pb_1.Message.setField(this, 5, value);
            }
            get tx_index() {
              return pb_1.Message.getField(this, 6);
            }
            set tx_index(value) {
              pb_1.Message.setField(this, 6, value);
            }
            get block_hash() {
              return pb_1.Message.getField(this, 7);
            }
            set block_hash(value) {
              pb_1.Message.setField(this, 7, value);
            }
            get index() {
              return pb_1.Message.getField(this, 8);
            }
            set index(value) {
              pb_1.Message.setField(this, 8, value);
            }
            get removed() {
              return pb_1.Message.getField(this, 9);
            }
            set removed(value) {
              pb_1.Message.setField(this, 9, value);
            }
            static fromObject(data) {
              const message = new Log({});
              if (data.address != null) {
                message.address = data.address;
              }
              if (data.topics != null) {
                message.topics = data.topics;
              }
              if (data.data != null) {
                message.data = data.data;
              }
              if (data.block_number != null) {
                message.block_number = data.block_number;
              }
              if (data.tx_hash != null) {
                message.tx_hash = data.tx_hash;
              }
              if (data.tx_index != null) {
                message.tx_index = data.tx_index;
              }
              if (data.block_hash != null) {
                message.block_hash = data.block_hash;
              }
              if (data.index != null) {
                message.index = data.index;
              }
              if (data.removed != null) {
                message.removed = data.removed;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.address != null) {
                data.address = this.address;
              }
              if (this.topics != null) {
                data.topics = this.topics;
              }
              if (this.data != null) {
                data.data = this.data;
              }
              if (this.block_number != null) {
                data.block_number = this.block_number;
              }
              if (this.tx_hash != null) {
                data.tx_hash = this.tx_hash;
              }
              if (this.tx_index != null) {
                data.tx_index = this.tx_index;
              }
              if (this.block_hash != null) {
                data.block_hash = this.block_hash;
              }
              if (this.index != null) {
                data.index = this.index;
              }
              if (this.removed != null) {
                data.removed = this.removed;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.address === "string" && this.address.length)
                writer.writeString(1, this.address);
              if (this.topics !== void 0)
                writer.writeRepeatedString(2, this.topics);
              if (this.data !== void 0)
                writer.writeBytes(3, this.data);
              if (this.block_number !== void 0)
                writer.writeUint64(4, this.block_number);
              if (typeof this.tx_hash === "string" && this.tx_hash.length)
                writer.writeString(5, this.tx_hash);
              if (this.tx_index !== void 0)
                writer.writeUint64(6, this.tx_index);
              if (typeof this.block_hash === "string" && this.block_hash.length)
                writer.writeString(7, this.block_hash);
              if (this.index !== void 0)
                writer.writeUint64(8, this.index);
              if (this.removed !== void 0)
                writer.writeBool(9, this.removed);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Log();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.address = reader.readString();
                    break;
                  case 2:
                    pb_1.Message.addToRepeatedField(message, 2, reader.readString());
                    break;
                  case 3:
                    message.data = reader.readBytes();
                    break;
                  case 4:
                    message.block_number = reader.readUint64();
                    break;
                  case 5:
                    message.tx_hash = reader.readString();
                    break;
                  case 6:
                    message.tx_index = reader.readUint64();
                    break;
                  case 7:
                    message.block_hash = reader.readString();
                    break;
                  case 8:
                    message.index = reader.readUint64();
                    break;
                  case 9:
                    message.removed = reader.readBool();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Log.deserialize(bytes);
            }
          }
          v12.Log = Log;
          class TxResult extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("contract_address" in data && data.contract_address != void 0) {
                  this.contract_address = data.contract_address;
                }
                if ("bloom" in data && data.bloom != void 0) {
                  this.bloom = data.bloom;
                }
                if ("tx_logs" in data && data.tx_logs != void 0) {
                  this.tx_logs = data.tx_logs;
                }
                if ("ret" in data && data.ret != void 0) {
                  this.ret = data.ret;
                }
                if ("reverted" in data && data.reverted != void 0) {
                  this.reverted = data.reverted;
                }
                if ("gas_used" in data && data.gas_used != void 0) {
                  this.gas_used = data.gas_used;
                }
              }
            }
            get contract_address() {
              return pb_1.Message.getField(this, 1);
            }
            set contract_address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get bloom() {
              return pb_1.Message.getField(this, 2);
            }
            set bloom(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get tx_logs() {
              return pb_1.Message.getWrapperField(this, TransactionLogs, 3);
            }
            set tx_logs(value) {
              pb_1.Message.setWrapperField(this, 3, value);
            }
            get ret() {
              return pb_1.Message.getField(this, 4);
            }
            set ret(value) {
              pb_1.Message.setField(this, 4, value);
            }
            get reverted() {
              return pb_1.Message.getField(this, 5);
            }
            set reverted(value) {
              pb_1.Message.setField(this, 5, value);
            }
            get gas_used() {
              return pb_1.Message.getField(this, 6);
            }
            set gas_used(value) {
              pb_1.Message.setField(this, 6, value);
            }
            static fromObject(data) {
              const message = new TxResult({});
              if (data.contract_address != null) {
                message.contract_address = data.contract_address;
              }
              if (data.bloom != null) {
                message.bloom = data.bloom;
              }
              if (data.tx_logs != null) {
                message.tx_logs = TransactionLogs.fromObject(data.tx_logs);
              }
              if (data.ret != null) {
                message.ret = data.ret;
              }
              if (data.reverted != null) {
                message.reverted = data.reverted;
              }
              if (data.gas_used != null) {
                message.gas_used = data.gas_used;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.contract_address != null) {
                data.contract_address = this.contract_address;
              }
              if (this.bloom != null) {
                data.bloom = this.bloom;
              }
              if (this.tx_logs != null) {
                data.tx_logs = this.tx_logs.toObject();
              }
              if (this.ret != null) {
                data.ret = this.ret;
              }
              if (this.reverted != null) {
                data.reverted = this.reverted;
              }
              if (this.gas_used != null) {
                data.gas_used = this.gas_used;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.contract_address === "string" && this.contract_address.length)
                writer.writeString(1, this.contract_address);
              if (this.bloom !== void 0)
                writer.writeBytes(2, this.bloom);
              if (this.tx_logs !== void 0)
                writer.writeMessage(3, this.tx_logs, () => this.tx_logs.serialize(writer));
              if (this.ret !== void 0)
                writer.writeBytes(4, this.ret);
              if (this.reverted !== void 0)
                writer.writeBool(5, this.reverted);
              if (this.gas_used !== void 0)
                writer.writeUint64(6, this.gas_used);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TxResult();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.contract_address = reader.readString();
                    break;
                  case 2:
                    message.bloom = reader.readBytes();
                    break;
                  case 3:
                    reader.readMessage(message.tx_logs, () => message.tx_logs = TransactionLogs.deserialize(reader));
                    break;
                  case 4:
                    message.ret = reader.readBytes();
                    break;
                  case 5:
                    message.reverted = reader.readBool();
                    break;
                  case 6:
                    message.gas_used = reader.readUint64();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return TxResult.deserialize(bytes);
            }
          }
          v12.TxResult = TxResult;
          class AccessTuple extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("address" in data && data.address != void 0) {
                  this.address = data.address;
                }
                if ("storage_keys" in data && data.storage_keys != void 0) {
                  this.storage_keys = data.storage_keys;
                }
              }
            }
            get address() {
              return pb_1.Message.getField(this, 1);
            }
            set address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get storage_keys() {
              return pb_1.Message.getField(this, 2);
            }
            set storage_keys(value) {
              pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
              const message = new AccessTuple({});
              if (data.address != null) {
                message.address = data.address;
              }
              if (data.storage_keys != null) {
                message.storage_keys = data.storage_keys;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.address != null) {
                data.address = this.address;
              }
              if (this.storage_keys != null) {
                data.storage_keys = this.storage_keys;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.address === "string" && this.address.length)
                writer.writeString(1, this.address);
              if (this.storage_keys !== void 0)
                writer.writeRepeatedString(2, this.storage_keys);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AccessTuple();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.address = reader.readString();
                    break;
                  case 2:
                    pb_1.Message.addToRepeatedField(message, 2, reader.readString());
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return AccessTuple.deserialize(bytes);
            }
          }
          v12.AccessTuple = AccessTuple;
          class TraceConfig extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("tracer" in data && data.tracer != void 0) {
                  this.tracer = data.tracer;
                }
                if ("timeout" in data && data.timeout != void 0) {
                  this.timeout = data.timeout;
                }
                if ("reexec" in data && data.reexec != void 0) {
                  this.reexec = data.reexec;
                }
                if ("disable_stack" in data && data.disable_stack != void 0) {
                  this.disable_stack = data.disable_stack;
                }
                if ("disable_storage" in data && data.disable_storage != void 0) {
                  this.disable_storage = data.disable_storage;
                }
                if ("debug" in data && data.debug != void 0) {
                  this.debug = data.debug;
                }
                if ("limit" in data && data.limit != void 0) {
                  this.limit = data.limit;
                }
                if ("overrides" in data && data.overrides != void 0) {
                  this.overrides = data.overrides;
                }
                if ("enable_memory" in data && data.enable_memory != void 0) {
                  this.enable_memory = data.enable_memory;
                }
                if ("enable_return_data" in data && data.enable_return_data != void 0) {
                  this.enable_return_data = data.enable_return_data;
                }
              }
            }
            get tracer() {
              return pb_1.Message.getField(this, 1);
            }
            set tracer(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get timeout() {
              return pb_1.Message.getField(this, 2);
            }
            set timeout(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get reexec() {
              return pb_1.Message.getField(this, 3);
            }
            set reexec(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get disable_stack() {
              return pb_1.Message.getField(this, 5);
            }
            set disable_stack(value) {
              pb_1.Message.setField(this, 5, value);
            }
            get disable_storage() {
              return pb_1.Message.getField(this, 6);
            }
            set disable_storage(value) {
              pb_1.Message.setField(this, 6, value);
            }
            get debug() {
              return pb_1.Message.getField(this, 8);
            }
            set debug(value) {
              pb_1.Message.setField(this, 8, value);
            }
            get limit() {
              return pb_1.Message.getField(this, 9);
            }
            set limit(value) {
              pb_1.Message.setField(this, 9, value);
            }
            get overrides() {
              return pb_1.Message.getWrapperField(this, ChainConfig, 10);
            }
            set overrides(value) {
              pb_1.Message.setWrapperField(this, 10, value);
            }
            get enable_memory() {
              return pb_1.Message.getField(this, 11);
            }
            set enable_memory(value) {
              pb_1.Message.setField(this, 11, value);
            }
            get enable_return_data() {
              return pb_1.Message.getField(this, 12);
            }
            set enable_return_data(value) {
              pb_1.Message.setField(this, 12, value);
            }
            static fromObject(data) {
              const message = new TraceConfig({});
              if (data.tracer != null) {
                message.tracer = data.tracer;
              }
              if (data.timeout != null) {
                message.timeout = data.timeout;
              }
              if (data.reexec != null) {
                message.reexec = data.reexec;
              }
              if (data.disable_stack != null) {
                message.disable_stack = data.disable_stack;
              }
              if (data.disable_storage != null) {
                message.disable_storage = data.disable_storage;
              }
              if (data.debug != null) {
                message.debug = data.debug;
              }
              if (data.limit != null) {
                message.limit = data.limit;
              }
              if (data.overrides != null) {
                message.overrides = ChainConfig.fromObject(data.overrides);
              }
              if (data.enable_memory != null) {
                message.enable_memory = data.enable_memory;
              }
              if (data.enable_return_data != null) {
                message.enable_return_data = data.enable_return_data;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.tracer != null) {
                data.tracer = this.tracer;
              }
              if (this.timeout != null) {
                data.timeout = this.timeout;
              }
              if (this.reexec != null) {
                data.reexec = this.reexec;
              }
              if (this.disable_stack != null) {
                data.disable_stack = this.disable_stack;
              }
              if (this.disable_storage != null) {
                data.disable_storage = this.disable_storage;
              }
              if (this.debug != null) {
                data.debug = this.debug;
              }
              if (this.limit != null) {
                data.limit = this.limit;
              }
              if (this.overrides != null) {
                data.overrides = this.overrides.toObject();
              }
              if (this.enable_memory != null) {
                data.enable_memory = this.enable_memory;
              }
              if (this.enable_return_data != null) {
                data.enable_return_data = this.enable_return_data;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.tracer === "string" && this.tracer.length)
                writer.writeString(1, this.tracer);
              if (typeof this.timeout === "string" && this.timeout.length)
                writer.writeString(2, this.timeout);
              if (this.reexec !== void 0)
                writer.writeUint64(3, this.reexec);
              if (this.disable_stack !== void 0)
                writer.writeBool(5, this.disable_stack);
              if (this.disable_storage !== void 0)
                writer.writeBool(6, this.disable_storage);
              if (this.debug !== void 0)
                writer.writeBool(8, this.debug);
              if (this.limit !== void 0)
                writer.writeInt32(9, this.limit);
              if (this.overrides !== void 0)
                writer.writeMessage(10, this.overrides, () => this.overrides.serialize(writer));
              if (this.enable_memory !== void 0)
                writer.writeBool(11, this.enable_memory);
              if (this.enable_return_data !== void 0)
                writer.writeBool(12, this.enable_return_data);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TraceConfig();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.tracer = reader.readString();
                    break;
                  case 2:
                    message.timeout = reader.readString();
                    break;
                  case 3:
                    message.reexec = reader.readUint64();
                    break;
                  case 5:
                    message.disable_stack = reader.readBool();
                    break;
                  case 6:
                    message.disable_storage = reader.readBool();
                    break;
                  case 8:
                    message.debug = reader.readBool();
                    break;
                  case 9:
                    message.limit = reader.readInt32();
                    break;
                  case 10:
                    reader.readMessage(message.overrides, () => message.overrides = ChainConfig.deserialize(reader));
                    break;
                  case 11:
                    message.enable_memory = reader.readBool();
                    break;
                  case 12:
                    message.enable_return_data = reader.readBool();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return TraceConfig.deserialize(bytes);
            }
          }
          v12.TraceConfig = TraceConfig;
        })(v1 = evm2.v1 || (evm2.v1 = {}));
      })(evm = ethermint2.evm || (ethermint2.evm = {}));
    })(ethermint = exports2.ethermint || (exports2.ethermint = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/ethermint/evm/v1/tx.js
var require_tx3 = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/ethermint/evm/v1/tx.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ethermint = void 0;
    var dependency_3 = __importStar(require_any());
    var dependency_5 = __importStar(require_evm());
    var pb_1 = __importStar(require_google_protobuf());
    var ethermint;
    (function(ethermint2) {
      var evm;
      (function(evm2) {
        var v1;
        (function(v12) {
          class MsgEthereumTx extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("data" in data && data.data != void 0) {
                  this.data = data.data;
                }
                if ("size" in data && data.size != void 0) {
                  this.size = data.size;
                }
                if ("hash" in data && data.hash != void 0) {
                  this.hash = data.hash;
                }
                if ("from" in data && data.from != void 0) {
                  this.from = data.from;
                }
              }
            }
            get data() {
              return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Any, 1);
            }
            set data(value) {
              pb_1.Message.setWrapperField(this, 1, value);
            }
            get size() {
              return pb_1.Message.getField(this, 2);
            }
            set size(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get hash() {
              return pb_1.Message.getField(this, 3);
            }
            set hash(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get from() {
              return pb_1.Message.getField(this, 4);
            }
            set from(value) {
              pb_1.Message.setField(this, 4, value);
            }
            static fromObject(data) {
              const message = new MsgEthereumTx({});
              if (data.data != null) {
                message.data = dependency_3.google.protobuf.Any.fromObject(data.data);
              }
              if (data.size != null) {
                message.size = data.size;
              }
              if (data.hash != null) {
                message.hash = data.hash;
              }
              if (data.from != null) {
                message.from = data.from;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.data != null) {
                data.data = this.data.toObject();
              }
              if (this.size != null) {
                data.size = this.size;
              }
              if (this.hash != null) {
                data.hash = this.hash;
              }
              if (this.from != null) {
                data.from = this.from;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.data !== void 0)
                writer.writeMessage(1, this.data, () => this.data.serialize(writer));
              if (this.size !== void 0)
                writer.writeDouble(2, this.size);
              if (typeof this.hash === "string" && this.hash.length)
                writer.writeString(3, this.hash);
              if (typeof this.from === "string" && this.from.length)
                writer.writeString(4, this.from);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgEthereumTx();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.data, () => message.data = dependency_3.google.protobuf.Any.deserialize(reader));
                    break;
                  case 2:
                    message.size = reader.readDouble();
                    break;
                  case 3:
                    message.hash = reader.readString();
                    break;
                  case 4:
                    message.from = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgEthereumTx.deserialize(bytes);
            }
          }
          v12.MsgEthereumTx = MsgEthereumTx;
          class LegacyTx extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("nonce" in data && data.nonce != void 0) {
                  this.nonce = data.nonce;
                }
                if ("gas_price" in data && data.gas_price != void 0) {
                  this.gas_price = data.gas_price;
                }
                if ("gas" in data && data.gas != void 0) {
                  this.gas = data.gas;
                }
                if ("to" in data && data.to != void 0) {
                  this.to = data.to;
                }
                if ("value" in data && data.value != void 0) {
                  this.value = data.value;
                }
                if ("data" in data && data.data != void 0) {
                  this.data = data.data;
                }
                if ("v" in data && data.v != void 0) {
                  this.v = data.v;
                }
                if ("r" in data && data.r != void 0) {
                  this.r = data.r;
                }
                if ("s" in data && data.s != void 0) {
                  this.s = data.s;
                }
              }
            }
            get nonce() {
              return pb_1.Message.getField(this, 1);
            }
            set nonce(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get gas_price() {
              return pb_1.Message.getField(this, 2);
            }
            set gas_price(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get gas() {
              return pb_1.Message.getField(this, 3);
            }
            set gas(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get to() {
              return pb_1.Message.getField(this, 4);
            }
            set to(value) {
              pb_1.Message.setField(this, 4, value);
            }
            get value() {
              return pb_1.Message.getField(this, 5);
            }
            set value(value) {
              pb_1.Message.setField(this, 5, value);
            }
            get data() {
              return pb_1.Message.getField(this, 6);
            }
            set data(value) {
              pb_1.Message.setField(this, 6, value);
            }
            get v() {
              return pb_1.Message.getField(this, 7);
            }
            set v(value) {
              pb_1.Message.setField(this, 7, value);
            }
            get r() {
              return pb_1.Message.getField(this, 8);
            }
            set r(value) {
              pb_1.Message.setField(this, 8, value);
            }
            get s() {
              return pb_1.Message.getField(this, 9);
            }
            set s(value) {
              pb_1.Message.setField(this, 9, value);
            }
            static fromObject(data) {
              const message = new LegacyTx({});
              if (data.nonce != null) {
                message.nonce = data.nonce;
              }
              if (data.gas_price != null) {
                message.gas_price = data.gas_price;
              }
              if (data.gas != null) {
                message.gas = data.gas;
              }
              if (data.to != null) {
                message.to = data.to;
              }
              if (data.value != null) {
                message.value = data.value;
              }
              if (data.data != null) {
                message.data = data.data;
              }
              if (data.v != null) {
                message.v = data.v;
              }
              if (data.r != null) {
                message.r = data.r;
              }
              if (data.s != null) {
                message.s = data.s;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.nonce != null) {
                data.nonce = this.nonce;
              }
              if (this.gas_price != null) {
                data.gas_price = this.gas_price;
              }
              if (this.gas != null) {
                data.gas = this.gas;
              }
              if (this.to != null) {
                data.to = this.to;
              }
              if (this.value != null) {
                data.value = this.value;
              }
              if (this.data != null) {
                data.data = this.data;
              }
              if (this.v != null) {
                data.v = this.v;
              }
              if (this.r != null) {
                data.r = this.r;
              }
              if (this.s != null) {
                data.s = this.s;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.nonce !== void 0)
                writer.writeUint64(1, this.nonce);
              if (typeof this.gas_price === "string" && this.gas_price.length)
                writer.writeString(2, this.gas_price);
              if (this.gas !== void 0)
                writer.writeUint64(3, this.gas);
              if (typeof this.to === "string" && this.to.length)
                writer.writeString(4, this.to);
              if (typeof this.value === "string" && this.value.length)
                writer.writeString(5, this.value);
              if (this.data !== void 0)
                writer.writeBytes(6, this.data);
              if (this.v !== void 0)
                writer.writeBytes(7, this.v);
              if (this.r !== void 0)
                writer.writeBytes(8, this.r);
              if (this.s !== void 0)
                writer.writeBytes(9, this.s);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new LegacyTx();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.nonce = reader.readUint64();
                    break;
                  case 2:
                    message.gas_price = reader.readString();
                    break;
                  case 3:
                    message.gas = reader.readUint64();
                    break;
                  case 4:
                    message.to = reader.readString();
                    break;
                  case 5:
                    message.value = reader.readString();
                    break;
                  case 6:
                    message.data = reader.readBytes();
                    break;
                  case 7:
                    message.v = reader.readBytes();
                    break;
                  case 8:
                    message.r = reader.readBytes();
                    break;
                  case 9:
                    message.s = reader.readBytes();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return LegacyTx.deserialize(bytes);
            }
          }
          v12.LegacyTx = LegacyTx;
          class AccessListTx extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [8], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("chain_id" in data && data.chain_id != void 0) {
                  this.chain_id = data.chain_id;
                }
                if ("nonce" in data && data.nonce != void 0) {
                  this.nonce = data.nonce;
                }
                if ("gas_price" in data && data.gas_price != void 0) {
                  this.gas_price = data.gas_price;
                }
                if ("gas" in data && data.gas != void 0) {
                  this.gas = data.gas;
                }
                if ("to" in data && data.to != void 0) {
                  this.to = data.to;
                }
                if ("value" in data && data.value != void 0) {
                  this.value = data.value;
                }
                if ("data" in data && data.data != void 0) {
                  this.data = data.data;
                }
                if ("accesses" in data && data.accesses != void 0) {
                  this.accesses = data.accesses;
                }
                if ("v" in data && data.v != void 0) {
                  this.v = data.v;
                }
                if ("r" in data && data.r != void 0) {
                  this.r = data.r;
                }
                if ("s" in data && data.s != void 0) {
                  this.s = data.s;
                }
              }
            }
            get chain_id() {
              return pb_1.Message.getField(this, 1);
            }
            set chain_id(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get nonce() {
              return pb_1.Message.getField(this, 2);
            }
            set nonce(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get gas_price() {
              return pb_1.Message.getField(this, 3);
            }
            set gas_price(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get gas() {
              return pb_1.Message.getField(this, 4);
            }
            set gas(value) {
              pb_1.Message.setField(this, 4, value);
            }
            get to() {
              return pb_1.Message.getField(this, 5);
            }
            set to(value) {
              pb_1.Message.setField(this, 5, value);
            }
            get value() {
              return pb_1.Message.getField(this, 6);
            }
            set value(value) {
              pb_1.Message.setField(this, 6, value);
            }
            get data() {
              return pb_1.Message.getField(this, 7);
            }
            set data(value) {
              pb_1.Message.setField(this, 7, value);
            }
            get accesses() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_5.ethermint.evm.v1.AccessTuple, 8);
            }
            set accesses(value) {
              pb_1.Message.setRepeatedWrapperField(this, 8, value);
            }
            get v() {
              return pb_1.Message.getField(this, 9);
            }
            set v(value) {
              pb_1.Message.setField(this, 9, value);
            }
            get r() {
              return pb_1.Message.getField(this, 10);
            }
            set r(value) {
              pb_1.Message.setField(this, 10, value);
            }
            get s() {
              return pb_1.Message.getField(this, 11);
            }
            set s(value) {
              pb_1.Message.setField(this, 11, value);
            }
            static fromObject(data) {
              const message = new AccessListTx({});
              if (data.chain_id != null) {
                message.chain_id = data.chain_id;
              }
              if (data.nonce != null) {
                message.nonce = data.nonce;
              }
              if (data.gas_price != null) {
                message.gas_price = data.gas_price;
              }
              if (data.gas != null) {
                message.gas = data.gas;
              }
              if (data.to != null) {
                message.to = data.to;
              }
              if (data.value != null) {
                message.value = data.value;
              }
              if (data.data != null) {
                message.data = data.data;
              }
              if (data.accesses != null) {
                message.accesses = data.accesses.map((item) => dependency_5.ethermint.evm.v1.AccessTuple.fromObject(item));
              }
              if (data.v != null) {
                message.v = data.v;
              }
              if (data.r != null) {
                message.r = data.r;
              }
              if (data.s != null) {
                message.s = data.s;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.chain_id != null) {
                data.chain_id = this.chain_id;
              }
              if (this.nonce != null) {
                data.nonce = this.nonce;
              }
              if (this.gas_price != null) {
                data.gas_price = this.gas_price;
              }
              if (this.gas != null) {
                data.gas = this.gas;
              }
              if (this.to != null) {
                data.to = this.to;
              }
              if (this.value != null) {
                data.value = this.value;
              }
              if (this.data != null) {
                data.data = this.data;
              }
              if (this.accesses != null) {
                data.accesses = this.accesses.map((item) => item.toObject());
              }
              if (this.v != null) {
                data.v = this.v;
              }
              if (this.r != null) {
                data.r = this.r;
              }
              if (this.s != null) {
                data.s = this.s;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.chain_id === "string" && this.chain_id.length)
                writer.writeString(1, this.chain_id);
              if (this.nonce !== void 0)
                writer.writeUint64(2, this.nonce);
              if (typeof this.gas_price === "string" && this.gas_price.length)
                writer.writeString(3, this.gas_price);
              if (this.gas !== void 0)
                writer.writeUint64(4, this.gas);
              if (typeof this.to === "string" && this.to.length)
                writer.writeString(5, this.to);
              if (typeof this.value === "string" && this.value.length)
                writer.writeString(6, this.value);
              if (this.data !== void 0)
                writer.writeBytes(7, this.data);
              if (this.accesses !== void 0)
                writer.writeRepeatedMessage(8, this.accesses, (item) => item.serialize(writer));
              if (this.v !== void 0)
                writer.writeBytes(9, this.v);
              if (this.r !== void 0)
                writer.writeBytes(10, this.r);
              if (this.s !== void 0)
                writer.writeBytes(11, this.s);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AccessListTx();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.chain_id = reader.readString();
                    break;
                  case 2:
                    message.nonce = reader.readUint64();
                    break;
                  case 3:
                    message.gas_price = reader.readString();
                    break;
                  case 4:
                    message.gas = reader.readUint64();
                    break;
                  case 5:
                    message.to = reader.readString();
                    break;
                  case 6:
                    message.value = reader.readString();
                    break;
                  case 7:
                    message.data = reader.readBytes();
                    break;
                  case 8:
                    reader.readMessage(message.accesses, () => pb_1.Message.addToRepeatedWrapperField(message, 8, dependency_5.ethermint.evm.v1.AccessTuple.deserialize(reader), dependency_5.ethermint.evm.v1.AccessTuple));
                    break;
                  case 9:
                    message.v = reader.readBytes();
                    break;
                  case 10:
                    message.r = reader.readBytes();
                    break;
                  case 11:
                    message.s = reader.readBytes();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return AccessListTx.deserialize(bytes);
            }
          }
          v12.AccessListTx = AccessListTx;
          class DynamicFeeTx extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [9], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("chain_id" in data && data.chain_id != void 0) {
                  this.chain_id = data.chain_id;
                }
                if ("nonce" in data && data.nonce != void 0) {
                  this.nonce = data.nonce;
                }
                if ("gas_tip_cap" in data && data.gas_tip_cap != void 0) {
                  this.gas_tip_cap = data.gas_tip_cap;
                }
                if ("gas_fee_cap" in data && data.gas_fee_cap != void 0) {
                  this.gas_fee_cap = data.gas_fee_cap;
                }
                if ("gas" in data && data.gas != void 0) {
                  this.gas = data.gas;
                }
                if ("to" in data && data.to != void 0) {
                  this.to = data.to;
                }
                if ("value" in data && data.value != void 0) {
                  this.value = data.value;
                }
                if ("data" in data && data.data != void 0) {
                  this.data = data.data;
                }
                if ("accesses" in data && data.accesses != void 0) {
                  this.accesses = data.accesses;
                }
                if ("v" in data && data.v != void 0) {
                  this.v = data.v;
                }
                if ("r" in data && data.r != void 0) {
                  this.r = data.r;
                }
                if ("s" in data && data.s != void 0) {
                  this.s = data.s;
                }
              }
            }
            get chain_id() {
              return pb_1.Message.getField(this, 1);
            }
            set chain_id(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get nonce() {
              return pb_1.Message.getField(this, 2);
            }
            set nonce(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get gas_tip_cap() {
              return pb_1.Message.getField(this, 3);
            }
            set gas_tip_cap(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get gas_fee_cap() {
              return pb_1.Message.getField(this, 4);
            }
            set gas_fee_cap(value) {
              pb_1.Message.setField(this, 4, value);
            }
            get gas() {
              return pb_1.Message.getField(this, 5);
            }
            set gas(value) {
              pb_1.Message.setField(this, 5, value);
            }
            get to() {
              return pb_1.Message.getField(this, 6);
            }
            set to(value) {
              pb_1.Message.setField(this, 6, value);
            }
            get value() {
              return pb_1.Message.getField(this, 7);
            }
            set value(value) {
              pb_1.Message.setField(this, 7, value);
            }
            get data() {
              return pb_1.Message.getField(this, 8);
            }
            set data(value) {
              pb_1.Message.setField(this, 8, value);
            }
            get accesses() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_5.ethermint.evm.v1.AccessTuple, 9);
            }
            set accesses(value) {
              pb_1.Message.setRepeatedWrapperField(this, 9, value);
            }
            get v() {
              return pb_1.Message.getField(this, 10);
            }
            set v(value) {
              pb_1.Message.setField(this, 10, value);
            }
            get r() {
              return pb_1.Message.getField(this, 11);
            }
            set r(value) {
              pb_1.Message.setField(this, 11, value);
            }
            get s() {
              return pb_1.Message.getField(this, 12);
            }
            set s(value) {
              pb_1.Message.setField(this, 12, value);
            }
            static fromObject(data) {
              const message = new DynamicFeeTx({});
              if (data.chain_id != null) {
                message.chain_id = data.chain_id;
              }
              if (data.nonce != null) {
                message.nonce = data.nonce;
              }
              if (data.gas_tip_cap != null) {
                message.gas_tip_cap = data.gas_tip_cap;
              }
              if (data.gas_fee_cap != null) {
                message.gas_fee_cap = data.gas_fee_cap;
              }
              if (data.gas != null) {
                message.gas = data.gas;
              }
              if (data.to != null) {
                message.to = data.to;
              }
              if (data.value != null) {
                message.value = data.value;
              }
              if (data.data != null) {
                message.data = data.data;
              }
              if (data.accesses != null) {
                message.accesses = data.accesses.map((item) => dependency_5.ethermint.evm.v1.AccessTuple.fromObject(item));
              }
              if (data.v != null) {
                message.v = data.v;
              }
              if (data.r != null) {
                message.r = data.r;
              }
              if (data.s != null) {
                message.s = data.s;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.chain_id != null) {
                data.chain_id = this.chain_id;
              }
              if (this.nonce != null) {
                data.nonce = this.nonce;
              }
              if (this.gas_tip_cap != null) {
                data.gas_tip_cap = this.gas_tip_cap;
              }
              if (this.gas_fee_cap != null) {
                data.gas_fee_cap = this.gas_fee_cap;
              }
              if (this.gas != null) {
                data.gas = this.gas;
              }
              if (this.to != null) {
                data.to = this.to;
              }
              if (this.value != null) {
                data.value = this.value;
              }
              if (this.data != null) {
                data.data = this.data;
              }
              if (this.accesses != null) {
                data.accesses = this.accesses.map((item) => item.toObject());
              }
              if (this.v != null) {
                data.v = this.v;
              }
              if (this.r != null) {
                data.r = this.r;
              }
              if (this.s != null) {
                data.s = this.s;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.chain_id === "string" && this.chain_id.length)
                writer.writeString(1, this.chain_id);
              if (this.nonce !== void 0)
                writer.writeUint64(2, this.nonce);
              if (typeof this.gas_tip_cap === "string" && this.gas_tip_cap.length)
                writer.writeString(3, this.gas_tip_cap);
              if (typeof this.gas_fee_cap === "string" && this.gas_fee_cap.length)
                writer.writeString(4, this.gas_fee_cap);
              if (this.gas !== void 0)
                writer.writeUint64(5, this.gas);
              if (typeof this.to === "string" && this.to.length)
                writer.writeString(6, this.to);
              if (typeof this.value === "string" && this.value.length)
                writer.writeString(7, this.value);
              if (this.data !== void 0)
                writer.writeBytes(8, this.data);
              if (this.accesses !== void 0)
                writer.writeRepeatedMessage(9, this.accesses, (item) => item.serialize(writer));
              if (this.v !== void 0)
                writer.writeBytes(10, this.v);
              if (this.r !== void 0)
                writer.writeBytes(11, this.r);
              if (this.s !== void 0)
                writer.writeBytes(12, this.s);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DynamicFeeTx();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.chain_id = reader.readString();
                    break;
                  case 2:
                    message.nonce = reader.readUint64();
                    break;
                  case 3:
                    message.gas_tip_cap = reader.readString();
                    break;
                  case 4:
                    message.gas_fee_cap = reader.readString();
                    break;
                  case 5:
                    message.gas = reader.readUint64();
                    break;
                  case 6:
                    message.to = reader.readString();
                    break;
                  case 7:
                    message.value = reader.readString();
                    break;
                  case 8:
                    message.data = reader.readBytes();
                    break;
                  case 9:
                    reader.readMessage(message.accesses, () => pb_1.Message.addToRepeatedWrapperField(message, 9, dependency_5.ethermint.evm.v1.AccessTuple.deserialize(reader), dependency_5.ethermint.evm.v1.AccessTuple));
                    break;
                  case 10:
                    message.v = reader.readBytes();
                    break;
                  case 11:
                    message.r = reader.readBytes();
                    break;
                  case 12:
                    message.s = reader.readBytes();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return DynamicFeeTx.deserialize(bytes);
            }
          }
          v12.DynamicFeeTx = DynamicFeeTx;
          class ExtensionOptionsEthereumTx extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
              }
            }
            static fromObject(data) {
              const message = new ExtensionOptionsEthereumTx({});
              return message;
            }
            toObject() {
              const data = {};
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ExtensionOptionsEthereumTx();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return ExtensionOptionsEthereumTx.deserialize(bytes);
            }
          }
          v12.ExtensionOptionsEthereumTx = ExtensionOptionsEthereumTx;
          class MsgEthereumTxResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("hash" in data && data.hash != void 0) {
                  this.hash = data.hash;
                }
                if ("logs" in data && data.logs != void 0) {
                  this.logs = data.logs;
                }
                if ("ret" in data && data.ret != void 0) {
                  this.ret = data.ret;
                }
                if ("vm_error" in data && data.vm_error != void 0) {
                  this.vm_error = data.vm_error;
                }
                if ("gas_used" in data && data.gas_used != void 0) {
                  this.gas_used = data.gas_used;
                }
              }
            }
            get hash() {
              return pb_1.Message.getField(this, 1);
            }
            set hash(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get logs() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_5.ethermint.evm.v1.Log, 2);
            }
            set logs(value) {
              pb_1.Message.setRepeatedWrapperField(this, 2, value);
            }
            get ret() {
              return pb_1.Message.getField(this, 3);
            }
            set ret(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get vm_error() {
              return pb_1.Message.getField(this, 4);
            }
            set vm_error(value) {
              pb_1.Message.setField(this, 4, value);
            }
            get gas_used() {
              return pb_1.Message.getField(this, 5);
            }
            set gas_used(value) {
              pb_1.Message.setField(this, 5, value);
            }
            static fromObject(data) {
              const message = new MsgEthereumTxResponse({});
              if (data.hash != null) {
                message.hash = data.hash;
              }
              if (data.logs != null) {
                message.logs = data.logs.map((item) => dependency_5.ethermint.evm.v1.Log.fromObject(item));
              }
              if (data.ret != null) {
                message.ret = data.ret;
              }
              if (data.vm_error != null) {
                message.vm_error = data.vm_error;
              }
              if (data.gas_used != null) {
                message.gas_used = data.gas_used;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.hash != null) {
                data.hash = this.hash;
              }
              if (this.logs != null) {
                data.logs = this.logs.map((item) => item.toObject());
              }
              if (this.ret != null) {
                data.ret = this.ret;
              }
              if (this.vm_error != null) {
                data.vm_error = this.vm_error;
              }
              if (this.gas_used != null) {
                data.gas_used = this.gas_used;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.hash === "string" && this.hash.length)
                writer.writeString(1, this.hash);
              if (this.logs !== void 0)
                writer.writeRepeatedMessage(2, this.logs, (item) => item.serialize(writer));
              if (this.ret !== void 0)
                writer.writeBytes(3, this.ret);
              if (typeof this.vm_error === "string" && this.vm_error.length)
                writer.writeString(4, this.vm_error);
              if (this.gas_used !== void 0)
                writer.writeUint64(5, this.gas_used);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgEthereumTxResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.hash = reader.readString();
                    break;
                  case 2:
                    reader.readMessage(message.logs, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_5.ethermint.evm.v1.Log.deserialize(reader), dependency_5.ethermint.evm.v1.Log));
                    break;
                  case 3:
                    message.ret = reader.readBytes();
                    break;
                  case 4:
                    message.vm_error = reader.readString();
                    break;
                  case 5:
                    message.gas_used = reader.readUint64();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgEthereumTxResponse.deserialize(bytes);
            }
          }
          v12.MsgEthereumTxResponse = MsgEthereumTxResponse;
        })(v1 = evm2.v1 || (evm2.v1 = {}));
      })(evm = ethermint2.evm || (ethermint2.evm = {}));
    })(ethermint = exports2.ethermint || (exports2.ethermint = {}));
  }
});

// node_modules/@tharsis/proto/dist/messages/msgEthereumTx.js
var require_msgEthereumTx = __commonJS({
  "node_modules/@tharsis/proto/dist/messages/msgEthereumTx.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.bytesToDynamicFeeTx = exports2.bytesToAccessListTx = exports2.bytesToLegacyTx = exports2.bytesToMsgEthereumTx = void 0;
    var ethermint = __importStar(require_tx3());
    function bytesToMsgEthereumTx(bytes) {
      return ethermint.ethermint.evm.v1.MsgEthereumTx.deserialize(bytes);
    }
    exports2.bytesToMsgEthereumTx = bytesToMsgEthereumTx;
    function bytesToLegacyTx(bytes) {
      return ethermint.ethermint.evm.v1.LegacyTx.deserialize(bytes);
    }
    exports2.bytesToLegacyTx = bytesToLegacyTx;
    function bytesToAccessListTx(bytes) {
      return ethermint.ethermint.evm.v1.AccessListTx.deserialize(bytes);
    }
    exports2.bytesToAccessListTx = bytesToAccessListTx;
    function bytesToDynamicFeeTx(bytes) {
      return ethermint.ethermint.evm.v1.DynamicFeeTx.deserialize(bytes);
    }
    exports2.bytesToDynamicFeeTx = bytesToDynamicFeeTx;
  }
});

// node_modules/@tharsis/proto/dist/proto/cosmos/bank/v1beta1/bank.js
var require_bank = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/cosmos/bank/v1beta1/bank.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.cosmos = void 0;
    var dependency_3 = __importStar(require_coin());
    var pb_1 = __importStar(require_google_protobuf());
    var cosmos;
    (function(cosmos2) {
      var bank;
      (function(bank2) {
        var v1beta1;
        (function(v1beta12) {
          class Params extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("send_enabled" in data && data.send_enabled != void 0) {
                  this.send_enabled = data.send_enabled;
                }
                if ("default_send_enabled" in data && data.default_send_enabled != void 0) {
                  this.default_send_enabled = data.default_send_enabled;
                }
              }
            }
            get send_enabled() {
              return pb_1.Message.getRepeatedWrapperField(this, SendEnabled, 1);
            }
            set send_enabled(value) {
              pb_1.Message.setRepeatedWrapperField(this, 1, value);
            }
            get default_send_enabled() {
              return pb_1.Message.getField(this, 2);
            }
            set default_send_enabled(value) {
              pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
              const message = new Params({});
              if (data.send_enabled != null) {
                message.send_enabled = data.send_enabled.map((item) => SendEnabled.fromObject(item));
              }
              if (data.default_send_enabled != null) {
                message.default_send_enabled = data.default_send_enabled;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.send_enabled != null) {
                data.send_enabled = this.send_enabled.map((item) => item.toObject());
              }
              if (this.default_send_enabled != null) {
                data.default_send_enabled = this.default_send_enabled;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.send_enabled !== void 0)
                writer.writeRepeatedMessage(1, this.send_enabled, (item) => item.serialize(writer));
              if (this.default_send_enabled !== void 0)
                writer.writeBool(2, this.default_send_enabled);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Params();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.send_enabled, () => pb_1.Message.addToRepeatedWrapperField(message, 1, SendEnabled.deserialize(reader), SendEnabled));
                    break;
                  case 2:
                    message.default_send_enabled = reader.readBool();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Params.deserialize(bytes);
            }
          }
          v1beta12.Params = Params;
          class SendEnabled extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("denom" in data && data.denom != void 0) {
                  this.denom = data.denom;
                }
                if ("enabled" in data && data.enabled != void 0) {
                  this.enabled = data.enabled;
                }
              }
            }
            get denom() {
              return pb_1.Message.getField(this, 1);
            }
            set denom(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get enabled() {
              return pb_1.Message.getField(this, 2);
            }
            set enabled(value) {
              pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
              const message = new SendEnabled({});
              if (data.denom != null) {
                message.denom = data.denom;
              }
              if (data.enabled != null) {
                message.enabled = data.enabled;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.denom != null) {
                data.denom = this.denom;
              }
              if (this.enabled != null) {
                data.enabled = this.enabled;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.denom === "string" && this.denom.length)
                writer.writeString(1, this.denom);
              if (this.enabled !== void 0)
                writer.writeBool(2, this.enabled);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SendEnabled();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.denom = reader.readString();
                    break;
                  case 2:
                    message.enabled = reader.readBool();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return SendEnabled.deserialize(bytes);
            }
          }
          v1beta12.SendEnabled = SendEnabled;
          class Input extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("address" in data && data.address != void 0) {
                  this.address = data.address;
                }
                if ("coins" in data && data.coins != void 0) {
                  this.coins = data.coins;
                }
              }
            }
            get address() {
              return pb_1.Message.getField(this, 1);
            }
            set address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get coins() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.base.v1beta1.Coin, 2);
            }
            set coins(value) {
              pb_1.Message.setRepeatedWrapperField(this, 2, value);
            }
            static fromObject(data) {
              const message = new Input({});
              if (data.address != null) {
                message.address = data.address;
              }
              if (data.coins != null) {
                message.coins = data.coins.map((item) => dependency_3.cosmos.base.v1beta1.Coin.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.address != null) {
                data.address = this.address;
              }
              if (this.coins != null) {
                data.coins = this.coins.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.address === "string" && this.address.length)
                writer.writeString(1, this.address);
              if (this.coins !== void 0)
                writer.writeRepeatedMessage(2, this.coins, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Input();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.address = reader.readString();
                    break;
                  case 2:
                    reader.readMessage(message.coins, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_3.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_3.cosmos.base.v1beta1.Coin));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Input.deserialize(bytes);
            }
          }
          v1beta12.Input = Input;
          class Output extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("address" in data && data.address != void 0) {
                  this.address = data.address;
                }
                if ("coins" in data && data.coins != void 0) {
                  this.coins = data.coins;
                }
              }
            }
            get address() {
              return pb_1.Message.getField(this, 1);
            }
            set address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get coins() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.base.v1beta1.Coin, 2);
            }
            set coins(value) {
              pb_1.Message.setRepeatedWrapperField(this, 2, value);
            }
            static fromObject(data) {
              const message = new Output({});
              if (data.address != null) {
                message.address = data.address;
              }
              if (data.coins != null) {
                message.coins = data.coins.map((item) => dependency_3.cosmos.base.v1beta1.Coin.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.address != null) {
                data.address = this.address;
              }
              if (this.coins != null) {
                data.coins = this.coins.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.address === "string" && this.address.length)
                writer.writeString(1, this.address);
              if (this.coins !== void 0)
                writer.writeRepeatedMessage(2, this.coins, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Output();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.address = reader.readString();
                    break;
                  case 2:
                    reader.readMessage(message.coins, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_3.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_3.cosmos.base.v1beta1.Coin));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Output.deserialize(bytes);
            }
          }
          v1beta12.Output = Output;
          class Supply extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("total" in data && data.total != void 0) {
                  this.total = data.total;
                }
              }
            }
            get total() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.base.v1beta1.Coin, 1);
            }
            set total(value) {
              pb_1.Message.setRepeatedWrapperField(this, 1, value);
            }
            static fromObject(data) {
              const message = new Supply({});
              if (data.total != null) {
                message.total = data.total.map((item) => dependency_3.cosmos.base.v1beta1.Coin.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.total != null) {
                data.total = this.total.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.total !== void 0)
                writer.writeRepeatedMessage(1, this.total, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Supply();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.total, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_3.cosmos.base.v1beta1.Coin));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Supply.deserialize(bytes);
            }
          }
          v1beta12.Supply = Supply;
          class DenomUnit extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("denom" in data && data.denom != void 0) {
                  this.denom = data.denom;
                }
                if ("exponent" in data && data.exponent != void 0) {
                  this.exponent = data.exponent;
                }
                if ("aliases" in data && data.aliases != void 0) {
                  this.aliases = data.aliases;
                }
              }
            }
            get denom() {
              return pb_1.Message.getField(this, 1);
            }
            set denom(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get exponent() {
              return pb_1.Message.getField(this, 2);
            }
            set exponent(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get aliases() {
              return pb_1.Message.getField(this, 3);
            }
            set aliases(value) {
              pb_1.Message.setField(this, 3, value);
            }
            static fromObject(data) {
              const message = new DenomUnit({});
              if (data.denom != null) {
                message.denom = data.denom;
              }
              if (data.exponent != null) {
                message.exponent = data.exponent;
              }
              if (data.aliases != null) {
                message.aliases = data.aliases;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.denom != null) {
                data.denom = this.denom;
              }
              if (this.exponent != null) {
                data.exponent = this.exponent;
              }
              if (this.aliases != null) {
                data.aliases = this.aliases;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.denom === "string" && this.denom.length)
                writer.writeString(1, this.denom);
              if (this.exponent !== void 0)
                writer.writeUint32(2, this.exponent);
              if (this.aliases !== void 0)
                writer.writeRepeatedString(3, this.aliases);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DenomUnit();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.denom = reader.readString();
                    break;
                  case 2:
                    message.exponent = reader.readUint32();
                    break;
                  case 3:
                    pb_1.Message.addToRepeatedField(message, 3, reader.readString());
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return DenomUnit.deserialize(bytes);
            }
          }
          v1beta12.DenomUnit = DenomUnit;
          class Metadata extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("description" in data && data.description != void 0) {
                  this.description = data.description;
                }
                if ("denom_units" in data && data.denom_units != void 0) {
                  this.denom_units = data.denom_units;
                }
                if ("base" in data && data.base != void 0) {
                  this.base = data.base;
                }
                if ("display" in data && data.display != void 0) {
                  this.display = data.display;
                }
                if ("name" in data && data.name != void 0) {
                  this.name = data.name;
                }
                if ("symbol" in data && data.symbol != void 0) {
                  this.symbol = data.symbol;
                }
              }
            }
            get description() {
              return pb_1.Message.getField(this, 1);
            }
            set description(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get denom_units() {
              return pb_1.Message.getRepeatedWrapperField(this, DenomUnit, 2);
            }
            set denom_units(value) {
              pb_1.Message.setRepeatedWrapperField(this, 2, value);
            }
            get base() {
              return pb_1.Message.getField(this, 3);
            }
            set base(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get display() {
              return pb_1.Message.getField(this, 4);
            }
            set display(value) {
              pb_1.Message.setField(this, 4, value);
            }
            get name() {
              return pb_1.Message.getField(this, 5);
            }
            set name(value) {
              pb_1.Message.setField(this, 5, value);
            }
            get symbol() {
              return pb_1.Message.getField(this, 6);
            }
            set symbol(value) {
              pb_1.Message.setField(this, 6, value);
            }
            static fromObject(data) {
              const message = new Metadata({});
              if (data.description != null) {
                message.description = data.description;
              }
              if (data.denom_units != null) {
                message.denom_units = data.denom_units.map((item) => DenomUnit.fromObject(item));
              }
              if (data.base != null) {
                message.base = data.base;
              }
              if (data.display != null) {
                message.display = data.display;
              }
              if (data.name != null) {
                message.name = data.name;
              }
              if (data.symbol != null) {
                message.symbol = data.symbol;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.description != null) {
                data.description = this.description;
              }
              if (this.denom_units != null) {
                data.denom_units = this.denom_units.map((item) => item.toObject());
              }
              if (this.base != null) {
                data.base = this.base;
              }
              if (this.display != null) {
                data.display = this.display;
              }
              if (this.name != null) {
                data.name = this.name;
              }
              if (this.symbol != null) {
                data.symbol = this.symbol;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.description === "string" && this.description.length)
                writer.writeString(1, this.description);
              if (this.denom_units !== void 0)
                writer.writeRepeatedMessage(2, this.denom_units, (item) => item.serialize(writer));
              if (typeof this.base === "string" && this.base.length)
                writer.writeString(3, this.base);
              if (typeof this.display === "string" && this.display.length)
                writer.writeString(4, this.display);
              if (typeof this.name === "string" && this.name.length)
                writer.writeString(5, this.name);
              if (typeof this.symbol === "string" && this.symbol.length)
                writer.writeString(6, this.symbol);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Metadata();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.description = reader.readString();
                    break;
                  case 2:
                    reader.readMessage(message.denom_units, () => pb_1.Message.addToRepeatedWrapperField(message, 2, DenomUnit.deserialize(reader), DenomUnit));
                    break;
                  case 3:
                    message.base = reader.readString();
                    break;
                  case 4:
                    message.display = reader.readString();
                    break;
                  case 5:
                    message.name = reader.readString();
                    break;
                  case 6:
                    message.symbol = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Metadata.deserialize(bytes);
            }
          }
          v1beta12.Metadata = Metadata;
        })(v1beta1 = bank2.v1beta1 || (bank2.v1beta1 = {}));
      })(bank = cosmos2.bank || (cosmos2.bank = {}));
    })(cosmos = exports2.cosmos || (exports2.cosmos = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/cosmos/bank/v1beta1/tx.js
var require_tx4 = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/cosmos/bank/v1beta1/tx.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.cosmos = void 0;
    var dependency_2 = __importStar(require_coin());
    var dependency_3 = __importStar(require_bank());
    var pb_1 = __importStar(require_google_protobuf());
    var cosmos;
    (function(cosmos2) {
      var bank;
      (function(bank2) {
        var v1beta1;
        (function(v1beta12) {
          class MsgSend extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("from_address" in data && data.from_address != void 0) {
                  this.from_address = data.from_address;
                }
                if ("to_address" in data && data.to_address != void 0) {
                  this.to_address = data.to_address;
                }
                if ("amount" in data && data.amount != void 0) {
                  this.amount = data.amount;
                }
              }
            }
            get from_address() {
              return pb_1.Message.getField(this, 1);
            }
            set from_address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get to_address() {
              return pb_1.Message.getField(this, 2);
            }
            set to_address(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get amount() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_2.cosmos.base.v1beta1.Coin, 3);
            }
            set amount(value) {
              pb_1.Message.setRepeatedWrapperField(this, 3, value);
            }
            static fromObject(data) {
              const message = new MsgSend({});
              if (data.from_address != null) {
                message.from_address = data.from_address;
              }
              if (data.to_address != null) {
                message.to_address = data.to_address;
              }
              if (data.amount != null) {
                message.amount = data.amount.map((item) => dependency_2.cosmos.base.v1beta1.Coin.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.from_address != null) {
                data.from_address = this.from_address;
              }
              if (this.to_address != null) {
                data.to_address = this.to_address;
              }
              if (this.amount != null) {
                data.amount = this.amount.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.from_address === "string" && this.from_address.length)
                writer.writeString(1, this.from_address);
              if (typeof this.to_address === "string" && this.to_address.length)
                writer.writeString(2, this.to_address);
              if (this.amount !== void 0)
                writer.writeRepeatedMessage(3, this.amount, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgSend();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.from_address = reader.readString();
                    break;
                  case 2:
                    message.to_address = reader.readString();
                    break;
                  case 3:
                    reader.readMessage(message.amount, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_2.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_2.cosmos.base.v1beta1.Coin));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgSend.deserialize(bytes);
            }
          }
          v1beta12.MsgSend = MsgSend;
          class MsgSendResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
              }
            }
            static fromObject(data) {
              const message = new MsgSendResponse({});
              return message;
            }
            toObject() {
              const data = {};
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgSendResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgSendResponse.deserialize(bytes);
            }
          }
          v1beta12.MsgSendResponse = MsgSendResponse;
          class MsgMultiSend extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1, 2], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("inputs" in data && data.inputs != void 0) {
                  this.inputs = data.inputs;
                }
                if ("outputs" in data && data.outputs != void 0) {
                  this.outputs = data.outputs;
                }
              }
            }
            get inputs() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.bank.v1beta1.Input, 1);
            }
            set inputs(value) {
              pb_1.Message.setRepeatedWrapperField(this, 1, value);
            }
            get outputs() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.bank.v1beta1.Output, 2);
            }
            set outputs(value) {
              pb_1.Message.setRepeatedWrapperField(this, 2, value);
            }
            static fromObject(data) {
              const message = new MsgMultiSend({});
              if (data.inputs != null) {
                message.inputs = data.inputs.map((item) => dependency_3.cosmos.bank.v1beta1.Input.fromObject(item));
              }
              if (data.outputs != null) {
                message.outputs = data.outputs.map((item) => dependency_3.cosmos.bank.v1beta1.Output.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.inputs != null) {
                data.inputs = this.inputs.map((item) => item.toObject());
              }
              if (this.outputs != null) {
                data.outputs = this.outputs.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.inputs !== void 0)
                writer.writeRepeatedMessage(1, this.inputs, (item) => item.serialize(writer));
              if (this.outputs !== void 0)
                writer.writeRepeatedMessage(2, this.outputs, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgMultiSend();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.inputs, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.cosmos.bank.v1beta1.Input.deserialize(reader), dependency_3.cosmos.bank.v1beta1.Input));
                    break;
                  case 2:
                    reader.readMessage(message.outputs, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_3.cosmos.bank.v1beta1.Output.deserialize(reader), dependency_3.cosmos.bank.v1beta1.Output));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgMultiSend.deserialize(bytes);
            }
          }
          v1beta12.MsgMultiSend = MsgMultiSend;
          class MsgMultiSendResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
              }
            }
            static fromObject(data) {
              const message = new MsgMultiSendResponse({});
              return message;
            }
            toObject() {
              const data = {};
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgMultiSendResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgMultiSendResponse.deserialize(bytes);
            }
          }
          v1beta12.MsgMultiSendResponse = MsgMultiSendResponse;
        })(v1beta1 = bank2.v1beta1 || (bank2.v1beta1 = {}));
      })(bank = cosmos2.bank || (cosmos2.bank = {}));
    })(cosmos = exports2.cosmos || (exports2.cosmos = {}));
  }
});

// node_modules/@tharsis/proto/dist/messages/msgSend.js
var require_msgSend = __commonJS({
  "node_modules/@tharsis/proto/dist/messages/msgSend.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createMsgSend = void 0;
    var bank = __importStar(require_tx4());
    var coin = __importStar(require_coin());
    function createMsgSend(fromAddress, toAddress, amount, denom) {
      const value = new coin.cosmos.base.v1beta1.Coin({
        denom,
        amount
      });
      const message = new bank.cosmos.bank.v1beta1.MsgSend({
        from_address: fromAddress,
        to_address: toAddress,
        amount: [value]
      });
      return {
        message,
        path: "cosmos.bank.v1beta1.MsgSend"
      };
    }
    exports2.createMsgSend = createMsgSend;
  }
});

// node_modules/@tharsis/proto/dist/proto/google/protobuf/duration.js
var require_duration = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/google/protobuf/duration.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.google = void 0;
    var pb_1 = __importStar(require_google_protobuf());
    var google;
    (function(google2) {
      var protobuf;
      (function(protobuf2) {
        class Duration extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("seconds" in data && data.seconds != void 0) {
                this.seconds = data.seconds;
              }
              if ("nanos" in data && data.nanos != void 0) {
                this.nanos = data.nanos;
              }
            }
          }
          get seconds() {
            return pb_1.Message.getField(this, 1);
          }
          set seconds(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get nanos() {
            return pb_1.Message.getField(this, 2);
          }
          set nanos(value) {
            pb_1.Message.setField(this, 2, value);
          }
          static fromObject(data) {
            const message = new Duration({});
            if (data.seconds != null) {
              message.seconds = data.seconds;
            }
            if (data.nanos != null) {
              message.nanos = data.nanos;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.seconds != null) {
              data.seconds = this.seconds;
            }
            if (this.nanos != null) {
              data.nanos = this.nanos;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.seconds !== void 0)
              writer.writeInt64(1, this.seconds);
            if (this.nanos !== void 0)
              writer.writeInt32(2, this.nanos);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Duration();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.seconds = reader.readInt64();
                  break;
                case 2:
                  message.nanos = reader.readInt32();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return Duration.deserialize(bytes);
          }
        }
        protobuf2.Duration = Duration;
      })(protobuf = google2.protobuf || (google2.protobuf = {}));
    })(google = exports2.google || (exports2.google = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/tendermint/crypto/proof.js
var require_proof = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/tendermint/crypto/proof.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.tendermint = void 0;
    var pb_1 = __importStar(require_google_protobuf());
    var tendermint;
    (function(tendermint2) {
      var crypto;
      (function(crypto2) {
        class Proof extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("total" in data && data.total != void 0) {
                this.total = data.total;
              }
              if ("index" in data && data.index != void 0) {
                this.index = data.index;
              }
              if ("leaf_hash" in data && data.leaf_hash != void 0) {
                this.leaf_hash = data.leaf_hash;
              }
              if ("aunts" in data && data.aunts != void 0) {
                this.aunts = data.aunts;
              }
            }
          }
          get total() {
            return pb_1.Message.getField(this, 1);
          }
          set total(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get index() {
            return pb_1.Message.getField(this, 2);
          }
          set index(value) {
            pb_1.Message.setField(this, 2, value);
          }
          get leaf_hash() {
            return pb_1.Message.getField(this, 3);
          }
          set leaf_hash(value) {
            pb_1.Message.setField(this, 3, value);
          }
          get aunts() {
            return pb_1.Message.getField(this, 4);
          }
          set aunts(value) {
            pb_1.Message.setField(this, 4, value);
          }
          static fromObject(data) {
            const message = new Proof({});
            if (data.total != null) {
              message.total = data.total;
            }
            if (data.index != null) {
              message.index = data.index;
            }
            if (data.leaf_hash != null) {
              message.leaf_hash = data.leaf_hash;
            }
            if (data.aunts != null) {
              message.aunts = data.aunts;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.total != null) {
              data.total = this.total;
            }
            if (this.index != null) {
              data.index = this.index;
            }
            if (this.leaf_hash != null) {
              data.leaf_hash = this.leaf_hash;
            }
            if (this.aunts != null) {
              data.aunts = this.aunts;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.total !== void 0)
              writer.writeInt64(1, this.total);
            if (this.index !== void 0)
              writer.writeInt64(2, this.index);
            if (this.leaf_hash !== void 0)
              writer.writeBytes(3, this.leaf_hash);
            if (this.aunts !== void 0)
              writer.writeRepeatedBytes(4, this.aunts);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Proof();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.total = reader.readInt64();
                  break;
                case 2:
                  message.index = reader.readInt64();
                  break;
                case 3:
                  message.leaf_hash = reader.readBytes();
                  break;
                case 4:
                  pb_1.Message.addToRepeatedField(message, 4, reader.readBytes());
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return Proof.deserialize(bytes);
          }
        }
        crypto2.Proof = Proof;
        class ValueOp extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("key" in data && data.key != void 0) {
                this.key = data.key;
              }
              if ("proof" in data && data.proof != void 0) {
                this.proof = data.proof;
              }
            }
          }
          get key() {
            return pb_1.Message.getField(this, 1);
          }
          set key(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get proof() {
            return pb_1.Message.getWrapperField(this, Proof, 2);
          }
          set proof(value) {
            pb_1.Message.setWrapperField(this, 2, value);
          }
          static fromObject(data) {
            const message = new ValueOp({});
            if (data.key != null) {
              message.key = data.key;
            }
            if (data.proof != null) {
              message.proof = Proof.fromObject(data.proof);
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.key != null) {
              data.key = this.key;
            }
            if (this.proof != null) {
              data.proof = this.proof.toObject();
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.key !== void 0)
              writer.writeBytes(1, this.key);
            if (this.proof !== void 0)
              writer.writeMessage(2, this.proof, () => this.proof.serialize(writer));
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ValueOp();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.key = reader.readBytes();
                  break;
                case 2:
                  reader.readMessage(message.proof, () => message.proof = Proof.deserialize(reader));
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return ValueOp.deserialize(bytes);
          }
        }
        crypto2.ValueOp = ValueOp;
        class DominoOp extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("key" in data && data.key != void 0) {
                this.key = data.key;
              }
              if ("input" in data && data.input != void 0) {
                this.input = data.input;
              }
              if ("output" in data && data.output != void 0) {
                this.output = data.output;
              }
            }
          }
          get key() {
            return pb_1.Message.getField(this, 1);
          }
          set key(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get input() {
            return pb_1.Message.getField(this, 2);
          }
          set input(value) {
            pb_1.Message.setField(this, 2, value);
          }
          get output() {
            return pb_1.Message.getField(this, 3);
          }
          set output(value) {
            pb_1.Message.setField(this, 3, value);
          }
          static fromObject(data) {
            const message = new DominoOp({});
            if (data.key != null) {
              message.key = data.key;
            }
            if (data.input != null) {
              message.input = data.input;
            }
            if (data.output != null) {
              message.output = data.output;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.key != null) {
              data.key = this.key;
            }
            if (this.input != null) {
              data.input = this.input;
            }
            if (this.output != null) {
              data.output = this.output;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.key === "string" && this.key.length)
              writer.writeString(1, this.key);
            if (typeof this.input === "string" && this.input.length)
              writer.writeString(2, this.input);
            if (typeof this.output === "string" && this.output.length)
              writer.writeString(3, this.output);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DominoOp();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.key = reader.readString();
                  break;
                case 2:
                  message.input = reader.readString();
                  break;
                case 3:
                  message.output = reader.readString();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return DominoOp.deserialize(bytes);
          }
        }
        crypto2.DominoOp = DominoOp;
        class ProofOp extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("type" in data && data.type != void 0) {
                this.type = data.type;
              }
              if ("key" in data && data.key != void 0) {
                this.key = data.key;
              }
              if ("data" in data && data.data != void 0) {
                this.data = data.data;
              }
            }
          }
          get type() {
            return pb_1.Message.getField(this, 1);
          }
          set type(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get key() {
            return pb_1.Message.getField(this, 2);
          }
          set key(value) {
            pb_1.Message.setField(this, 2, value);
          }
          get data() {
            return pb_1.Message.getField(this, 3);
          }
          set data(value) {
            pb_1.Message.setField(this, 3, value);
          }
          static fromObject(data) {
            const message = new ProofOp({});
            if (data.type != null) {
              message.type = data.type;
            }
            if (data.key != null) {
              message.key = data.key;
            }
            if (data.data != null) {
              message.data = data.data;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.type != null) {
              data.type = this.type;
            }
            if (this.key != null) {
              data.key = this.key;
            }
            if (this.data != null) {
              data.data = this.data;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.type === "string" && this.type.length)
              writer.writeString(1, this.type);
            if (this.key !== void 0)
              writer.writeBytes(2, this.key);
            if (this.data !== void 0)
              writer.writeBytes(3, this.data);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProofOp();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.type = reader.readString();
                  break;
                case 2:
                  message.key = reader.readBytes();
                  break;
                case 3:
                  message.data = reader.readBytes();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return ProofOp.deserialize(bytes);
          }
        }
        crypto2.ProofOp = ProofOp;
        class ProofOps extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("ops" in data && data.ops != void 0) {
                this.ops = data.ops;
              }
            }
          }
          get ops() {
            return pb_1.Message.getRepeatedWrapperField(this, ProofOp, 1);
          }
          set ops(value) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
          }
          static fromObject(data) {
            const message = new ProofOps({});
            if (data.ops != null) {
              message.ops = data.ops.map((item) => ProofOp.fromObject(item));
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.ops != null) {
              data.ops = this.ops.map((item) => item.toObject());
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.ops !== void 0)
              writer.writeRepeatedMessage(1, this.ops, (item) => item.serialize(writer));
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProofOps();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  reader.readMessage(message.ops, () => pb_1.Message.addToRepeatedWrapperField(message, 1, ProofOp.deserialize(reader), ProofOp));
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return ProofOps.deserialize(bytes);
          }
        }
        crypto2.ProofOps = ProofOps;
      })(crypto = tendermint2.crypto || (tendermint2.crypto = {}));
    })(tendermint = exports2.tendermint || (exports2.tendermint = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/tendermint/version/types.js
var require_types = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/tendermint/version/types.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.tendermint = void 0;
    var pb_1 = __importStar(require_google_protobuf());
    var tendermint;
    (function(tendermint2) {
      var version;
      (function(version2) {
        class App extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("protocol" in data && data.protocol != void 0) {
                this.protocol = data.protocol;
              }
              if ("software" in data && data.software != void 0) {
                this.software = data.software;
              }
            }
          }
          get protocol() {
            return pb_1.Message.getField(this, 1);
          }
          set protocol(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get software() {
            return pb_1.Message.getField(this, 2);
          }
          set software(value) {
            pb_1.Message.setField(this, 2, value);
          }
          static fromObject(data) {
            const message = new App({});
            if (data.protocol != null) {
              message.protocol = data.protocol;
            }
            if (data.software != null) {
              message.software = data.software;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.protocol != null) {
              data.protocol = this.protocol;
            }
            if (this.software != null) {
              data.software = this.software;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.protocol !== void 0)
              writer.writeUint64(1, this.protocol);
            if (typeof this.software === "string" && this.software.length)
              writer.writeString(2, this.software);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new App();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.protocol = reader.readUint64();
                  break;
                case 2:
                  message.software = reader.readString();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return App.deserialize(bytes);
          }
        }
        version2.App = App;
        class Consensus extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("block" in data && data.block != void 0) {
                this.block = data.block;
              }
              if ("app" in data && data.app != void 0) {
                this.app = data.app;
              }
            }
          }
          get block() {
            return pb_1.Message.getField(this, 1);
          }
          set block(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get app() {
            return pb_1.Message.getField(this, 2);
          }
          set app(value) {
            pb_1.Message.setField(this, 2, value);
          }
          static fromObject(data) {
            const message = new Consensus({});
            if (data.block != null) {
              message.block = data.block;
            }
            if (data.app != null) {
              message.app = data.app;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.block != null) {
              data.block = this.block;
            }
            if (this.app != null) {
              data.app = this.app;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.block !== void 0)
              writer.writeUint64(1, this.block);
            if (this.app !== void 0)
              writer.writeUint64(2, this.app);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Consensus();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.block = reader.readUint64();
                  break;
                case 2:
                  message.app = reader.readUint64();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return Consensus.deserialize(bytes);
          }
        }
        version2.Consensus = Consensus;
      })(version = tendermint2.version || (tendermint2.version = {}));
    })(tendermint = exports2.tendermint || (exports2.tendermint = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/tendermint/crypto/keys.js
var require_keys = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/tendermint/crypto/keys.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.tendermint = void 0;
    var pb_1 = __importStar(require_google_protobuf());
    var tendermint;
    (function(tendermint2) {
      var crypto;
      (function(crypto2) {
        class PublicKey extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], [[1, 2]]);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("ed25519" in data && data.ed25519 != void 0) {
                this.ed25519 = data.ed25519;
              }
              if ("secp256k1" in data && data.secp256k1 != void 0) {
                this.secp256k1 = data.secp256k1;
              }
            }
          }
          get ed25519() {
            return pb_1.Message.getField(this, 1);
          }
          set ed25519(value) {
            pb_1.Message.setOneofField(this, 1, [1, 2], value);
          }
          get secp256k1() {
            return pb_1.Message.getField(this, 2);
          }
          set secp256k1(value) {
            pb_1.Message.setOneofField(this, 2, [1, 2], value);
          }
          get sum() {
            const cases = {
              0: "none",
              1: "ed25519",
              2: "secp256k1"
            };
            return cases[pb_1.Message.computeOneofCase(this, [1, 2])];
          }
          static fromObject(data) {
            const message = new PublicKey({});
            if (data.ed25519 != null) {
              message.ed25519 = data.ed25519;
            }
            if (data.secp256k1 != null) {
              message.secp256k1 = data.secp256k1;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.ed25519 != null) {
              data.ed25519 = this.ed25519;
            }
            if (this.secp256k1 != null) {
              data.secp256k1 = this.secp256k1;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.ed25519 !== void 0)
              writer.writeBytes(1, this.ed25519);
            if (this.secp256k1 !== void 0)
              writer.writeBytes(2, this.secp256k1);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PublicKey();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.ed25519 = reader.readBytes();
                  break;
                case 2:
                  message.secp256k1 = reader.readBytes();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return PublicKey.deserialize(bytes);
          }
        }
        crypto2.PublicKey = PublicKey;
      })(crypto = tendermint2.crypto || (tendermint2.crypto = {}));
    })(tendermint = exports2.tendermint || (exports2.tendermint = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/tendermint/types/validator.js
var require_validator = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/tendermint/types/validator.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.tendermint = void 0;
    var dependency_2 = __importStar(require_keys());
    var pb_1 = __importStar(require_google_protobuf());
    var tendermint;
    (function(tendermint2) {
      var types;
      (function(types2) {
        class ValidatorSet extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("validators" in data && data.validators != void 0) {
                this.validators = data.validators;
              }
              if ("proposer" in data && data.proposer != void 0) {
                this.proposer = data.proposer;
              }
              if ("total_voting_power" in data && data.total_voting_power != void 0) {
                this.total_voting_power = data.total_voting_power;
              }
            }
          }
          get validators() {
            return pb_1.Message.getRepeatedWrapperField(this, Validator, 1);
          }
          set validators(value) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
          }
          get proposer() {
            return pb_1.Message.getWrapperField(this, Validator, 2);
          }
          set proposer(value) {
            pb_1.Message.setWrapperField(this, 2, value);
          }
          get total_voting_power() {
            return pb_1.Message.getField(this, 3);
          }
          set total_voting_power(value) {
            pb_1.Message.setField(this, 3, value);
          }
          static fromObject(data) {
            const message = new ValidatorSet({});
            if (data.validators != null) {
              message.validators = data.validators.map((item) => Validator.fromObject(item));
            }
            if (data.proposer != null) {
              message.proposer = Validator.fromObject(data.proposer);
            }
            if (data.total_voting_power != null) {
              message.total_voting_power = data.total_voting_power;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.validators != null) {
              data.validators = this.validators.map((item) => item.toObject());
            }
            if (this.proposer != null) {
              data.proposer = this.proposer.toObject();
            }
            if (this.total_voting_power != null) {
              data.total_voting_power = this.total_voting_power;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.validators !== void 0)
              writer.writeRepeatedMessage(1, this.validators, (item) => item.serialize(writer));
            if (this.proposer !== void 0)
              writer.writeMessage(2, this.proposer, () => this.proposer.serialize(writer));
            if (this.total_voting_power !== void 0)
              writer.writeInt64(3, this.total_voting_power);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ValidatorSet();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  reader.readMessage(message.validators, () => pb_1.Message.addToRepeatedWrapperField(message, 1, Validator.deserialize(reader), Validator));
                  break;
                case 2:
                  reader.readMessage(message.proposer, () => message.proposer = Validator.deserialize(reader));
                  break;
                case 3:
                  message.total_voting_power = reader.readInt64();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return ValidatorSet.deserialize(bytes);
          }
        }
        types2.ValidatorSet = ValidatorSet;
        class Validator extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("address" in data && data.address != void 0) {
                this.address = data.address;
              }
              if ("pub_key" in data && data.pub_key != void 0) {
                this.pub_key = data.pub_key;
              }
              if ("voting_power" in data && data.voting_power != void 0) {
                this.voting_power = data.voting_power;
              }
              if ("proposer_priority" in data && data.proposer_priority != void 0) {
                this.proposer_priority = data.proposer_priority;
              }
            }
          }
          get address() {
            return pb_1.Message.getField(this, 1);
          }
          set address(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get pub_key() {
            return pb_1.Message.getWrapperField(this, dependency_2.tendermint.crypto.PublicKey, 2);
          }
          set pub_key(value) {
            pb_1.Message.setWrapperField(this, 2, value);
          }
          get voting_power() {
            return pb_1.Message.getField(this, 3);
          }
          set voting_power(value) {
            pb_1.Message.setField(this, 3, value);
          }
          get proposer_priority() {
            return pb_1.Message.getField(this, 4);
          }
          set proposer_priority(value) {
            pb_1.Message.setField(this, 4, value);
          }
          static fromObject(data) {
            const message = new Validator({});
            if (data.address != null) {
              message.address = data.address;
            }
            if (data.pub_key != null) {
              message.pub_key = dependency_2.tendermint.crypto.PublicKey.fromObject(data.pub_key);
            }
            if (data.voting_power != null) {
              message.voting_power = data.voting_power;
            }
            if (data.proposer_priority != null) {
              message.proposer_priority = data.proposer_priority;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.address != null) {
              data.address = this.address;
            }
            if (this.pub_key != null) {
              data.pub_key = this.pub_key.toObject();
            }
            if (this.voting_power != null) {
              data.voting_power = this.voting_power;
            }
            if (this.proposer_priority != null) {
              data.proposer_priority = this.proposer_priority;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.address !== void 0)
              writer.writeBytes(1, this.address);
            if (this.pub_key !== void 0)
              writer.writeMessage(2, this.pub_key, () => this.pub_key.serialize(writer));
            if (this.voting_power !== void 0)
              writer.writeInt64(3, this.voting_power);
            if (this.proposer_priority !== void 0)
              writer.writeInt64(4, this.proposer_priority);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Validator();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.address = reader.readBytes();
                  break;
                case 2:
                  reader.readMessage(message.pub_key, () => message.pub_key = dependency_2.tendermint.crypto.PublicKey.deserialize(reader));
                  break;
                case 3:
                  message.voting_power = reader.readInt64();
                  break;
                case 4:
                  message.proposer_priority = reader.readInt64();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return Validator.deserialize(bytes);
          }
        }
        types2.Validator = Validator;
        class SimpleValidator extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("pub_key" in data && data.pub_key != void 0) {
                this.pub_key = data.pub_key;
              }
              if ("voting_power" in data && data.voting_power != void 0) {
                this.voting_power = data.voting_power;
              }
            }
          }
          get pub_key() {
            return pb_1.Message.getWrapperField(this, dependency_2.tendermint.crypto.PublicKey, 1);
          }
          set pub_key(value) {
            pb_1.Message.setWrapperField(this, 1, value);
          }
          get voting_power() {
            return pb_1.Message.getField(this, 2);
          }
          set voting_power(value) {
            pb_1.Message.setField(this, 2, value);
          }
          static fromObject(data) {
            const message = new SimpleValidator({});
            if (data.pub_key != null) {
              message.pub_key = dependency_2.tendermint.crypto.PublicKey.fromObject(data.pub_key);
            }
            if (data.voting_power != null) {
              message.voting_power = data.voting_power;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.pub_key != null) {
              data.pub_key = this.pub_key.toObject();
            }
            if (this.voting_power != null) {
              data.voting_power = this.voting_power;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.pub_key !== void 0)
              writer.writeMessage(1, this.pub_key, () => this.pub_key.serialize(writer));
            if (this.voting_power !== void 0)
              writer.writeInt64(2, this.voting_power);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SimpleValidator();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  reader.readMessage(message.pub_key, () => message.pub_key = dependency_2.tendermint.crypto.PublicKey.deserialize(reader));
                  break;
                case 2:
                  message.voting_power = reader.readInt64();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return SimpleValidator.deserialize(bytes);
          }
        }
        types2.SimpleValidator = SimpleValidator;
      })(types = tendermint2.types || (tendermint2.types = {}));
    })(tendermint = exports2.tendermint || (exports2.tendermint = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/tendermint/types/types.js
var require_types2 = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/tendermint/types/types.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.tendermint = void 0;
    var dependency_2 = __importStar(require_timestamp());
    var dependency_3 = __importStar(require_proof());
    var dependency_4 = __importStar(require_types());
    var dependency_5 = __importStar(require_validator());
    var pb_1 = __importStar(require_google_protobuf());
    var tendermint;
    (function(tendermint2) {
      var types;
      (function(types2) {
        let BlockIDFlag;
        (function(BlockIDFlag2) {
          BlockIDFlag2[BlockIDFlag2["BLOCK_ID_FLAG_UNKNOWN"] = 0] = "BLOCK_ID_FLAG_UNKNOWN";
          BlockIDFlag2[BlockIDFlag2["BLOCK_ID_FLAG_ABSENT"] = 1] = "BLOCK_ID_FLAG_ABSENT";
          BlockIDFlag2[BlockIDFlag2["BLOCK_ID_FLAG_COMMIT"] = 2] = "BLOCK_ID_FLAG_COMMIT";
          BlockIDFlag2[BlockIDFlag2["BLOCK_ID_FLAG_NIL"] = 3] = "BLOCK_ID_FLAG_NIL";
        })(BlockIDFlag = types2.BlockIDFlag || (types2.BlockIDFlag = {}));
        let SignedMsgType;
        (function(SignedMsgType2) {
          SignedMsgType2[SignedMsgType2["SIGNED_MSG_TYPE_UNKNOWN"] = 0] = "SIGNED_MSG_TYPE_UNKNOWN";
          SignedMsgType2[SignedMsgType2["SIGNED_MSG_TYPE_PREVOTE"] = 1] = "SIGNED_MSG_TYPE_PREVOTE";
          SignedMsgType2[SignedMsgType2["SIGNED_MSG_TYPE_PRECOMMIT"] = 2] = "SIGNED_MSG_TYPE_PRECOMMIT";
          SignedMsgType2[SignedMsgType2["SIGNED_MSG_TYPE_PROPOSAL"] = 32] = "SIGNED_MSG_TYPE_PROPOSAL";
        })(SignedMsgType = types2.SignedMsgType || (types2.SignedMsgType = {}));
        class PartSetHeader extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("total" in data && data.total != void 0) {
                this.total = data.total;
              }
              if ("hash" in data && data.hash != void 0) {
                this.hash = data.hash;
              }
            }
          }
          get total() {
            return pb_1.Message.getField(this, 1);
          }
          set total(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get hash() {
            return pb_1.Message.getField(this, 2);
          }
          set hash(value) {
            pb_1.Message.setField(this, 2, value);
          }
          static fromObject(data) {
            const message = new PartSetHeader({});
            if (data.total != null) {
              message.total = data.total;
            }
            if (data.hash != null) {
              message.hash = data.hash;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.total != null) {
              data.total = this.total;
            }
            if (this.hash != null) {
              data.hash = this.hash;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.total !== void 0)
              writer.writeUint32(1, this.total);
            if (this.hash !== void 0)
              writer.writeBytes(2, this.hash);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PartSetHeader();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.total = reader.readUint32();
                  break;
                case 2:
                  message.hash = reader.readBytes();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return PartSetHeader.deserialize(bytes);
          }
        }
        types2.PartSetHeader = PartSetHeader;
        class Part extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("index" in data && data.index != void 0) {
                this.index = data.index;
              }
              if ("bytes" in data && data.bytes != void 0) {
                this.bytes = data.bytes;
              }
              if ("proof" in data && data.proof != void 0) {
                this.proof = data.proof;
              }
            }
          }
          get index() {
            return pb_1.Message.getField(this, 1);
          }
          set index(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get bytes() {
            return pb_1.Message.getField(this, 2);
          }
          set bytes(value) {
            pb_1.Message.setField(this, 2, value);
          }
          get proof() {
            return pb_1.Message.getWrapperField(this, dependency_3.tendermint.crypto.Proof, 3);
          }
          set proof(value) {
            pb_1.Message.setWrapperField(this, 3, value);
          }
          static fromObject(data) {
            const message = new Part({});
            if (data.index != null) {
              message.index = data.index;
            }
            if (data.bytes != null) {
              message.bytes = data.bytes;
            }
            if (data.proof != null) {
              message.proof = dependency_3.tendermint.crypto.Proof.fromObject(data.proof);
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.index != null) {
              data.index = this.index;
            }
            if (this.bytes != null) {
              data.bytes = this.bytes;
            }
            if (this.proof != null) {
              data.proof = this.proof.toObject();
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.index !== void 0)
              writer.writeUint32(1, this.index);
            if (this.bytes !== void 0)
              writer.writeBytes(2, this.bytes);
            if (this.proof !== void 0)
              writer.writeMessage(3, this.proof, () => this.proof.serialize(writer));
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Part();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.index = reader.readUint32();
                  break;
                case 2:
                  message.bytes = reader.readBytes();
                  break;
                case 3:
                  reader.readMessage(message.proof, () => message.proof = dependency_3.tendermint.crypto.Proof.deserialize(reader));
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return Part.deserialize(bytes);
          }
        }
        types2.Part = Part;
        class BlockID extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("hash" in data && data.hash != void 0) {
                this.hash = data.hash;
              }
              if ("part_set_header" in data && data.part_set_header != void 0) {
                this.part_set_header = data.part_set_header;
              }
            }
          }
          get hash() {
            return pb_1.Message.getField(this, 1);
          }
          set hash(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get part_set_header() {
            return pb_1.Message.getWrapperField(this, PartSetHeader, 2);
          }
          set part_set_header(value) {
            pb_1.Message.setWrapperField(this, 2, value);
          }
          static fromObject(data) {
            const message = new BlockID({});
            if (data.hash != null) {
              message.hash = data.hash;
            }
            if (data.part_set_header != null) {
              message.part_set_header = PartSetHeader.fromObject(data.part_set_header);
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.hash != null) {
              data.hash = this.hash;
            }
            if (this.part_set_header != null) {
              data.part_set_header = this.part_set_header.toObject();
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.hash !== void 0)
              writer.writeBytes(1, this.hash);
            if (this.part_set_header !== void 0)
              writer.writeMessage(2, this.part_set_header, () => this.part_set_header.serialize(writer));
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new BlockID();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.hash = reader.readBytes();
                  break;
                case 2:
                  reader.readMessage(message.part_set_header, () => message.part_set_header = PartSetHeader.deserialize(reader));
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return BlockID.deserialize(bytes);
          }
        }
        types2.BlockID = BlockID;
        class Header extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("version" in data && data.version != void 0) {
                this.version = data.version;
              }
              if ("chain_id" in data && data.chain_id != void 0) {
                this.chain_id = data.chain_id;
              }
              if ("height" in data && data.height != void 0) {
                this.height = data.height;
              }
              if ("time" in data && data.time != void 0) {
                this.time = data.time;
              }
              if ("last_block_id" in data && data.last_block_id != void 0) {
                this.last_block_id = data.last_block_id;
              }
              if ("last_commit_hash" in data && data.last_commit_hash != void 0) {
                this.last_commit_hash = data.last_commit_hash;
              }
              if ("data_hash" in data && data.data_hash != void 0) {
                this.data_hash = data.data_hash;
              }
              if ("validators_hash" in data && data.validators_hash != void 0) {
                this.validators_hash = data.validators_hash;
              }
              if ("next_validators_hash" in data && data.next_validators_hash != void 0) {
                this.next_validators_hash = data.next_validators_hash;
              }
              if ("consensus_hash" in data && data.consensus_hash != void 0) {
                this.consensus_hash = data.consensus_hash;
              }
              if ("app_hash" in data && data.app_hash != void 0) {
                this.app_hash = data.app_hash;
              }
              if ("last_results_hash" in data && data.last_results_hash != void 0) {
                this.last_results_hash = data.last_results_hash;
              }
              if ("evidence_hash" in data && data.evidence_hash != void 0) {
                this.evidence_hash = data.evidence_hash;
              }
              if ("proposer_address" in data && data.proposer_address != void 0) {
                this.proposer_address = data.proposer_address;
              }
            }
          }
          get version() {
            return pb_1.Message.getWrapperField(this, dependency_4.tendermint.version.Consensus, 1);
          }
          set version(value) {
            pb_1.Message.setWrapperField(this, 1, value);
          }
          get chain_id() {
            return pb_1.Message.getField(this, 2);
          }
          set chain_id(value) {
            pb_1.Message.setField(this, 2, value);
          }
          get height() {
            return pb_1.Message.getField(this, 3);
          }
          set height(value) {
            pb_1.Message.setField(this, 3, value);
          }
          get time() {
            return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Timestamp, 4);
          }
          set time(value) {
            pb_1.Message.setWrapperField(this, 4, value);
          }
          get last_block_id() {
            return pb_1.Message.getWrapperField(this, BlockID, 5);
          }
          set last_block_id(value) {
            pb_1.Message.setWrapperField(this, 5, value);
          }
          get last_commit_hash() {
            return pb_1.Message.getField(this, 6);
          }
          set last_commit_hash(value) {
            pb_1.Message.setField(this, 6, value);
          }
          get data_hash() {
            return pb_1.Message.getField(this, 7);
          }
          set data_hash(value) {
            pb_1.Message.setField(this, 7, value);
          }
          get validators_hash() {
            return pb_1.Message.getField(this, 8);
          }
          set validators_hash(value) {
            pb_1.Message.setField(this, 8, value);
          }
          get next_validators_hash() {
            return pb_1.Message.getField(this, 9);
          }
          set next_validators_hash(value) {
            pb_1.Message.setField(this, 9, value);
          }
          get consensus_hash() {
            return pb_1.Message.getField(this, 10);
          }
          set consensus_hash(value) {
            pb_1.Message.setField(this, 10, value);
          }
          get app_hash() {
            return pb_1.Message.getField(this, 11);
          }
          set app_hash(value) {
            pb_1.Message.setField(this, 11, value);
          }
          get last_results_hash() {
            return pb_1.Message.getField(this, 12);
          }
          set last_results_hash(value) {
            pb_1.Message.setField(this, 12, value);
          }
          get evidence_hash() {
            return pb_1.Message.getField(this, 13);
          }
          set evidence_hash(value) {
            pb_1.Message.setField(this, 13, value);
          }
          get proposer_address() {
            return pb_1.Message.getField(this, 14);
          }
          set proposer_address(value) {
            pb_1.Message.setField(this, 14, value);
          }
          static fromObject(data) {
            const message = new Header({});
            if (data.version != null) {
              message.version = dependency_4.tendermint.version.Consensus.fromObject(data.version);
            }
            if (data.chain_id != null) {
              message.chain_id = data.chain_id;
            }
            if (data.height != null) {
              message.height = data.height;
            }
            if (data.time != null) {
              message.time = dependency_2.google.protobuf.Timestamp.fromObject(data.time);
            }
            if (data.last_block_id != null) {
              message.last_block_id = BlockID.fromObject(data.last_block_id);
            }
            if (data.last_commit_hash != null) {
              message.last_commit_hash = data.last_commit_hash;
            }
            if (data.data_hash != null) {
              message.data_hash = data.data_hash;
            }
            if (data.validators_hash != null) {
              message.validators_hash = data.validators_hash;
            }
            if (data.next_validators_hash != null) {
              message.next_validators_hash = data.next_validators_hash;
            }
            if (data.consensus_hash != null) {
              message.consensus_hash = data.consensus_hash;
            }
            if (data.app_hash != null) {
              message.app_hash = data.app_hash;
            }
            if (data.last_results_hash != null) {
              message.last_results_hash = data.last_results_hash;
            }
            if (data.evidence_hash != null) {
              message.evidence_hash = data.evidence_hash;
            }
            if (data.proposer_address != null) {
              message.proposer_address = data.proposer_address;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.version != null) {
              data.version = this.version.toObject();
            }
            if (this.chain_id != null) {
              data.chain_id = this.chain_id;
            }
            if (this.height != null) {
              data.height = this.height;
            }
            if (this.time != null) {
              data.time = this.time.toObject();
            }
            if (this.last_block_id != null) {
              data.last_block_id = this.last_block_id.toObject();
            }
            if (this.last_commit_hash != null) {
              data.last_commit_hash = this.last_commit_hash;
            }
            if (this.data_hash != null) {
              data.data_hash = this.data_hash;
            }
            if (this.validators_hash != null) {
              data.validators_hash = this.validators_hash;
            }
            if (this.next_validators_hash != null) {
              data.next_validators_hash = this.next_validators_hash;
            }
            if (this.consensus_hash != null) {
              data.consensus_hash = this.consensus_hash;
            }
            if (this.app_hash != null) {
              data.app_hash = this.app_hash;
            }
            if (this.last_results_hash != null) {
              data.last_results_hash = this.last_results_hash;
            }
            if (this.evidence_hash != null) {
              data.evidence_hash = this.evidence_hash;
            }
            if (this.proposer_address != null) {
              data.proposer_address = this.proposer_address;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.version !== void 0)
              writer.writeMessage(1, this.version, () => this.version.serialize(writer));
            if (typeof this.chain_id === "string" && this.chain_id.length)
              writer.writeString(2, this.chain_id);
            if (this.height !== void 0)
              writer.writeInt64(3, this.height);
            if (this.time !== void 0)
              writer.writeMessage(4, this.time, () => this.time.serialize(writer));
            if (this.last_block_id !== void 0)
              writer.writeMessage(5, this.last_block_id, () => this.last_block_id.serialize(writer));
            if (this.last_commit_hash !== void 0)
              writer.writeBytes(6, this.last_commit_hash);
            if (this.data_hash !== void 0)
              writer.writeBytes(7, this.data_hash);
            if (this.validators_hash !== void 0)
              writer.writeBytes(8, this.validators_hash);
            if (this.next_validators_hash !== void 0)
              writer.writeBytes(9, this.next_validators_hash);
            if (this.consensus_hash !== void 0)
              writer.writeBytes(10, this.consensus_hash);
            if (this.app_hash !== void 0)
              writer.writeBytes(11, this.app_hash);
            if (this.last_results_hash !== void 0)
              writer.writeBytes(12, this.last_results_hash);
            if (this.evidence_hash !== void 0)
              writer.writeBytes(13, this.evidence_hash);
            if (this.proposer_address !== void 0)
              writer.writeBytes(14, this.proposer_address);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Header();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  reader.readMessage(message.version, () => message.version = dependency_4.tendermint.version.Consensus.deserialize(reader));
                  break;
                case 2:
                  message.chain_id = reader.readString();
                  break;
                case 3:
                  message.height = reader.readInt64();
                  break;
                case 4:
                  reader.readMessage(message.time, () => message.time = dependency_2.google.protobuf.Timestamp.deserialize(reader));
                  break;
                case 5:
                  reader.readMessage(message.last_block_id, () => message.last_block_id = BlockID.deserialize(reader));
                  break;
                case 6:
                  message.last_commit_hash = reader.readBytes();
                  break;
                case 7:
                  message.data_hash = reader.readBytes();
                  break;
                case 8:
                  message.validators_hash = reader.readBytes();
                  break;
                case 9:
                  message.next_validators_hash = reader.readBytes();
                  break;
                case 10:
                  message.consensus_hash = reader.readBytes();
                  break;
                case 11:
                  message.app_hash = reader.readBytes();
                  break;
                case 12:
                  message.last_results_hash = reader.readBytes();
                  break;
                case 13:
                  message.evidence_hash = reader.readBytes();
                  break;
                case 14:
                  message.proposer_address = reader.readBytes();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return Header.deserialize(bytes);
          }
        }
        types2.Header = Header;
        class Data extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("txs" in data && data.txs != void 0) {
                this.txs = data.txs;
              }
            }
          }
          get txs() {
            return pb_1.Message.getField(this, 1);
          }
          set txs(value) {
            pb_1.Message.setField(this, 1, value);
          }
          static fromObject(data) {
            const message = new Data({});
            if (data.txs != null) {
              message.txs = data.txs;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.txs != null) {
              data.txs = this.txs;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.txs !== void 0)
              writer.writeRepeatedBytes(1, this.txs);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Data();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  pb_1.Message.addToRepeatedField(message, 1, reader.readBytes());
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return Data.deserialize(bytes);
          }
        }
        types2.Data = Data;
        class Vote extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("type" in data && data.type != void 0) {
                this.type = data.type;
              }
              if ("height" in data && data.height != void 0) {
                this.height = data.height;
              }
              if ("round" in data && data.round != void 0) {
                this.round = data.round;
              }
              if ("block_id" in data && data.block_id != void 0) {
                this.block_id = data.block_id;
              }
              if ("timestamp" in data && data.timestamp != void 0) {
                this.timestamp = data.timestamp;
              }
              if ("validator_address" in data && data.validator_address != void 0) {
                this.validator_address = data.validator_address;
              }
              if ("validator_index" in data && data.validator_index != void 0) {
                this.validator_index = data.validator_index;
              }
              if ("signature" in data && data.signature != void 0) {
                this.signature = data.signature;
              }
            }
          }
          get type() {
            return pb_1.Message.getField(this, 1);
          }
          set type(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get height() {
            return pb_1.Message.getField(this, 2);
          }
          set height(value) {
            pb_1.Message.setField(this, 2, value);
          }
          get round() {
            return pb_1.Message.getField(this, 3);
          }
          set round(value) {
            pb_1.Message.setField(this, 3, value);
          }
          get block_id() {
            return pb_1.Message.getWrapperField(this, BlockID, 4);
          }
          set block_id(value) {
            pb_1.Message.setWrapperField(this, 4, value);
          }
          get timestamp() {
            return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Timestamp, 5);
          }
          set timestamp(value) {
            pb_1.Message.setWrapperField(this, 5, value);
          }
          get validator_address() {
            return pb_1.Message.getField(this, 6);
          }
          set validator_address(value) {
            pb_1.Message.setField(this, 6, value);
          }
          get validator_index() {
            return pb_1.Message.getField(this, 7);
          }
          set validator_index(value) {
            pb_1.Message.setField(this, 7, value);
          }
          get signature() {
            return pb_1.Message.getField(this, 8);
          }
          set signature(value) {
            pb_1.Message.setField(this, 8, value);
          }
          static fromObject(data) {
            const message = new Vote({});
            if (data.type != null) {
              message.type = data.type;
            }
            if (data.height != null) {
              message.height = data.height;
            }
            if (data.round != null) {
              message.round = data.round;
            }
            if (data.block_id != null) {
              message.block_id = BlockID.fromObject(data.block_id);
            }
            if (data.timestamp != null) {
              message.timestamp = dependency_2.google.protobuf.Timestamp.fromObject(data.timestamp);
            }
            if (data.validator_address != null) {
              message.validator_address = data.validator_address;
            }
            if (data.validator_index != null) {
              message.validator_index = data.validator_index;
            }
            if (data.signature != null) {
              message.signature = data.signature;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.type != null) {
              data.type = this.type;
            }
            if (this.height != null) {
              data.height = this.height;
            }
            if (this.round != null) {
              data.round = this.round;
            }
            if (this.block_id != null) {
              data.block_id = this.block_id.toObject();
            }
            if (this.timestamp != null) {
              data.timestamp = this.timestamp.toObject();
            }
            if (this.validator_address != null) {
              data.validator_address = this.validator_address;
            }
            if (this.validator_index != null) {
              data.validator_index = this.validator_index;
            }
            if (this.signature != null) {
              data.signature = this.signature;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.type !== void 0)
              writer.writeEnum(1, this.type);
            if (this.height !== void 0)
              writer.writeInt64(2, this.height);
            if (this.round !== void 0)
              writer.writeInt32(3, this.round);
            if (this.block_id !== void 0)
              writer.writeMessage(4, this.block_id, () => this.block_id.serialize(writer));
            if (this.timestamp !== void 0)
              writer.writeMessage(5, this.timestamp, () => this.timestamp.serialize(writer));
            if (this.validator_address !== void 0)
              writer.writeBytes(6, this.validator_address);
            if (this.validator_index !== void 0)
              writer.writeInt32(7, this.validator_index);
            if (this.signature !== void 0)
              writer.writeBytes(8, this.signature);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Vote();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.type = reader.readEnum();
                  break;
                case 2:
                  message.height = reader.readInt64();
                  break;
                case 3:
                  message.round = reader.readInt32();
                  break;
                case 4:
                  reader.readMessage(message.block_id, () => message.block_id = BlockID.deserialize(reader));
                  break;
                case 5:
                  reader.readMessage(message.timestamp, () => message.timestamp = dependency_2.google.protobuf.Timestamp.deserialize(reader));
                  break;
                case 6:
                  message.validator_address = reader.readBytes();
                  break;
                case 7:
                  message.validator_index = reader.readInt32();
                  break;
                case 8:
                  message.signature = reader.readBytes();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return Vote.deserialize(bytes);
          }
        }
        types2.Vote = Vote;
        class Commit extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("height" in data && data.height != void 0) {
                this.height = data.height;
              }
              if ("round" in data && data.round != void 0) {
                this.round = data.round;
              }
              if ("block_id" in data && data.block_id != void 0) {
                this.block_id = data.block_id;
              }
              if ("signatures" in data && data.signatures != void 0) {
                this.signatures = data.signatures;
              }
            }
          }
          get height() {
            return pb_1.Message.getField(this, 1);
          }
          set height(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get round() {
            return pb_1.Message.getField(this, 2);
          }
          set round(value) {
            pb_1.Message.setField(this, 2, value);
          }
          get block_id() {
            return pb_1.Message.getWrapperField(this, BlockID, 3);
          }
          set block_id(value) {
            pb_1.Message.setWrapperField(this, 3, value);
          }
          get signatures() {
            return pb_1.Message.getRepeatedWrapperField(this, CommitSig, 4);
          }
          set signatures(value) {
            pb_1.Message.setRepeatedWrapperField(this, 4, value);
          }
          static fromObject(data) {
            const message = new Commit({});
            if (data.height != null) {
              message.height = data.height;
            }
            if (data.round != null) {
              message.round = data.round;
            }
            if (data.block_id != null) {
              message.block_id = BlockID.fromObject(data.block_id);
            }
            if (data.signatures != null) {
              message.signatures = data.signatures.map((item) => CommitSig.fromObject(item));
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.height != null) {
              data.height = this.height;
            }
            if (this.round != null) {
              data.round = this.round;
            }
            if (this.block_id != null) {
              data.block_id = this.block_id.toObject();
            }
            if (this.signatures != null) {
              data.signatures = this.signatures.map((item) => item.toObject());
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.height !== void 0)
              writer.writeInt64(1, this.height);
            if (this.round !== void 0)
              writer.writeInt32(2, this.round);
            if (this.block_id !== void 0)
              writer.writeMessage(3, this.block_id, () => this.block_id.serialize(writer));
            if (this.signatures !== void 0)
              writer.writeRepeatedMessage(4, this.signatures, (item) => item.serialize(writer));
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Commit();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.height = reader.readInt64();
                  break;
                case 2:
                  message.round = reader.readInt32();
                  break;
                case 3:
                  reader.readMessage(message.block_id, () => message.block_id = BlockID.deserialize(reader));
                  break;
                case 4:
                  reader.readMessage(message.signatures, () => pb_1.Message.addToRepeatedWrapperField(message, 4, CommitSig.deserialize(reader), CommitSig));
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return Commit.deserialize(bytes);
          }
        }
        types2.Commit = Commit;
        class CommitSig extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("block_id_flag" in data && data.block_id_flag != void 0) {
                this.block_id_flag = data.block_id_flag;
              }
              if ("validator_address" in data && data.validator_address != void 0) {
                this.validator_address = data.validator_address;
              }
              if ("timestamp" in data && data.timestamp != void 0) {
                this.timestamp = data.timestamp;
              }
              if ("signature" in data && data.signature != void 0) {
                this.signature = data.signature;
              }
            }
          }
          get block_id_flag() {
            return pb_1.Message.getField(this, 1);
          }
          set block_id_flag(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get validator_address() {
            return pb_1.Message.getField(this, 2);
          }
          set validator_address(value) {
            pb_1.Message.setField(this, 2, value);
          }
          get timestamp() {
            return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Timestamp, 3);
          }
          set timestamp(value) {
            pb_1.Message.setWrapperField(this, 3, value);
          }
          get signature() {
            return pb_1.Message.getField(this, 4);
          }
          set signature(value) {
            pb_1.Message.setField(this, 4, value);
          }
          static fromObject(data) {
            const message = new CommitSig({});
            if (data.block_id_flag != null) {
              message.block_id_flag = data.block_id_flag;
            }
            if (data.validator_address != null) {
              message.validator_address = data.validator_address;
            }
            if (data.timestamp != null) {
              message.timestamp = dependency_2.google.protobuf.Timestamp.fromObject(data.timestamp);
            }
            if (data.signature != null) {
              message.signature = data.signature;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.block_id_flag != null) {
              data.block_id_flag = this.block_id_flag;
            }
            if (this.validator_address != null) {
              data.validator_address = this.validator_address;
            }
            if (this.timestamp != null) {
              data.timestamp = this.timestamp.toObject();
            }
            if (this.signature != null) {
              data.signature = this.signature;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.block_id_flag !== void 0)
              writer.writeEnum(1, this.block_id_flag);
            if (this.validator_address !== void 0)
              writer.writeBytes(2, this.validator_address);
            if (this.timestamp !== void 0)
              writer.writeMessage(3, this.timestamp, () => this.timestamp.serialize(writer));
            if (this.signature !== void 0)
              writer.writeBytes(4, this.signature);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CommitSig();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.block_id_flag = reader.readEnum();
                  break;
                case 2:
                  message.validator_address = reader.readBytes();
                  break;
                case 3:
                  reader.readMessage(message.timestamp, () => message.timestamp = dependency_2.google.protobuf.Timestamp.deserialize(reader));
                  break;
                case 4:
                  message.signature = reader.readBytes();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return CommitSig.deserialize(bytes);
          }
        }
        types2.CommitSig = CommitSig;
        class Proposal extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("type" in data && data.type != void 0) {
                this.type = data.type;
              }
              if ("height" in data && data.height != void 0) {
                this.height = data.height;
              }
              if ("round" in data && data.round != void 0) {
                this.round = data.round;
              }
              if ("pol_round" in data && data.pol_round != void 0) {
                this.pol_round = data.pol_round;
              }
              if ("block_id" in data && data.block_id != void 0) {
                this.block_id = data.block_id;
              }
              if ("timestamp" in data && data.timestamp != void 0) {
                this.timestamp = data.timestamp;
              }
              if ("signature" in data && data.signature != void 0) {
                this.signature = data.signature;
              }
            }
          }
          get type() {
            return pb_1.Message.getField(this, 1);
          }
          set type(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get height() {
            return pb_1.Message.getField(this, 2);
          }
          set height(value) {
            pb_1.Message.setField(this, 2, value);
          }
          get round() {
            return pb_1.Message.getField(this, 3);
          }
          set round(value) {
            pb_1.Message.setField(this, 3, value);
          }
          get pol_round() {
            return pb_1.Message.getField(this, 4);
          }
          set pol_round(value) {
            pb_1.Message.setField(this, 4, value);
          }
          get block_id() {
            return pb_1.Message.getWrapperField(this, BlockID, 5);
          }
          set block_id(value) {
            pb_1.Message.setWrapperField(this, 5, value);
          }
          get timestamp() {
            return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Timestamp, 6);
          }
          set timestamp(value) {
            pb_1.Message.setWrapperField(this, 6, value);
          }
          get signature() {
            return pb_1.Message.getField(this, 7);
          }
          set signature(value) {
            pb_1.Message.setField(this, 7, value);
          }
          static fromObject(data) {
            const message = new Proposal({});
            if (data.type != null) {
              message.type = data.type;
            }
            if (data.height != null) {
              message.height = data.height;
            }
            if (data.round != null) {
              message.round = data.round;
            }
            if (data.pol_round != null) {
              message.pol_round = data.pol_round;
            }
            if (data.block_id != null) {
              message.block_id = BlockID.fromObject(data.block_id);
            }
            if (data.timestamp != null) {
              message.timestamp = dependency_2.google.protobuf.Timestamp.fromObject(data.timestamp);
            }
            if (data.signature != null) {
              message.signature = data.signature;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.type != null) {
              data.type = this.type;
            }
            if (this.height != null) {
              data.height = this.height;
            }
            if (this.round != null) {
              data.round = this.round;
            }
            if (this.pol_round != null) {
              data.pol_round = this.pol_round;
            }
            if (this.block_id != null) {
              data.block_id = this.block_id.toObject();
            }
            if (this.timestamp != null) {
              data.timestamp = this.timestamp.toObject();
            }
            if (this.signature != null) {
              data.signature = this.signature;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.type !== void 0)
              writer.writeEnum(1, this.type);
            if (this.height !== void 0)
              writer.writeInt64(2, this.height);
            if (this.round !== void 0)
              writer.writeInt32(3, this.round);
            if (this.pol_round !== void 0)
              writer.writeInt32(4, this.pol_round);
            if (this.block_id !== void 0)
              writer.writeMessage(5, this.block_id, () => this.block_id.serialize(writer));
            if (this.timestamp !== void 0)
              writer.writeMessage(6, this.timestamp, () => this.timestamp.serialize(writer));
            if (this.signature !== void 0)
              writer.writeBytes(7, this.signature);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Proposal();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.type = reader.readEnum();
                  break;
                case 2:
                  message.height = reader.readInt64();
                  break;
                case 3:
                  message.round = reader.readInt32();
                  break;
                case 4:
                  message.pol_round = reader.readInt32();
                  break;
                case 5:
                  reader.readMessage(message.block_id, () => message.block_id = BlockID.deserialize(reader));
                  break;
                case 6:
                  reader.readMessage(message.timestamp, () => message.timestamp = dependency_2.google.protobuf.Timestamp.deserialize(reader));
                  break;
                case 7:
                  message.signature = reader.readBytes();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return Proposal.deserialize(bytes);
          }
        }
        types2.Proposal = Proposal;
        class SignedHeader extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("header" in data && data.header != void 0) {
                this.header = data.header;
              }
              if ("commit" in data && data.commit != void 0) {
                this.commit = data.commit;
              }
            }
          }
          get header() {
            return pb_1.Message.getWrapperField(this, Header, 1);
          }
          set header(value) {
            pb_1.Message.setWrapperField(this, 1, value);
          }
          get commit() {
            return pb_1.Message.getWrapperField(this, Commit, 2);
          }
          set commit(value) {
            pb_1.Message.setWrapperField(this, 2, value);
          }
          static fromObject(data) {
            const message = new SignedHeader({});
            if (data.header != null) {
              message.header = Header.fromObject(data.header);
            }
            if (data.commit != null) {
              message.commit = Commit.fromObject(data.commit);
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.header != null) {
              data.header = this.header.toObject();
            }
            if (this.commit != null) {
              data.commit = this.commit.toObject();
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.header !== void 0)
              writer.writeMessage(1, this.header, () => this.header.serialize(writer));
            if (this.commit !== void 0)
              writer.writeMessage(2, this.commit, () => this.commit.serialize(writer));
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SignedHeader();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  reader.readMessage(message.header, () => message.header = Header.deserialize(reader));
                  break;
                case 2:
                  reader.readMessage(message.commit, () => message.commit = Commit.deserialize(reader));
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return SignedHeader.deserialize(bytes);
          }
        }
        types2.SignedHeader = SignedHeader;
        class LightBlock extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("signed_header" in data && data.signed_header != void 0) {
                this.signed_header = data.signed_header;
              }
              if ("validator_set" in data && data.validator_set != void 0) {
                this.validator_set = data.validator_set;
              }
            }
          }
          get signed_header() {
            return pb_1.Message.getWrapperField(this, SignedHeader, 1);
          }
          set signed_header(value) {
            pb_1.Message.setWrapperField(this, 1, value);
          }
          get validator_set() {
            return pb_1.Message.getWrapperField(this, dependency_5.tendermint.types.ValidatorSet, 2);
          }
          set validator_set(value) {
            pb_1.Message.setWrapperField(this, 2, value);
          }
          static fromObject(data) {
            const message = new LightBlock({});
            if (data.signed_header != null) {
              message.signed_header = SignedHeader.fromObject(data.signed_header);
            }
            if (data.validator_set != null) {
              message.validator_set = dependency_5.tendermint.types.ValidatorSet.fromObject(data.validator_set);
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.signed_header != null) {
              data.signed_header = this.signed_header.toObject();
            }
            if (this.validator_set != null) {
              data.validator_set = this.validator_set.toObject();
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.signed_header !== void 0)
              writer.writeMessage(1, this.signed_header, () => this.signed_header.serialize(writer));
            if (this.validator_set !== void 0)
              writer.writeMessage(2, this.validator_set, () => this.validator_set.serialize(writer));
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new LightBlock();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  reader.readMessage(message.signed_header, () => message.signed_header = SignedHeader.deserialize(reader));
                  break;
                case 2:
                  reader.readMessage(message.validator_set, () => message.validator_set = dependency_5.tendermint.types.ValidatorSet.deserialize(reader));
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return LightBlock.deserialize(bytes);
          }
        }
        types2.LightBlock = LightBlock;
        class BlockMeta extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("block_id" in data && data.block_id != void 0) {
                this.block_id = data.block_id;
              }
              if ("block_size" in data && data.block_size != void 0) {
                this.block_size = data.block_size;
              }
              if ("header" in data && data.header != void 0) {
                this.header = data.header;
              }
              if ("num_txs" in data && data.num_txs != void 0) {
                this.num_txs = data.num_txs;
              }
            }
          }
          get block_id() {
            return pb_1.Message.getWrapperField(this, BlockID, 1);
          }
          set block_id(value) {
            pb_1.Message.setWrapperField(this, 1, value);
          }
          get block_size() {
            return pb_1.Message.getField(this, 2);
          }
          set block_size(value) {
            pb_1.Message.setField(this, 2, value);
          }
          get header() {
            return pb_1.Message.getWrapperField(this, Header, 3);
          }
          set header(value) {
            pb_1.Message.setWrapperField(this, 3, value);
          }
          get num_txs() {
            return pb_1.Message.getField(this, 4);
          }
          set num_txs(value) {
            pb_1.Message.setField(this, 4, value);
          }
          static fromObject(data) {
            const message = new BlockMeta({});
            if (data.block_id != null) {
              message.block_id = BlockID.fromObject(data.block_id);
            }
            if (data.block_size != null) {
              message.block_size = data.block_size;
            }
            if (data.header != null) {
              message.header = Header.fromObject(data.header);
            }
            if (data.num_txs != null) {
              message.num_txs = data.num_txs;
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.block_id != null) {
              data.block_id = this.block_id.toObject();
            }
            if (this.block_size != null) {
              data.block_size = this.block_size;
            }
            if (this.header != null) {
              data.header = this.header.toObject();
            }
            if (this.num_txs != null) {
              data.num_txs = this.num_txs;
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.block_id !== void 0)
              writer.writeMessage(1, this.block_id, () => this.block_id.serialize(writer));
            if (this.block_size !== void 0)
              writer.writeInt64(2, this.block_size);
            if (this.header !== void 0)
              writer.writeMessage(3, this.header, () => this.header.serialize(writer));
            if (this.num_txs !== void 0)
              writer.writeInt64(4, this.num_txs);
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new BlockMeta();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  reader.readMessage(message.block_id, () => message.block_id = BlockID.deserialize(reader));
                  break;
                case 2:
                  message.block_size = reader.readInt64();
                  break;
                case 3:
                  reader.readMessage(message.header, () => message.header = Header.deserialize(reader));
                  break;
                case 4:
                  message.num_txs = reader.readInt64();
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return BlockMeta.deserialize(bytes);
          }
        }
        types2.BlockMeta = BlockMeta;
        class TxProof extends pb_1.Message {
          constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
              if ("root_hash" in data && data.root_hash != void 0) {
                this.root_hash = data.root_hash;
              }
              if ("data" in data && data.data != void 0) {
                this.data = data.data;
              }
              if ("proof" in data && data.proof != void 0) {
                this.proof = data.proof;
              }
            }
          }
          get root_hash() {
            return pb_1.Message.getField(this, 1);
          }
          set root_hash(value) {
            pb_1.Message.setField(this, 1, value);
          }
          get data() {
            return pb_1.Message.getField(this, 2);
          }
          set data(value) {
            pb_1.Message.setField(this, 2, value);
          }
          get proof() {
            return pb_1.Message.getWrapperField(this, dependency_3.tendermint.crypto.Proof, 3);
          }
          set proof(value) {
            pb_1.Message.setWrapperField(this, 3, value);
          }
          static fromObject(data) {
            const message = new TxProof({});
            if (data.root_hash != null) {
              message.root_hash = data.root_hash;
            }
            if (data.data != null) {
              message.data = data.data;
            }
            if (data.proof != null) {
              message.proof = dependency_3.tendermint.crypto.Proof.fromObject(data.proof);
            }
            return message;
          }
          toObject() {
            const data = {};
            if (this.root_hash != null) {
              data.root_hash = this.root_hash;
            }
            if (this.data != null) {
              data.data = this.data;
            }
            if (this.proof != null) {
              data.proof = this.proof.toObject();
            }
            return data;
          }
          serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.root_hash !== void 0)
              writer.writeBytes(1, this.root_hash);
            if (this.data !== void 0)
              writer.writeBytes(2, this.data);
            if (this.proof !== void 0)
              writer.writeMessage(3, this.proof, () => this.proof.serialize(writer));
            if (!w)
              return writer.getResultBuffer();
          }
          static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TxProof();
            while (reader.nextField()) {
              if (reader.isEndGroup())
                break;
              switch (reader.getFieldNumber()) {
                case 1:
                  message.root_hash = reader.readBytes();
                  break;
                case 2:
                  message.data = reader.readBytes();
                  break;
                case 3:
                  reader.readMessage(message.proof, () => message.proof = dependency_3.tendermint.crypto.Proof.deserialize(reader));
                  break;
                default:
                  reader.skipField();
              }
            }
            return message;
          }
          serializeBinary() {
            return this.serialize();
          }
          static deserializeBinary(bytes) {
            return TxProof.deserialize(bytes);
          }
        }
        types2.TxProof = TxProof;
      })(types = tendermint2.types || (tendermint2.types = {}));
    })(tendermint = exports2.tendermint || (exports2.tendermint = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/cosmos/staking/v1beta1/staking.js
var require_staking = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/cosmos/staking/v1beta1/staking.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.cosmos = void 0;
    var dependency_2 = __importStar(require_any());
    var dependency_3 = __importStar(require_duration());
    var dependency_4 = __importStar(require_timestamp());
    var dependency_6 = __importStar(require_coin());
    var dependency_7 = __importStar(require_types2());
    var pb_1 = __importStar(require_google_protobuf());
    var cosmos;
    (function(cosmos2) {
      var staking;
      (function(staking2) {
        var v1beta1;
        (function(v1beta12) {
          let BondStatus;
          (function(BondStatus2) {
            BondStatus2[BondStatus2["BOND_STATUS_UNSPECIFIED"] = 0] = "BOND_STATUS_UNSPECIFIED";
            BondStatus2[BondStatus2["BOND_STATUS_UNBONDED"] = 1] = "BOND_STATUS_UNBONDED";
            BondStatus2[BondStatus2["BOND_STATUS_UNBONDING"] = 2] = "BOND_STATUS_UNBONDING";
            BondStatus2[BondStatus2["BOND_STATUS_BONDED"] = 3] = "BOND_STATUS_BONDED";
          })(BondStatus = v1beta12.BondStatus || (v1beta12.BondStatus = {}));
          class HistoricalInfo extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("header" in data && data.header != void 0) {
                  this.header = data.header;
                }
                if ("valset" in data && data.valset != void 0) {
                  this.valset = data.valset;
                }
              }
            }
            get header() {
              return pb_1.Message.getWrapperField(this, dependency_7.tendermint.types.Header, 1);
            }
            set header(value) {
              pb_1.Message.setWrapperField(this, 1, value);
            }
            get valset() {
              return pb_1.Message.getRepeatedWrapperField(this, Validator, 2);
            }
            set valset(value) {
              pb_1.Message.setRepeatedWrapperField(this, 2, value);
            }
            static fromObject(data) {
              const message = new HistoricalInfo({});
              if (data.header != null) {
                message.header = dependency_7.tendermint.types.Header.fromObject(data.header);
              }
              if (data.valset != null) {
                message.valset = data.valset.map((item) => Validator.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.header != null) {
                data.header = this.header.toObject();
              }
              if (this.valset != null) {
                data.valset = this.valset.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.header !== void 0)
                writer.writeMessage(1, this.header, () => this.header.serialize(writer));
              if (this.valset !== void 0)
                writer.writeRepeatedMessage(2, this.valset, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new HistoricalInfo();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.header, () => message.header = dependency_7.tendermint.types.Header.deserialize(reader));
                    break;
                  case 2:
                    reader.readMessage(message.valset, () => pb_1.Message.addToRepeatedWrapperField(message, 2, Validator.deserialize(reader), Validator));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return HistoricalInfo.deserialize(bytes);
            }
          }
          v1beta12.HistoricalInfo = HistoricalInfo;
          class CommissionRates extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("rate" in data && data.rate != void 0) {
                  this.rate = data.rate;
                }
                if ("max_rate" in data && data.max_rate != void 0) {
                  this.max_rate = data.max_rate;
                }
                if ("max_change_rate" in data && data.max_change_rate != void 0) {
                  this.max_change_rate = data.max_change_rate;
                }
              }
            }
            get rate() {
              return pb_1.Message.getField(this, 1);
            }
            set rate(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get max_rate() {
              return pb_1.Message.getField(this, 2);
            }
            set max_rate(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get max_change_rate() {
              return pb_1.Message.getField(this, 3);
            }
            set max_change_rate(value) {
              pb_1.Message.setField(this, 3, value);
            }
            static fromObject(data) {
              const message = new CommissionRates({});
              if (data.rate != null) {
                message.rate = data.rate;
              }
              if (data.max_rate != null) {
                message.max_rate = data.max_rate;
              }
              if (data.max_change_rate != null) {
                message.max_change_rate = data.max_change_rate;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.rate != null) {
                data.rate = this.rate;
              }
              if (this.max_rate != null) {
                data.max_rate = this.max_rate;
              }
              if (this.max_change_rate != null) {
                data.max_change_rate = this.max_change_rate;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.rate === "string" && this.rate.length)
                writer.writeString(1, this.rate);
              if (typeof this.max_rate === "string" && this.max_rate.length)
                writer.writeString(2, this.max_rate);
              if (typeof this.max_change_rate === "string" && this.max_change_rate.length)
                writer.writeString(3, this.max_change_rate);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CommissionRates();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.rate = reader.readString();
                    break;
                  case 2:
                    message.max_rate = reader.readString();
                    break;
                  case 3:
                    message.max_change_rate = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return CommissionRates.deserialize(bytes);
            }
          }
          v1beta12.CommissionRates = CommissionRates;
          class Commission extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("commission_rates" in data && data.commission_rates != void 0) {
                  this.commission_rates = data.commission_rates;
                }
                if ("update_time" in data && data.update_time != void 0) {
                  this.update_time = data.update_time;
                }
              }
            }
            get commission_rates() {
              return pb_1.Message.getWrapperField(this, CommissionRates, 1);
            }
            set commission_rates(value) {
              pb_1.Message.setWrapperField(this, 1, value);
            }
            get update_time() {
              return pb_1.Message.getWrapperField(this, dependency_4.google.protobuf.Timestamp, 2);
            }
            set update_time(value) {
              pb_1.Message.setWrapperField(this, 2, value);
            }
            static fromObject(data) {
              const message = new Commission({});
              if (data.commission_rates != null) {
                message.commission_rates = CommissionRates.fromObject(data.commission_rates);
              }
              if (data.update_time != null) {
                message.update_time = dependency_4.google.protobuf.Timestamp.fromObject(data.update_time);
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.commission_rates != null) {
                data.commission_rates = this.commission_rates.toObject();
              }
              if (this.update_time != null) {
                data.update_time = this.update_time.toObject();
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.commission_rates !== void 0)
                writer.writeMessage(1, this.commission_rates, () => this.commission_rates.serialize(writer));
              if (this.update_time !== void 0)
                writer.writeMessage(2, this.update_time, () => this.update_time.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Commission();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.commission_rates, () => message.commission_rates = CommissionRates.deserialize(reader));
                    break;
                  case 2:
                    reader.readMessage(message.update_time, () => message.update_time = dependency_4.google.protobuf.Timestamp.deserialize(reader));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Commission.deserialize(bytes);
            }
          }
          v1beta12.Commission = Commission;
          class Description extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("moniker" in data && data.moniker != void 0) {
                  this.moniker = data.moniker;
                }
                if ("identity" in data && data.identity != void 0) {
                  this.identity = data.identity;
                }
                if ("website" in data && data.website != void 0) {
                  this.website = data.website;
                }
                if ("security_contact" in data && data.security_contact != void 0) {
                  this.security_contact = data.security_contact;
                }
                if ("details" in data && data.details != void 0) {
                  this.details = data.details;
                }
              }
            }
            get moniker() {
              return pb_1.Message.getField(this, 1);
            }
            set moniker(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get identity() {
              return pb_1.Message.getField(this, 2);
            }
            set identity(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get website() {
              return pb_1.Message.getField(this, 3);
            }
            set website(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get security_contact() {
              return pb_1.Message.getField(this, 4);
            }
            set security_contact(value) {
              pb_1.Message.setField(this, 4, value);
            }
            get details() {
              return pb_1.Message.getField(this, 5);
            }
            set details(value) {
              pb_1.Message.setField(this, 5, value);
            }
            static fromObject(data) {
              const message = new Description({});
              if (data.moniker != null) {
                message.moniker = data.moniker;
              }
              if (data.identity != null) {
                message.identity = data.identity;
              }
              if (data.website != null) {
                message.website = data.website;
              }
              if (data.security_contact != null) {
                message.security_contact = data.security_contact;
              }
              if (data.details != null) {
                message.details = data.details;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.moniker != null) {
                data.moniker = this.moniker;
              }
              if (this.identity != null) {
                data.identity = this.identity;
              }
              if (this.website != null) {
                data.website = this.website;
              }
              if (this.security_contact != null) {
                data.security_contact = this.security_contact;
              }
              if (this.details != null) {
                data.details = this.details;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.moniker === "string" && this.moniker.length)
                writer.writeString(1, this.moniker);
              if (typeof this.identity === "string" && this.identity.length)
                writer.writeString(2, this.identity);
              if (typeof this.website === "string" && this.website.length)
                writer.writeString(3, this.website);
              if (typeof this.security_contact === "string" && this.security_contact.length)
                writer.writeString(4, this.security_contact);
              if (typeof this.details === "string" && this.details.length)
                writer.writeString(5, this.details);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Description();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.moniker = reader.readString();
                    break;
                  case 2:
                    message.identity = reader.readString();
                    break;
                  case 3:
                    message.website = reader.readString();
                    break;
                  case 4:
                    message.security_contact = reader.readString();
                    break;
                  case 5:
                    message.details = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Description.deserialize(bytes);
            }
          }
          v1beta12.Description = Description;
          class Validator extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("operator_address" in data && data.operator_address != void 0) {
                  this.operator_address = data.operator_address;
                }
                if ("consensus_pubkey" in data && data.consensus_pubkey != void 0) {
                  this.consensus_pubkey = data.consensus_pubkey;
                }
                if ("jailed" in data && data.jailed != void 0) {
                  this.jailed = data.jailed;
                }
                if ("status" in data && data.status != void 0) {
                  this.status = data.status;
                }
                if ("tokens" in data && data.tokens != void 0) {
                  this.tokens = data.tokens;
                }
                if ("delegator_shares" in data && data.delegator_shares != void 0) {
                  this.delegator_shares = data.delegator_shares;
                }
                if ("description" in data && data.description != void 0) {
                  this.description = data.description;
                }
                if ("unbonding_height" in data && data.unbonding_height != void 0) {
                  this.unbonding_height = data.unbonding_height;
                }
                if ("unbonding_time" in data && data.unbonding_time != void 0) {
                  this.unbonding_time = data.unbonding_time;
                }
                if ("commission" in data && data.commission != void 0) {
                  this.commission = data.commission;
                }
                if ("min_self_delegation" in data && data.min_self_delegation != void 0) {
                  this.min_self_delegation = data.min_self_delegation;
                }
              }
            }
            get operator_address() {
              return pb_1.Message.getField(this, 1);
            }
            set operator_address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get consensus_pubkey() {
              return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Any, 2);
            }
            set consensus_pubkey(value) {
              pb_1.Message.setWrapperField(this, 2, value);
            }
            get jailed() {
              return pb_1.Message.getField(this, 3);
            }
            set jailed(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get status() {
              return pb_1.Message.getField(this, 4);
            }
            set status(value) {
              pb_1.Message.setField(this, 4, value);
            }
            get tokens() {
              return pb_1.Message.getField(this, 5);
            }
            set tokens(value) {
              pb_1.Message.setField(this, 5, value);
            }
            get delegator_shares() {
              return pb_1.Message.getField(this, 6);
            }
            set delegator_shares(value) {
              pb_1.Message.setField(this, 6, value);
            }
            get description() {
              return pb_1.Message.getWrapperField(this, Description, 7);
            }
            set description(value) {
              pb_1.Message.setWrapperField(this, 7, value);
            }
            get unbonding_height() {
              return pb_1.Message.getField(this, 8);
            }
            set unbonding_height(value) {
              pb_1.Message.setField(this, 8, value);
            }
            get unbonding_time() {
              return pb_1.Message.getWrapperField(this, dependency_4.google.protobuf.Timestamp, 9);
            }
            set unbonding_time(value) {
              pb_1.Message.setWrapperField(this, 9, value);
            }
            get commission() {
              return pb_1.Message.getWrapperField(this, Commission, 10);
            }
            set commission(value) {
              pb_1.Message.setWrapperField(this, 10, value);
            }
            get min_self_delegation() {
              return pb_1.Message.getField(this, 11);
            }
            set min_self_delegation(value) {
              pb_1.Message.setField(this, 11, value);
            }
            static fromObject(data) {
              const message = new Validator({});
              if (data.operator_address != null) {
                message.operator_address = data.operator_address;
              }
              if (data.consensus_pubkey != null) {
                message.consensus_pubkey = dependency_2.google.protobuf.Any.fromObject(data.consensus_pubkey);
              }
              if (data.jailed != null) {
                message.jailed = data.jailed;
              }
              if (data.status != null) {
                message.status = data.status;
              }
              if (data.tokens != null) {
                message.tokens = data.tokens;
              }
              if (data.delegator_shares != null) {
                message.delegator_shares = data.delegator_shares;
              }
              if (data.description != null) {
                message.description = Description.fromObject(data.description);
              }
              if (data.unbonding_height != null) {
                message.unbonding_height = data.unbonding_height;
              }
              if (data.unbonding_time != null) {
                message.unbonding_time = dependency_4.google.protobuf.Timestamp.fromObject(data.unbonding_time);
              }
              if (data.commission != null) {
                message.commission = Commission.fromObject(data.commission);
              }
              if (data.min_self_delegation != null) {
                message.min_self_delegation = data.min_self_delegation;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.operator_address != null) {
                data.operator_address = this.operator_address;
              }
              if (this.consensus_pubkey != null) {
                data.consensus_pubkey = this.consensus_pubkey.toObject();
              }
              if (this.jailed != null) {
                data.jailed = this.jailed;
              }
              if (this.status != null) {
                data.status = this.status;
              }
              if (this.tokens != null) {
                data.tokens = this.tokens;
              }
              if (this.delegator_shares != null) {
                data.delegator_shares = this.delegator_shares;
              }
              if (this.description != null) {
                data.description = this.description.toObject();
              }
              if (this.unbonding_height != null) {
                data.unbonding_height = this.unbonding_height;
              }
              if (this.unbonding_time != null) {
                data.unbonding_time = this.unbonding_time.toObject();
              }
              if (this.commission != null) {
                data.commission = this.commission.toObject();
              }
              if (this.min_self_delegation != null) {
                data.min_self_delegation = this.min_self_delegation;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.operator_address === "string" && this.operator_address.length)
                writer.writeString(1, this.operator_address);
              if (this.consensus_pubkey !== void 0)
                writer.writeMessage(2, this.consensus_pubkey, () => this.consensus_pubkey.serialize(writer));
              if (this.jailed !== void 0)
                writer.writeBool(3, this.jailed);
              if (this.status !== void 0)
                writer.writeEnum(4, this.status);
              if (typeof this.tokens === "string" && this.tokens.length)
                writer.writeString(5, this.tokens);
              if (typeof this.delegator_shares === "string" && this.delegator_shares.length)
                writer.writeString(6, this.delegator_shares);
              if (this.description !== void 0)
                writer.writeMessage(7, this.description, () => this.description.serialize(writer));
              if (this.unbonding_height !== void 0)
                writer.writeInt64(8, this.unbonding_height);
              if (this.unbonding_time !== void 0)
                writer.writeMessage(9, this.unbonding_time, () => this.unbonding_time.serialize(writer));
              if (this.commission !== void 0)
                writer.writeMessage(10, this.commission, () => this.commission.serialize(writer));
              if (typeof this.min_self_delegation === "string" && this.min_self_delegation.length)
                writer.writeString(11, this.min_self_delegation);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Validator();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.operator_address = reader.readString();
                    break;
                  case 2:
                    reader.readMessage(message.consensus_pubkey, () => message.consensus_pubkey = dependency_2.google.protobuf.Any.deserialize(reader));
                    break;
                  case 3:
                    message.jailed = reader.readBool();
                    break;
                  case 4:
                    message.status = reader.readEnum();
                    break;
                  case 5:
                    message.tokens = reader.readString();
                    break;
                  case 6:
                    message.delegator_shares = reader.readString();
                    break;
                  case 7:
                    reader.readMessage(message.description, () => message.description = Description.deserialize(reader));
                    break;
                  case 8:
                    message.unbonding_height = reader.readInt64();
                    break;
                  case 9:
                    reader.readMessage(message.unbonding_time, () => message.unbonding_time = dependency_4.google.protobuf.Timestamp.deserialize(reader));
                    break;
                  case 10:
                    reader.readMessage(message.commission, () => message.commission = Commission.deserialize(reader));
                    break;
                  case 11:
                    message.min_self_delegation = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Validator.deserialize(bytes);
            }
          }
          v1beta12.Validator = Validator;
          class ValAddresses extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("addresses" in data && data.addresses != void 0) {
                  this.addresses = data.addresses;
                }
              }
            }
            get addresses() {
              return pb_1.Message.getField(this, 1);
            }
            set addresses(value) {
              pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
              const message = new ValAddresses({});
              if (data.addresses != null) {
                message.addresses = data.addresses;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.addresses != null) {
                data.addresses = this.addresses;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.addresses !== void 0)
                writer.writeRepeatedString(1, this.addresses);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ValAddresses();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    pb_1.Message.addToRepeatedField(message, 1, reader.readString());
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return ValAddresses.deserialize(bytes);
            }
          }
          v1beta12.ValAddresses = ValAddresses;
          class DVPair extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_address" in data && data.delegator_address != void 0) {
                  this.delegator_address = data.delegator_address;
                }
                if ("validator_address" in data && data.validator_address != void 0) {
                  this.validator_address = data.validator_address;
                }
              }
            }
            get delegator_address() {
              return pb_1.Message.getField(this, 1);
            }
            set delegator_address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get validator_address() {
              return pb_1.Message.getField(this, 2);
            }
            set validator_address(value) {
              pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
              const message = new DVPair({});
              if (data.delegator_address != null) {
                message.delegator_address = data.delegator_address;
              }
              if (data.validator_address != null) {
                message.validator_address = data.validator_address;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.delegator_address != null) {
                data.delegator_address = this.delegator_address;
              }
              if (this.validator_address != null) {
                data.validator_address = this.validator_address;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.delegator_address === "string" && this.delegator_address.length)
                writer.writeString(1, this.delegator_address);
              if (typeof this.validator_address === "string" && this.validator_address.length)
                writer.writeString(2, this.validator_address);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DVPair();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.delegator_address = reader.readString();
                    break;
                  case 2:
                    message.validator_address = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return DVPair.deserialize(bytes);
            }
          }
          v1beta12.DVPair = DVPair;
          class DVPairs extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("pairs" in data && data.pairs != void 0) {
                  this.pairs = data.pairs;
                }
              }
            }
            get pairs() {
              return pb_1.Message.getRepeatedWrapperField(this, DVPair, 1);
            }
            set pairs(value) {
              pb_1.Message.setRepeatedWrapperField(this, 1, value);
            }
            static fromObject(data) {
              const message = new DVPairs({});
              if (data.pairs != null) {
                message.pairs = data.pairs.map((item) => DVPair.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.pairs != null) {
                data.pairs = this.pairs.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.pairs !== void 0)
                writer.writeRepeatedMessage(1, this.pairs, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DVPairs();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.pairs, () => pb_1.Message.addToRepeatedWrapperField(message, 1, DVPair.deserialize(reader), DVPair));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return DVPairs.deserialize(bytes);
            }
          }
          v1beta12.DVPairs = DVPairs;
          class DVVTriplet extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_address" in data && data.delegator_address != void 0) {
                  this.delegator_address = data.delegator_address;
                }
                if ("validator_src_address" in data && data.validator_src_address != void 0) {
                  this.validator_src_address = data.validator_src_address;
                }
                if ("validator_dst_address" in data && data.validator_dst_address != void 0) {
                  this.validator_dst_address = data.validator_dst_address;
                }
              }
            }
            get delegator_address() {
              return pb_1.Message.getField(this, 1);
            }
            set delegator_address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get validator_src_address() {
              return pb_1.Message.getField(this, 2);
            }
            set validator_src_address(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get validator_dst_address() {
              return pb_1.Message.getField(this, 3);
            }
            set validator_dst_address(value) {
              pb_1.Message.setField(this, 3, value);
            }
            static fromObject(data) {
              const message = new DVVTriplet({});
              if (data.delegator_address != null) {
                message.delegator_address = data.delegator_address;
              }
              if (data.validator_src_address != null) {
                message.validator_src_address = data.validator_src_address;
              }
              if (data.validator_dst_address != null) {
                message.validator_dst_address = data.validator_dst_address;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.delegator_address != null) {
                data.delegator_address = this.delegator_address;
              }
              if (this.validator_src_address != null) {
                data.validator_src_address = this.validator_src_address;
              }
              if (this.validator_dst_address != null) {
                data.validator_dst_address = this.validator_dst_address;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.delegator_address === "string" && this.delegator_address.length)
                writer.writeString(1, this.delegator_address);
              if (typeof this.validator_src_address === "string" && this.validator_src_address.length)
                writer.writeString(2, this.validator_src_address);
              if (typeof this.validator_dst_address === "string" && this.validator_dst_address.length)
                writer.writeString(3, this.validator_dst_address);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DVVTriplet();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.delegator_address = reader.readString();
                    break;
                  case 2:
                    message.validator_src_address = reader.readString();
                    break;
                  case 3:
                    message.validator_dst_address = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return DVVTriplet.deserialize(bytes);
            }
          }
          v1beta12.DVVTriplet = DVVTriplet;
          class DVVTriplets extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("triplets" in data && data.triplets != void 0) {
                  this.triplets = data.triplets;
                }
              }
            }
            get triplets() {
              return pb_1.Message.getRepeatedWrapperField(this, DVVTriplet, 1);
            }
            set triplets(value) {
              pb_1.Message.setRepeatedWrapperField(this, 1, value);
            }
            static fromObject(data) {
              const message = new DVVTriplets({});
              if (data.triplets != null) {
                message.triplets = data.triplets.map((item) => DVVTriplet.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.triplets != null) {
                data.triplets = this.triplets.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.triplets !== void 0)
                writer.writeRepeatedMessage(1, this.triplets, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DVVTriplets();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.triplets, () => pb_1.Message.addToRepeatedWrapperField(message, 1, DVVTriplet.deserialize(reader), DVVTriplet));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return DVVTriplets.deserialize(bytes);
            }
          }
          v1beta12.DVVTriplets = DVVTriplets;
          class Delegation extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_address" in data && data.delegator_address != void 0) {
                  this.delegator_address = data.delegator_address;
                }
                if ("validator_address" in data && data.validator_address != void 0) {
                  this.validator_address = data.validator_address;
                }
                if ("shares" in data && data.shares != void 0) {
                  this.shares = data.shares;
                }
              }
            }
            get delegator_address() {
              return pb_1.Message.getField(this, 1);
            }
            set delegator_address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get validator_address() {
              return pb_1.Message.getField(this, 2);
            }
            set validator_address(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get shares() {
              return pb_1.Message.getField(this, 3);
            }
            set shares(value) {
              pb_1.Message.setField(this, 3, value);
            }
            static fromObject(data) {
              const message = new Delegation({});
              if (data.delegator_address != null) {
                message.delegator_address = data.delegator_address;
              }
              if (data.validator_address != null) {
                message.validator_address = data.validator_address;
              }
              if (data.shares != null) {
                message.shares = data.shares;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.delegator_address != null) {
                data.delegator_address = this.delegator_address;
              }
              if (this.validator_address != null) {
                data.validator_address = this.validator_address;
              }
              if (this.shares != null) {
                data.shares = this.shares;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.delegator_address === "string" && this.delegator_address.length)
                writer.writeString(1, this.delegator_address);
              if (typeof this.validator_address === "string" && this.validator_address.length)
                writer.writeString(2, this.validator_address);
              if (typeof this.shares === "string" && this.shares.length)
                writer.writeString(3, this.shares);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Delegation();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.delegator_address = reader.readString();
                    break;
                  case 2:
                    message.validator_address = reader.readString();
                    break;
                  case 3:
                    message.shares = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Delegation.deserialize(bytes);
            }
          }
          v1beta12.Delegation = Delegation;
          class UnbondingDelegation extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_address" in data && data.delegator_address != void 0) {
                  this.delegator_address = data.delegator_address;
                }
                if ("validator_address" in data && data.validator_address != void 0) {
                  this.validator_address = data.validator_address;
                }
                if ("entries" in data && data.entries != void 0) {
                  this.entries = data.entries;
                }
              }
            }
            get delegator_address() {
              return pb_1.Message.getField(this, 1);
            }
            set delegator_address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get validator_address() {
              return pb_1.Message.getField(this, 2);
            }
            set validator_address(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get entries() {
              return pb_1.Message.getRepeatedWrapperField(this, UnbondingDelegationEntry, 3);
            }
            set entries(value) {
              pb_1.Message.setRepeatedWrapperField(this, 3, value);
            }
            static fromObject(data) {
              const message = new UnbondingDelegation({});
              if (data.delegator_address != null) {
                message.delegator_address = data.delegator_address;
              }
              if (data.validator_address != null) {
                message.validator_address = data.validator_address;
              }
              if (data.entries != null) {
                message.entries = data.entries.map((item) => UnbondingDelegationEntry.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.delegator_address != null) {
                data.delegator_address = this.delegator_address;
              }
              if (this.validator_address != null) {
                data.validator_address = this.validator_address;
              }
              if (this.entries != null) {
                data.entries = this.entries.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.delegator_address === "string" && this.delegator_address.length)
                writer.writeString(1, this.delegator_address);
              if (typeof this.validator_address === "string" && this.validator_address.length)
                writer.writeString(2, this.validator_address);
              if (this.entries !== void 0)
                writer.writeRepeatedMessage(3, this.entries, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UnbondingDelegation();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.delegator_address = reader.readString();
                    break;
                  case 2:
                    message.validator_address = reader.readString();
                    break;
                  case 3:
                    reader.readMessage(message.entries, () => pb_1.Message.addToRepeatedWrapperField(message, 3, UnbondingDelegationEntry.deserialize(reader), UnbondingDelegationEntry));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return UnbondingDelegation.deserialize(bytes);
            }
          }
          v1beta12.UnbondingDelegation = UnbondingDelegation;
          class UnbondingDelegationEntry extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("creation_height" in data && data.creation_height != void 0) {
                  this.creation_height = data.creation_height;
                }
                if ("completion_time" in data && data.completion_time != void 0) {
                  this.completion_time = data.completion_time;
                }
                if ("initial_balance" in data && data.initial_balance != void 0) {
                  this.initial_balance = data.initial_balance;
                }
                if ("balance" in data && data.balance != void 0) {
                  this.balance = data.balance;
                }
              }
            }
            get creation_height() {
              return pb_1.Message.getField(this, 1);
            }
            set creation_height(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get completion_time() {
              return pb_1.Message.getWrapperField(this, dependency_4.google.protobuf.Timestamp, 2);
            }
            set completion_time(value) {
              pb_1.Message.setWrapperField(this, 2, value);
            }
            get initial_balance() {
              return pb_1.Message.getField(this, 3);
            }
            set initial_balance(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get balance() {
              return pb_1.Message.getField(this, 4);
            }
            set balance(value) {
              pb_1.Message.setField(this, 4, value);
            }
            static fromObject(data) {
              const message = new UnbondingDelegationEntry({});
              if (data.creation_height != null) {
                message.creation_height = data.creation_height;
              }
              if (data.completion_time != null) {
                message.completion_time = dependency_4.google.protobuf.Timestamp.fromObject(data.completion_time);
              }
              if (data.initial_balance != null) {
                message.initial_balance = data.initial_balance;
              }
              if (data.balance != null) {
                message.balance = data.balance;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.creation_height != null) {
                data.creation_height = this.creation_height;
              }
              if (this.completion_time != null) {
                data.completion_time = this.completion_time.toObject();
              }
              if (this.initial_balance != null) {
                data.initial_balance = this.initial_balance;
              }
              if (this.balance != null) {
                data.balance = this.balance;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.creation_height !== void 0)
                writer.writeInt64(1, this.creation_height);
              if (this.completion_time !== void 0)
                writer.writeMessage(2, this.completion_time, () => this.completion_time.serialize(writer));
              if (typeof this.initial_balance === "string" && this.initial_balance.length)
                writer.writeString(3, this.initial_balance);
              if (typeof this.balance === "string" && this.balance.length)
                writer.writeString(4, this.balance);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UnbondingDelegationEntry();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.creation_height = reader.readInt64();
                    break;
                  case 2:
                    reader.readMessage(message.completion_time, () => message.completion_time = dependency_4.google.protobuf.Timestamp.deserialize(reader));
                    break;
                  case 3:
                    message.initial_balance = reader.readString();
                    break;
                  case 4:
                    message.balance = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return UnbondingDelegationEntry.deserialize(bytes);
            }
          }
          v1beta12.UnbondingDelegationEntry = UnbondingDelegationEntry;
          class RedelegationEntry extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("creation_height" in data && data.creation_height != void 0) {
                  this.creation_height = data.creation_height;
                }
                if ("completion_time" in data && data.completion_time != void 0) {
                  this.completion_time = data.completion_time;
                }
                if ("initial_balance" in data && data.initial_balance != void 0) {
                  this.initial_balance = data.initial_balance;
                }
                if ("shares_dst" in data && data.shares_dst != void 0) {
                  this.shares_dst = data.shares_dst;
                }
              }
            }
            get creation_height() {
              return pb_1.Message.getField(this, 1);
            }
            set creation_height(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get completion_time() {
              return pb_1.Message.getWrapperField(this, dependency_4.google.protobuf.Timestamp, 2);
            }
            set completion_time(value) {
              pb_1.Message.setWrapperField(this, 2, value);
            }
            get initial_balance() {
              return pb_1.Message.getField(this, 3);
            }
            set initial_balance(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get shares_dst() {
              return pb_1.Message.getField(this, 4);
            }
            set shares_dst(value) {
              pb_1.Message.setField(this, 4, value);
            }
            static fromObject(data) {
              const message = new RedelegationEntry({});
              if (data.creation_height != null) {
                message.creation_height = data.creation_height;
              }
              if (data.completion_time != null) {
                message.completion_time = dependency_4.google.protobuf.Timestamp.fromObject(data.completion_time);
              }
              if (data.initial_balance != null) {
                message.initial_balance = data.initial_balance;
              }
              if (data.shares_dst != null) {
                message.shares_dst = data.shares_dst;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.creation_height != null) {
                data.creation_height = this.creation_height;
              }
              if (this.completion_time != null) {
                data.completion_time = this.completion_time.toObject();
              }
              if (this.initial_balance != null) {
                data.initial_balance = this.initial_balance;
              }
              if (this.shares_dst != null) {
                data.shares_dst = this.shares_dst;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.creation_height !== void 0)
                writer.writeInt64(1, this.creation_height);
              if (this.completion_time !== void 0)
                writer.writeMessage(2, this.completion_time, () => this.completion_time.serialize(writer));
              if (typeof this.initial_balance === "string" && this.initial_balance.length)
                writer.writeString(3, this.initial_balance);
              if (typeof this.shares_dst === "string" && this.shares_dst.length)
                writer.writeString(4, this.shares_dst);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new RedelegationEntry();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.creation_height = reader.readInt64();
                    break;
                  case 2:
                    reader.readMessage(message.completion_time, () => message.completion_time = dependency_4.google.protobuf.Timestamp.deserialize(reader));
                    break;
                  case 3:
                    message.initial_balance = reader.readString();
                    break;
                  case 4:
                    message.shares_dst = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return RedelegationEntry.deserialize(bytes);
            }
          }
          v1beta12.RedelegationEntry = RedelegationEntry;
          class Redelegation extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_address" in data && data.delegator_address != void 0) {
                  this.delegator_address = data.delegator_address;
                }
                if ("validator_src_address" in data && data.validator_src_address != void 0) {
                  this.validator_src_address = data.validator_src_address;
                }
                if ("validator_dst_address" in data && data.validator_dst_address != void 0) {
                  this.validator_dst_address = data.validator_dst_address;
                }
                if ("entries" in data && data.entries != void 0) {
                  this.entries = data.entries;
                }
              }
            }
            get delegator_address() {
              return pb_1.Message.getField(this, 1);
            }
            set delegator_address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get validator_src_address() {
              return pb_1.Message.getField(this, 2);
            }
            set validator_src_address(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get validator_dst_address() {
              return pb_1.Message.getField(this, 3);
            }
            set validator_dst_address(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get entries() {
              return pb_1.Message.getRepeatedWrapperField(this, RedelegationEntry, 4);
            }
            set entries(value) {
              pb_1.Message.setRepeatedWrapperField(this, 4, value);
            }
            static fromObject(data) {
              const message = new Redelegation({});
              if (data.delegator_address != null) {
                message.delegator_address = data.delegator_address;
              }
              if (data.validator_src_address != null) {
                message.validator_src_address = data.validator_src_address;
              }
              if (data.validator_dst_address != null) {
                message.validator_dst_address = data.validator_dst_address;
              }
              if (data.entries != null) {
                message.entries = data.entries.map((item) => RedelegationEntry.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.delegator_address != null) {
                data.delegator_address = this.delegator_address;
              }
              if (this.validator_src_address != null) {
                data.validator_src_address = this.validator_src_address;
              }
              if (this.validator_dst_address != null) {
                data.validator_dst_address = this.validator_dst_address;
              }
              if (this.entries != null) {
                data.entries = this.entries.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.delegator_address === "string" && this.delegator_address.length)
                writer.writeString(1, this.delegator_address);
              if (typeof this.validator_src_address === "string" && this.validator_src_address.length)
                writer.writeString(2, this.validator_src_address);
              if (typeof this.validator_dst_address === "string" && this.validator_dst_address.length)
                writer.writeString(3, this.validator_dst_address);
              if (this.entries !== void 0)
                writer.writeRepeatedMessage(4, this.entries, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Redelegation();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.delegator_address = reader.readString();
                    break;
                  case 2:
                    message.validator_src_address = reader.readString();
                    break;
                  case 3:
                    message.validator_dst_address = reader.readString();
                    break;
                  case 4:
                    reader.readMessage(message.entries, () => pb_1.Message.addToRepeatedWrapperField(message, 4, RedelegationEntry.deserialize(reader), RedelegationEntry));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Redelegation.deserialize(bytes);
            }
          }
          v1beta12.Redelegation = Redelegation;
          class Params extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("unbonding_time" in data && data.unbonding_time != void 0) {
                  this.unbonding_time = data.unbonding_time;
                }
                if ("max_validators" in data && data.max_validators != void 0) {
                  this.max_validators = data.max_validators;
                }
                if ("max_entries" in data && data.max_entries != void 0) {
                  this.max_entries = data.max_entries;
                }
                if ("historical_entries" in data && data.historical_entries != void 0) {
                  this.historical_entries = data.historical_entries;
                }
                if ("bond_denom" in data && data.bond_denom != void 0) {
                  this.bond_denom = data.bond_denom;
                }
              }
            }
            get unbonding_time() {
              return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Duration, 1);
            }
            set unbonding_time(value) {
              pb_1.Message.setWrapperField(this, 1, value);
            }
            get max_validators() {
              return pb_1.Message.getField(this, 2);
            }
            set max_validators(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get max_entries() {
              return pb_1.Message.getField(this, 3);
            }
            set max_entries(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get historical_entries() {
              return pb_1.Message.getField(this, 4);
            }
            set historical_entries(value) {
              pb_1.Message.setField(this, 4, value);
            }
            get bond_denom() {
              return pb_1.Message.getField(this, 5);
            }
            set bond_denom(value) {
              pb_1.Message.setField(this, 5, value);
            }
            static fromObject(data) {
              const message = new Params({});
              if (data.unbonding_time != null) {
                message.unbonding_time = dependency_3.google.protobuf.Duration.fromObject(data.unbonding_time);
              }
              if (data.max_validators != null) {
                message.max_validators = data.max_validators;
              }
              if (data.max_entries != null) {
                message.max_entries = data.max_entries;
              }
              if (data.historical_entries != null) {
                message.historical_entries = data.historical_entries;
              }
              if (data.bond_denom != null) {
                message.bond_denom = data.bond_denom;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.unbonding_time != null) {
                data.unbonding_time = this.unbonding_time.toObject();
              }
              if (this.max_validators != null) {
                data.max_validators = this.max_validators;
              }
              if (this.max_entries != null) {
                data.max_entries = this.max_entries;
              }
              if (this.historical_entries != null) {
                data.historical_entries = this.historical_entries;
              }
              if (this.bond_denom != null) {
                data.bond_denom = this.bond_denom;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.unbonding_time !== void 0)
                writer.writeMessage(1, this.unbonding_time, () => this.unbonding_time.serialize(writer));
              if (this.max_validators !== void 0)
                writer.writeUint32(2, this.max_validators);
              if (this.max_entries !== void 0)
                writer.writeUint32(3, this.max_entries);
              if (this.historical_entries !== void 0)
                writer.writeUint32(4, this.historical_entries);
              if (typeof this.bond_denom === "string" && this.bond_denom.length)
                writer.writeString(5, this.bond_denom);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Params();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.unbonding_time, () => message.unbonding_time = dependency_3.google.protobuf.Duration.deserialize(reader));
                    break;
                  case 2:
                    message.max_validators = reader.readUint32();
                    break;
                  case 3:
                    message.max_entries = reader.readUint32();
                    break;
                  case 4:
                    message.historical_entries = reader.readUint32();
                    break;
                  case 5:
                    message.bond_denom = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Params.deserialize(bytes);
            }
          }
          v1beta12.Params = Params;
          class DelegationResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("delegation" in data && data.delegation != void 0) {
                  this.delegation = data.delegation;
                }
                if ("balance" in data && data.balance != void 0) {
                  this.balance = data.balance;
                }
              }
            }
            get delegation() {
              return pb_1.Message.getWrapperField(this, Delegation, 1);
            }
            set delegation(value) {
              pb_1.Message.setWrapperField(this, 1, value);
            }
            get balance() {
              return pb_1.Message.getWrapperField(this, dependency_6.cosmos.base.v1beta1.Coin, 2);
            }
            set balance(value) {
              pb_1.Message.setWrapperField(this, 2, value);
            }
            static fromObject(data) {
              const message = new DelegationResponse({});
              if (data.delegation != null) {
                message.delegation = Delegation.fromObject(data.delegation);
              }
              if (data.balance != null) {
                message.balance = dependency_6.cosmos.base.v1beta1.Coin.fromObject(data.balance);
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.delegation != null) {
                data.delegation = this.delegation.toObject();
              }
              if (this.balance != null) {
                data.balance = this.balance.toObject();
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.delegation !== void 0)
                writer.writeMessage(1, this.delegation, () => this.delegation.serialize(writer));
              if (this.balance !== void 0)
                writer.writeMessage(2, this.balance, () => this.balance.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DelegationResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.delegation, () => message.delegation = Delegation.deserialize(reader));
                    break;
                  case 2:
                    reader.readMessage(message.balance, () => message.balance = dependency_6.cosmos.base.v1beta1.Coin.deserialize(reader));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return DelegationResponse.deserialize(bytes);
            }
          }
          v1beta12.DelegationResponse = DelegationResponse;
          class RedelegationEntryResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("redelegation_entry" in data && data.redelegation_entry != void 0) {
                  this.redelegation_entry = data.redelegation_entry;
                }
                if ("balance" in data && data.balance != void 0) {
                  this.balance = data.balance;
                }
              }
            }
            get redelegation_entry() {
              return pb_1.Message.getWrapperField(this, RedelegationEntry, 1);
            }
            set redelegation_entry(value) {
              pb_1.Message.setWrapperField(this, 1, value);
            }
            get balance() {
              return pb_1.Message.getField(this, 4);
            }
            set balance(value) {
              pb_1.Message.setField(this, 4, value);
            }
            static fromObject(data) {
              const message = new RedelegationEntryResponse({});
              if (data.redelegation_entry != null) {
                message.redelegation_entry = RedelegationEntry.fromObject(data.redelegation_entry);
              }
              if (data.balance != null) {
                message.balance = data.balance;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.redelegation_entry != null) {
                data.redelegation_entry = this.redelegation_entry.toObject();
              }
              if (this.balance != null) {
                data.balance = this.balance;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.redelegation_entry !== void 0)
                writer.writeMessage(1, this.redelegation_entry, () => this.redelegation_entry.serialize(writer));
              if (typeof this.balance === "string" && this.balance.length)
                writer.writeString(4, this.balance);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new RedelegationEntryResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.redelegation_entry, () => message.redelegation_entry = RedelegationEntry.deserialize(reader));
                    break;
                  case 4:
                    message.balance = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return RedelegationEntryResponse.deserialize(bytes);
            }
          }
          v1beta12.RedelegationEntryResponse = RedelegationEntryResponse;
          class RedelegationResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("redelegation" in data && data.redelegation != void 0) {
                  this.redelegation = data.redelegation;
                }
                if ("entries" in data && data.entries != void 0) {
                  this.entries = data.entries;
                }
              }
            }
            get redelegation() {
              return pb_1.Message.getWrapperField(this, Redelegation, 1);
            }
            set redelegation(value) {
              pb_1.Message.setWrapperField(this, 1, value);
            }
            get entries() {
              return pb_1.Message.getRepeatedWrapperField(this, RedelegationEntryResponse, 2);
            }
            set entries(value) {
              pb_1.Message.setRepeatedWrapperField(this, 2, value);
            }
            static fromObject(data) {
              const message = new RedelegationResponse({});
              if (data.redelegation != null) {
                message.redelegation = Redelegation.fromObject(data.redelegation);
              }
              if (data.entries != null) {
                message.entries = data.entries.map((item) => RedelegationEntryResponse.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.redelegation != null) {
                data.redelegation = this.redelegation.toObject();
              }
              if (this.entries != null) {
                data.entries = this.entries.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.redelegation !== void 0)
                writer.writeMessage(1, this.redelegation, () => this.redelegation.serialize(writer));
              if (this.entries !== void 0)
                writer.writeRepeatedMessage(2, this.entries, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new RedelegationResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.redelegation, () => message.redelegation = Redelegation.deserialize(reader));
                    break;
                  case 2:
                    reader.readMessage(message.entries, () => pb_1.Message.addToRepeatedWrapperField(message, 2, RedelegationEntryResponse.deserialize(reader), RedelegationEntryResponse));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return RedelegationResponse.deserialize(bytes);
            }
          }
          v1beta12.RedelegationResponse = RedelegationResponse;
          class Pool extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("not_bonded_tokens" in data && data.not_bonded_tokens != void 0) {
                  this.not_bonded_tokens = data.not_bonded_tokens;
                }
                if ("bonded_tokens" in data && data.bonded_tokens != void 0) {
                  this.bonded_tokens = data.bonded_tokens;
                }
              }
            }
            get not_bonded_tokens() {
              return pb_1.Message.getField(this, 1);
            }
            set not_bonded_tokens(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get bonded_tokens() {
              return pb_1.Message.getField(this, 2);
            }
            set bonded_tokens(value) {
              pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
              const message = new Pool({});
              if (data.not_bonded_tokens != null) {
                message.not_bonded_tokens = data.not_bonded_tokens;
              }
              if (data.bonded_tokens != null) {
                message.bonded_tokens = data.bonded_tokens;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.not_bonded_tokens != null) {
                data.not_bonded_tokens = this.not_bonded_tokens;
              }
              if (this.bonded_tokens != null) {
                data.bonded_tokens = this.bonded_tokens;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.not_bonded_tokens === "string" && this.not_bonded_tokens.length)
                writer.writeString(1, this.not_bonded_tokens);
              if (typeof this.bonded_tokens === "string" && this.bonded_tokens.length)
                writer.writeString(2, this.bonded_tokens);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Pool();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.not_bonded_tokens = reader.readString();
                    break;
                  case 2:
                    message.bonded_tokens = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Pool.deserialize(bytes);
            }
          }
          v1beta12.Pool = Pool;
        })(v1beta1 = staking2.v1beta1 || (staking2.v1beta1 = {}));
      })(staking = cosmos2.staking || (cosmos2.staking = {}));
    })(cosmos = exports2.cosmos || (exports2.cosmos = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/cosmos/staking/v1beta1/tx.js
var require_tx5 = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/cosmos/staking/v1beta1/tx.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.cosmos = void 0;
    var dependency_1 = __importStar(require_any());
    var dependency_2 = __importStar(require_timestamp());
    var dependency_5 = __importStar(require_coin());
    var dependency_6 = __importStar(require_staking());
    var pb_1 = __importStar(require_google_protobuf());
    var cosmos;
    (function(cosmos2) {
      var staking;
      (function(staking2) {
        var v1beta1;
        (function(v1beta12) {
          class MsgCreateValidator extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("description" in data && data.description != void 0) {
                  this.description = data.description;
                }
                if ("commission" in data && data.commission != void 0) {
                  this.commission = data.commission;
                }
                if ("min_self_delegation" in data && data.min_self_delegation != void 0) {
                  this.min_self_delegation = data.min_self_delegation;
                }
                if ("delegator_address" in data && data.delegator_address != void 0) {
                  this.delegator_address = data.delegator_address;
                }
                if ("validator_address" in data && data.validator_address != void 0) {
                  this.validator_address = data.validator_address;
                }
                if ("pubkey" in data && data.pubkey != void 0) {
                  this.pubkey = data.pubkey;
                }
                if ("value" in data && data.value != void 0) {
                  this.value = data.value;
                }
              }
            }
            get description() {
              return pb_1.Message.getWrapperField(this, dependency_6.cosmos.staking.v1beta1.Description, 1);
            }
            set description(value) {
              pb_1.Message.setWrapperField(this, 1, value);
            }
            get commission() {
              return pb_1.Message.getWrapperField(this, dependency_6.cosmos.staking.v1beta1.CommissionRates, 2);
            }
            set commission(value) {
              pb_1.Message.setWrapperField(this, 2, value);
            }
            get min_self_delegation() {
              return pb_1.Message.getField(this, 3);
            }
            set min_self_delegation(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get delegator_address() {
              return pb_1.Message.getField(this, 4);
            }
            set delegator_address(value) {
              pb_1.Message.setField(this, 4, value);
            }
            get validator_address() {
              return pb_1.Message.getField(this, 5);
            }
            set validator_address(value) {
              pb_1.Message.setField(this, 5, value);
            }
            get pubkey() {
              return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Any, 6);
            }
            set pubkey(value) {
              pb_1.Message.setWrapperField(this, 6, value);
            }
            get value() {
              return pb_1.Message.getWrapperField(this, dependency_5.cosmos.base.v1beta1.Coin, 7);
            }
            set value(value) {
              pb_1.Message.setWrapperField(this, 7, value);
            }
            static fromObject(data) {
              const message = new MsgCreateValidator({});
              if (data.description != null) {
                message.description = dependency_6.cosmos.staking.v1beta1.Description.fromObject(data.description);
              }
              if (data.commission != null) {
                message.commission = dependency_6.cosmos.staking.v1beta1.CommissionRates.fromObject(data.commission);
              }
              if (data.min_self_delegation != null) {
                message.min_self_delegation = data.min_self_delegation;
              }
              if (data.delegator_address != null) {
                message.delegator_address = data.delegator_address;
              }
              if (data.validator_address != null) {
                message.validator_address = data.validator_address;
              }
              if (data.pubkey != null) {
                message.pubkey = dependency_1.google.protobuf.Any.fromObject(data.pubkey);
              }
              if (data.value != null) {
                message.value = dependency_5.cosmos.base.v1beta1.Coin.fromObject(data.value);
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.description != null) {
                data.description = this.description.toObject();
              }
              if (this.commission != null) {
                data.commission = this.commission.toObject();
              }
              if (this.min_self_delegation != null) {
                data.min_self_delegation = this.min_self_delegation;
              }
              if (this.delegator_address != null) {
                data.delegator_address = this.delegator_address;
              }
              if (this.validator_address != null) {
                data.validator_address = this.validator_address;
              }
              if (this.pubkey != null) {
                data.pubkey = this.pubkey.toObject();
              }
              if (this.value != null) {
                data.value = this.value.toObject();
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.description !== void 0)
                writer.writeMessage(1, this.description, () => this.description.serialize(writer));
              if (this.commission !== void 0)
                writer.writeMessage(2, this.commission, () => this.commission.serialize(writer));
              if (typeof this.min_self_delegation === "string" && this.min_self_delegation.length)
                writer.writeString(3, this.min_self_delegation);
              if (typeof this.delegator_address === "string" && this.delegator_address.length)
                writer.writeString(4, this.delegator_address);
              if (typeof this.validator_address === "string" && this.validator_address.length)
                writer.writeString(5, this.validator_address);
              if (this.pubkey !== void 0)
                writer.writeMessage(6, this.pubkey, () => this.pubkey.serialize(writer));
              if (this.value !== void 0)
                writer.writeMessage(7, this.value, () => this.value.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgCreateValidator();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.description, () => message.description = dependency_6.cosmos.staking.v1beta1.Description.deserialize(reader));
                    break;
                  case 2:
                    reader.readMessage(message.commission, () => message.commission = dependency_6.cosmos.staking.v1beta1.CommissionRates.deserialize(reader));
                    break;
                  case 3:
                    message.min_self_delegation = reader.readString();
                    break;
                  case 4:
                    message.delegator_address = reader.readString();
                    break;
                  case 5:
                    message.validator_address = reader.readString();
                    break;
                  case 6:
                    reader.readMessage(message.pubkey, () => message.pubkey = dependency_1.google.protobuf.Any.deserialize(reader));
                    break;
                  case 7:
                    reader.readMessage(message.value, () => message.value = dependency_5.cosmos.base.v1beta1.Coin.deserialize(reader));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgCreateValidator.deserialize(bytes);
            }
          }
          v1beta12.MsgCreateValidator = MsgCreateValidator;
          class MsgCreateValidatorResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
              }
            }
            static fromObject(data) {
              const message = new MsgCreateValidatorResponse({});
              return message;
            }
            toObject() {
              const data = {};
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgCreateValidatorResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgCreateValidatorResponse.deserialize(bytes);
            }
          }
          v1beta12.MsgCreateValidatorResponse = MsgCreateValidatorResponse;
          class MsgEditValidator extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("description" in data && data.description != void 0) {
                  this.description = data.description;
                }
                if ("validator_address" in data && data.validator_address != void 0) {
                  this.validator_address = data.validator_address;
                }
                if ("commission_rate" in data && data.commission_rate != void 0) {
                  this.commission_rate = data.commission_rate;
                }
                if ("min_self_delegation" in data && data.min_self_delegation != void 0) {
                  this.min_self_delegation = data.min_self_delegation;
                }
              }
            }
            get description() {
              return pb_1.Message.getWrapperField(this, dependency_6.cosmos.staking.v1beta1.Description, 1);
            }
            set description(value) {
              pb_1.Message.setWrapperField(this, 1, value);
            }
            get validator_address() {
              return pb_1.Message.getField(this, 2);
            }
            set validator_address(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get commission_rate() {
              return pb_1.Message.getField(this, 3);
            }
            set commission_rate(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get min_self_delegation() {
              return pb_1.Message.getField(this, 4);
            }
            set min_self_delegation(value) {
              pb_1.Message.setField(this, 4, value);
            }
            static fromObject(data) {
              const message = new MsgEditValidator({});
              if (data.description != null) {
                message.description = dependency_6.cosmos.staking.v1beta1.Description.fromObject(data.description);
              }
              if (data.validator_address != null) {
                message.validator_address = data.validator_address;
              }
              if (data.commission_rate != null) {
                message.commission_rate = data.commission_rate;
              }
              if (data.min_self_delegation != null) {
                message.min_self_delegation = data.min_self_delegation;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.description != null) {
                data.description = this.description.toObject();
              }
              if (this.validator_address != null) {
                data.validator_address = this.validator_address;
              }
              if (this.commission_rate != null) {
                data.commission_rate = this.commission_rate;
              }
              if (this.min_self_delegation != null) {
                data.min_self_delegation = this.min_self_delegation;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.description !== void 0)
                writer.writeMessage(1, this.description, () => this.description.serialize(writer));
              if (typeof this.validator_address === "string" && this.validator_address.length)
                writer.writeString(2, this.validator_address);
              if (typeof this.commission_rate === "string" && this.commission_rate.length)
                writer.writeString(3, this.commission_rate);
              if (typeof this.min_self_delegation === "string" && this.min_self_delegation.length)
                writer.writeString(4, this.min_self_delegation);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgEditValidator();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.description, () => message.description = dependency_6.cosmos.staking.v1beta1.Description.deserialize(reader));
                    break;
                  case 2:
                    message.validator_address = reader.readString();
                    break;
                  case 3:
                    message.commission_rate = reader.readString();
                    break;
                  case 4:
                    message.min_self_delegation = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgEditValidator.deserialize(bytes);
            }
          }
          v1beta12.MsgEditValidator = MsgEditValidator;
          class MsgEditValidatorResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
              }
            }
            static fromObject(data) {
              const message = new MsgEditValidatorResponse({});
              return message;
            }
            toObject() {
              const data = {};
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgEditValidatorResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgEditValidatorResponse.deserialize(bytes);
            }
          }
          v1beta12.MsgEditValidatorResponse = MsgEditValidatorResponse;
          class MsgDelegate extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_address" in data && data.delegator_address != void 0) {
                  this.delegator_address = data.delegator_address;
                }
                if ("validator_address" in data && data.validator_address != void 0) {
                  this.validator_address = data.validator_address;
                }
                if ("amount" in data && data.amount != void 0) {
                  this.amount = data.amount;
                }
              }
            }
            get delegator_address() {
              return pb_1.Message.getField(this, 1);
            }
            set delegator_address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get validator_address() {
              return pb_1.Message.getField(this, 2);
            }
            set validator_address(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get amount() {
              return pb_1.Message.getWrapperField(this, dependency_5.cosmos.base.v1beta1.Coin, 3);
            }
            set amount(value) {
              pb_1.Message.setWrapperField(this, 3, value);
            }
            static fromObject(data) {
              const message = new MsgDelegate({});
              if (data.delegator_address != null) {
                message.delegator_address = data.delegator_address;
              }
              if (data.validator_address != null) {
                message.validator_address = data.validator_address;
              }
              if (data.amount != null) {
                message.amount = dependency_5.cosmos.base.v1beta1.Coin.fromObject(data.amount);
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.delegator_address != null) {
                data.delegator_address = this.delegator_address;
              }
              if (this.validator_address != null) {
                data.validator_address = this.validator_address;
              }
              if (this.amount != null) {
                data.amount = this.amount.toObject();
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.delegator_address === "string" && this.delegator_address.length)
                writer.writeString(1, this.delegator_address);
              if (typeof this.validator_address === "string" && this.validator_address.length)
                writer.writeString(2, this.validator_address);
              if (this.amount !== void 0)
                writer.writeMessage(3, this.amount, () => this.amount.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgDelegate();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.delegator_address = reader.readString();
                    break;
                  case 2:
                    message.validator_address = reader.readString();
                    break;
                  case 3:
                    reader.readMessage(message.amount, () => message.amount = dependency_5.cosmos.base.v1beta1.Coin.deserialize(reader));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgDelegate.deserialize(bytes);
            }
          }
          v1beta12.MsgDelegate = MsgDelegate;
          class MsgDelegateResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
              }
            }
            static fromObject(data) {
              const message = new MsgDelegateResponse({});
              return message;
            }
            toObject() {
              const data = {};
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgDelegateResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgDelegateResponse.deserialize(bytes);
            }
          }
          v1beta12.MsgDelegateResponse = MsgDelegateResponse;
          class MsgBeginRedelegate extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_address" in data && data.delegator_address != void 0) {
                  this.delegator_address = data.delegator_address;
                }
                if ("validator_src_address" in data && data.validator_src_address != void 0) {
                  this.validator_src_address = data.validator_src_address;
                }
                if ("validator_dst_address" in data && data.validator_dst_address != void 0) {
                  this.validator_dst_address = data.validator_dst_address;
                }
                if ("amount" in data && data.amount != void 0) {
                  this.amount = data.amount;
                }
              }
            }
            get delegator_address() {
              return pb_1.Message.getField(this, 1);
            }
            set delegator_address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get validator_src_address() {
              return pb_1.Message.getField(this, 2);
            }
            set validator_src_address(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get validator_dst_address() {
              return pb_1.Message.getField(this, 3);
            }
            set validator_dst_address(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get amount() {
              return pb_1.Message.getWrapperField(this, dependency_5.cosmos.base.v1beta1.Coin, 4);
            }
            set amount(value) {
              pb_1.Message.setWrapperField(this, 4, value);
            }
            static fromObject(data) {
              const message = new MsgBeginRedelegate({});
              if (data.delegator_address != null) {
                message.delegator_address = data.delegator_address;
              }
              if (data.validator_src_address != null) {
                message.validator_src_address = data.validator_src_address;
              }
              if (data.validator_dst_address != null) {
                message.validator_dst_address = data.validator_dst_address;
              }
              if (data.amount != null) {
                message.amount = dependency_5.cosmos.base.v1beta1.Coin.fromObject(data.amount);
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.delegator_address != null) {
                data.delegator_address = this.delegator_address;
              }
              if (this.validator_src_address != null) {
                data.validator_src_address = this.validator_src_address;
              }
              if (this.validator_dst_address != null) {
                data.validator_dst_address = this.validator_dst_address;
              }
              if (this.amount != null) {
                data.amount = this.amount.toObject();
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.delegator_address === "string" && this.delegator_address.length)
                writer.writeString(1, this.delegator_address);
              if (typeof this.validator_src_address === "string" && this.validator_src_address.length)
                writer.writeString(2, this.validator_src_address);
              if (typeof this.validator_dst_address === "string" && this.validator_dst_address.length)
                writer.writeString(3, this.validator_dst_address);
              if (this.amount !== void 0)
                writer.writeMessage(4, this.amount, () => this.amount.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgBeginRedelegate();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.delegator_address = reader.readString();
                    break;
                  case 2:
                    message.validator_src_address = reader.readString();
                    break;
                  case 3:
                    message.validator_dst_address = reader.readString();
                    break;
                  case 4:
                    reader.readMessage(message.amount, () => message.amount = dependency_5.cosmos.base.v1beta1.Coin.deserialize(reader));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgBeginRedelegate.deserialize(bytes);
            }
          }
          v1beta12.MsgBeginRedelegate = MsgBeginRedelegate;
          class MsgBeginRedelegateResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("completion_time" in data && data.completion_time != void 0) {
                  this.completion_time = data.completion_time;
                }
              }
            }
            get completion_time() {
              return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Timestamp, 1);
            }
            set completion_time(value) {
              pb_1.Message.setWrapperField(this, 1, value);
            }
            static fromObject(data) {
              const message = new MsgBeginRedelegateResponse({});
              if (data.completion_time != null) {
                message.completion_time = dependency_2.google.protobuf.Timestamp.fromObject(data.completion_time);
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.completion_time != null) {
                data.completion_time = this.completion_time.toObject();
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.completion_time !== void 0)
                writer.writeMessage(1, this.completion_time, () => this.completion_time.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgBeginRedelegateResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.completion_time, () => message.completion_time = dependency_2.google.protobuf.Timestamp.deserialize(reader));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgBeginRedelegateResponse.deserialize(bytes);
            }
          }
          v1beta12.MsgBeginRedelegateResponse = MsgBeginRedelegateResponse;
          class MsgUndelegate extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_address" in data && data.delegator_address != void 0) {
                  this.delegator_address = data.delegator_address;
                }
                if ("validator_address" in data && data.validator_address != void 0) {
                  this.validator_address = data.validator_address;
                }
                if ("amount" in data && data.amount != void 0) {
                  this.amount = data.amount;
                }
              }
            }
            get delegator_address() {
              return pb_1.Message.getField(this, 1);
            }
            set delegator_address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get validator_address() {
              return pb_1.Message.getField(this, 2);
            }
            set validator_address(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get amount() {
              return pb_1.Message.getWrapperField(this, dependency_5.cosmos.base.v1beta1.Coin, 3);
            }
            set amount(value) {
              pb_1.Message.setWrapperField(this, 3, value);
            }
            static fromObject(data) {
              const message = new MsgUndelegate({});
              if (data.delegator_address != null) {
                message.delegator_address = data.delegator_address;
              }
              if (data.validator_address != null) {
                message.validator_address = data.validator_address;
              }
              if (data.amount != null) {
                message.amount = dependency_5.cosmos.base.v1beta1.Coin.fromObject(data.amount);
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.delegator_address != null) {
                data.delegator_address = this.delegator_address;
              }
              if (this.validator_address != null) {
                data.validator_address = this.validator_address;
              }
              if (this.amount != null) {
                data.amount = this.amount.toObject();
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.delegator_address === "string" && this.delegator_address.length)
                writer.writeString(1, this.delegator_address);
              if (typeof this.validator_address === "string" && this.validator_address.length)
                writer.writeString(2, this.validator_address);
              if (this.amount !== void 0)
                writer.writeMessage(3, this.amount, () => this.amount.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgUndelegate();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.delegator_address = reader.readString();
                    break;
                  case 2:
                    message.validator_address = reader.readString();
                    break;
                  case 3:
                    reader.readMessage(message.amount, () => message.amount = dependency_5.cosmos.base.v1beta1.Coin.deserialize(reader));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgUndelegate.deserialize(bytes);
            }
          }
          v1beta12.MsgUndelegate = MsgUndelegate;
          class MsgUndelegateResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("completion_time" in data && data.completion_time != void 0) {
                  this.completion_time = data.completion_time;
                }
              }
            }
            get completion_time() {
              return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Timestamp, 1);
            }
            set completion_time(value) {
              pb_1.Message.setWrapperField(this, 1, value);
            }
            static fromObject(data) {
              const message = new MsgUndelegateResponse({});
              if (data.completion_time != null) {
                message.completion_time = dependency_2.google.protobuf.Timestamp.fromObject(data.completion_time);
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.completion_time != null) {
                data.completion_time = this.completion_time.toObject();
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.completion_time !== void 0)
                writer.writeMessage(1, this.completion_time, () => this.completion_time.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgUndelegateResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.completion_time, () => message.completion_time = dependency_2.google.protobuf.Timestamp.deserialize(reader));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgUndelegateResponse.deserialize(bytes);
            }
          }
          v1beta12.MsgUndelegateResponse = MsgUndelegateResponse;
        })(v1beta1 = staking2.v1beta1 || (staking2.v1beta1 = {}));
      })(staking = cosmos2.staking || (cosmos2.staking = {}));
    })(cosmos = exports2.cosmos || (exports2.cosmos = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/cosmos/distribution/v1beta1/tx.js
var require_tx6 = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/cosmos/distribution/v1beta1/tx.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.cosmos = void 0;
    var dependency_2 = __importStar(require_coin());
    var pb_1 = __importStar(require_google_protobuf());
    var cosmos;
    (function(cosmos2) {
      var distribution;
      (function(distribution2) {
        var v1beta1;
        (function(v1beta12) {
          class MsgSetWithdrawAddress extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_address" in data && data.delegator_address != void 0) {
                  this.delegator_address = data.delegator_address;
                }
                if ("withdraw_address" in data && data.withdraw_address != void 0) {
                  this.withdraw_address = data.withdraw_address;
                }
              }
            }
            get delegator_address() {
              return pb_1.Message.getField(this, 1);
            }
            set delegator_address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get withdraw_address() {
              return pb_1.Message.getField(this, 2);
            }
            set withdraw_address(value) {
              pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
              const message = new MsgSetWithdrawAddress({});
              if (data.delegator_address != null) {
                message.delegator_address = data.delegator_address;
              }
              if (data.withdraw_address != null) {
                message.withdraw_address = data.withdraw_address;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.delegator_address != null) {
                data.delegator_address = this.delegator_address;
              }
              if (this.withdraw_address != null) {
                data.withdraw_address = this.withdraw_address;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.delegator_address === "string" && this.delegator_address.length)
                writer.writeString(1, this.delegator_address);
              if (typeof this.withdraw_address === "string" && this.withdraw_address.length)
                writer.writeString(2, this.withdraw_address);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgSetWithdrawAddress();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.delegator_address = reader.readString();
                    break;
                  case 2:
                    message.withdraw_address = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgSetWithdrawAddress.deserialize(bytes);
            }
          }
          v1beta12.MsgSetWithdrawAddress = MsgSetWithdrawAddress;
          class MsgSetWithdrawAddressResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
              }
            }
            static fromObject(data) {
              const message = new MsgSetWithdrawAddressResponse({});
              return message;
            }
            toObject() {
              const data = {};
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgSetWithdrawAddressResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgSetWithdrawAddressResponse.deserialize(bytes);
            }
          }
          v1beta12.MsgSetWithdrawAddressResponse = MsgSetWithdrawAddressResponse;
          class MsgWithdrawDelegatorReward extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_address" in data && data.delegator_address != void 0) {
                  this.delegator_address = data.delegator_address;
                }
                if ("validator_address" in data && data.validator_address != void 0) {
                  this.validator_address = data.validator_address;
                }
              }
            }
            get delegator_address() {
              return pb_1.Message.getField(this, 1);
            }
            set delegator_address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get validator_address() {
              return pb_1.Message.getField(this, 2);
            }
            set validator_address(value) {
              pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
              const message = new MsgWithdrawDelegatorReward({});
              if (data.delegator_address != null) {
                message.delegator_address = data.delegator_address;
              }
              if (data.validator_address != null) {
                message.validator_address = data.validator_address;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.delegator_address != null) {
                data.delegator_address = this.delegator_address;
              }
              if (this.validator_address != null) {
                data.validator_address = this.validator_address;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.delegator_address === "string" && this.delegator_address.length)
                writer.writeString(1, this.delegator_address);
              if (typeof this.validator_address === "string" && this.validator_address.length)
                writer.writeString(2, this.validator_address);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgWithdrawDelegatorReward();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.delegator_address = reader.readString();
                    break;
                  case 2:
                    message.validator_address = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgWithdrawDelegatorReward.deserialize(bytes);
            }
          }
          v1beta12.MsgWithdrawDelegatorReward = MsgWithdrawDelegatorReward;
          class MsgWithdrawDelegatorRewardResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
              }
            }
            static fromObject(data) {
              const message = new MsgWithdrawDelegatorRewardResponse({});
              return message;
            }
            toObject() {
              const data = {};
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgWithdrawDelegatorRewardResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgWithdrawDelegatorRewardResponse.deserialize(bytes);
            }
          }
          v1beta12.MsgWithdrawDelegatorRewardResponse = MsgWithdrawDelegatorRewardResponse;
          class MsgWithdrawValidatorCommission extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("validator_address" in data && data.validator_address != void 0) {
                  this.validator_address = data.validator_address;
                }
              }
            }
            get validator_address() {
              return pb_1.Message.getField(this, 1);
            }
            set validator_address(value) {
              pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
              const message = new MsgWithdrawValidatorCommission({});
              if (data.validator_address != null) {
                message.validator_address = data.validator_address;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.validator_address != null) {
                data.validator_address = this.validator_address;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.validator_address === "string" && this.validator_address.length)
                writer.writeString(1, this.validator_address);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgWithdrawValidatorCommission();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.validator_address = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgWithdrawValidatorCommission.deserialize(bytes);
            }
          }
          v1beta12.MsgWithdrawValidatorCommission = MsgWithdrawValidatorCommission;
          class MsgWithdrawValidatorCommissionResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
              }
            }
            static fromObject(data) {
              const message = new MsgWithdrawValidatorCommissionResponse({});
              return message;
            }
            toObject() {
              const data = {};
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgWithdrawValidatorCommissionResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgWithdrawValidatorCommissionResponse.deserialize(bytes);
            }
          }
          v1beta12.MsgWithdrawValidatorCommissionResponse = MsgWithdrawValidatorCommissionResponse;
          class MsgFundCommunityPool extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("amount" in data && data.amount != void 0) {
                  this.amount = data.amount;
                }
                if ("depositor" in data && data.depositor != void 0) {
                  this.depositor = data.depositor;
                }
              }
            }
            get amount() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_2.cosmos.base.v1beta1.Coin, 1);
            }
            set amount(value) {
              pb_1.Message.setRepeatedWrapperField(this, 1, value);
            }
            get depositor() {
              return pb_1.Message.getField(this, 2);
            }
            set depositor(value) {
              pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
              const message = new MsgFundCommunityPool({});
              if (data.amount != null) {
                message.amount = data.amount.map((item) => dependency_2.cosmos.base.v1beta1.Coin.fromObject(item));
              }
              if (data.depositor != null) {
                message.depositor = data.depositor;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.amount != null) {
                data.amount = this.amount.map((item) => item.toObject());
              }
              if (this.depositor != null) {
                data.depositor = this.depositor;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.amount !== void 0)
                writer.writeRepeatedMessage(1, this.amount, (item) => item.serialize(writer));
              if (typeof this.depositor === "string" && this.depositor.length)
                writer.writeString(2, this.depositor);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgFundCommunityPool();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.amount, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_2.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_2.cosmos.base.v1beta1.Coin));
                    break;
                  case 2:
                    message.depositor = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgFundCommunityPool.deserialize(bytes);
            }
          }
          v1beta12.MsgFundCommunityPool = MsgFundCommunityPool;
          class MsgFundCommunityPoolResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
              }
            }
            static fromObject(data) {
              const message = new MsgFundCommunityPoolResponse({});
              return message;
            }
            toObject() {
              const data = {};
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgFundCommunityPoolResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgFundCommunityPoolResponse.deserialize(bytes);
            }
          }
          v1beta12.MsgFundCommunityPoolResponse = MsgFundCommunityPoolResponse;
        })(v1beta1 = distribution2.v1beta1 || (distribution2.v1beta1 = {}));
      })(distribution = cosmos2.distribution || (cosmos2.distribution = {}));
    })(cosmos = exports2.cosmos || (exports2.cosmos = {}));
  }
});

// node_modules/@tharsis/proto/dist/messages/staking.js
var require_staking2 = __commonJS({
  "node_modules/@tharsis/proto/dist/messages/staking.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createMsgWithdrawValidatorCommission = exports2.createMsgWithdrawDelegatorReward = exports2.createMsgUndelegate = exports2.createMsgBeginRedelegate = exports2.createMsgDelegate = void 0;
    var staking = __importStar(require_tx5());
    var coin = __importStar(require_coin());
    var dist = __importStar(require_tx6());
    function createMsgDelegate(delegatorAddress, validatorAddress, amount, denom) {
      const value = new coin.cosmos.base.v1beta1.Coin({
        denom,
        amount
      });
      const message = new staking.cosmos.staking.v1beta1.MsgDelegate({
        delegator_address: delegatorAddress,
        validator_address: validatorAddress,
        amount: value
      });
      return {
        message,
        path: "cosmos.staking.v1beta1.MsgDelegate"
      };
    }
    exports2.createMsgDelegate = createMsgDelegate;
    function createMsgBeginRedelegate(delegatorAddress, validatorSrcAddress, validatorDstAddress, amount, denom) {
      const value = new coin.cosmos.base.v1beta1.Coin({
        denom,
        amount
      });
      const message = new staking.cosmos.staking.v1beta1.MsgBeginRedelegate({
        delegator_address: delegatorAddress,
        validator_src_address: validatorSrcAddress,
        validator_dst_address: validatorDstAddress,
        amount: value
      });
      return {
        message,
        path: "cosmos.staking.v1beta1.MsgBeginRedelegate"
      };
    }
    exports2.createMsgBeginRedelegate = createMsgBeginRedelegate;
    function createMsgUndelegate(delegatorAddress, validatorAddress, amount, denom) {
      const value = new coin.cosmos.base.v1beta1.Coin({
        denom,
        amount
      });
      const message = new staking.cosmos.staking.v1beta1.MsgUndelegate({
        delegator_address: delegatorAddress,
        validator_address: validatorAddress,
        amount: value
      });
      return {
        message,
        path: "cosmos.staking.v1beta1.MsgUndelegate"
      };
    }
    exports2.createMsgUndelegate = createMsgUndelegate;
    function createMsgWithdrawDelegatorReward(delegatorAddress, validatorAddress) {
      const message = new dist.cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward({
        delegator_address: delegatorAddress,
        validator_address: validatorAddress
      });
      return {
        message,
        path: "cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward"
      };
    }
    exports2.createMsgWithdrawDelegatorReward = createMsgWithdrawDelegatorReward;
    function createMsgWithdrawValidatorCommission(validatorAddress) {
      const message = new dist.cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission({
        validator_address: validatorAddress
      });
      return {
        message,
        path: "cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission"
      };
    }
    exports2.createMsgWithdrawValidatorCommission = createMsgWithdrawValidatorCommission;
  }
});

// node_modules/@tharsis/proto/dist/proto/cosmos/crypto/multisig/v1beta1/multisig.js
var require_multisig = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/cosmos/crypto/multisig/v1beta1/multisig.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.cosmos = void 0;
    var pb_1 = __importStar(require_google_protobuf());
    var cosmos;
    (function(cosmos2) {
      var crypto;
      (function(crypto2) {
        var multisig;
        (function(multisig2) {
          var v1beta1;
          (function(v1beta12) {
            class MultiSignature extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
                if (!Array.isArray(data) && typeof data == "object") {
                  if ("signatures" in data && data.signatures != void 0) {
                    this.signatures = data.signatures;
                  }
                }
              }
              get signatures() {
                return pb_1.Message.getField(this, 1);
              }
              set signatures(value) {
                pb_1.Message.setField(this, 1, value);
              }
              static fromObject(data) {
                const message = new MultiSignature({});
                if (data.signatures != null) {
                  message.signatures = data.signatures;
                }
                return message;
              }
              toObject() {
                const data = {};
                if (this.signatures != null) {
                  data.signatures = this.signatures;
                }
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.signatures !== void 0)
                  writer.writeRepeatedBytes(1, this.signatures);
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MultiSignature();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    case 1:
                      pb_1.Message.addToRepeatedField(message, 1, reader.readBytes());
                      break;
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return MultiSignature.deserialize(bytes);
              }
            }
            v1beta12.MultiSignature = MultiSignature;
            class CompactBitArray extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
                if (!Array.isArray(data) && typeof data == "object") {
                  if ("extra_bits_stored" in data && data.extra_bits_stored != void 0) {
                    this.extra_bits_stored = data.extra_bits_stored;
                  }
                  if ("elems" in data && data.elems != void 0) {
                    this.elems = data.elems;
                  }
                }
              }
              get extra_bits_stored() {
                return pb_1.Message.getField(this, 1);
              }
              set extra_bits_stored(value) {
                pb_1.Message.setField(this, 1, value);
              }
              get elems() {
                return pb_1.Message.getField(this, 2);
              }
              set elems(value) {
                pb_1.Message.setField(this, 2, value);
              }
              static fromObject(data) {
                const message = new CompactBitArray({});
                if (data.extra_bits_stored != null) {
                  message.extra_bits_stored = data.extra_bits_stored;
                }
                if (data.elems != null) {
                  message.elems = data.elems;
                }
                return message;
              }
              toObject() {
                const data = {};
                if (this.extra_bits_stored != null) {
                  data.extra_bits_stored = this.extra_bits_stored;
                }
                if (this.elems != null) {
                  data.elems = this.elems;
                }
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.extra_bits_stored !== void 0)
                  writer.writeUint32(1, this.extra_bits_stored);
                if (this.elems !== void 0)
                  writer.writeBytes(2, this.elems);
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CompactBitArray();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    case 1:
                      message.extra_bits_stored = reader.readUint32();
                      break;
                    case 2:
                      message.elems = reader.readBytes();
                      break;
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return CompactBitArray.deserialize(bytes);
              }
            }
            v1beta12.CompactBitArray = CompactBitArray;
          })(v1beta1 = multisig2.v1beta1 || (multisig2.v1beta1 = {}));
        })(multisig = crypto2.multisig || (crypto2.multisig = {}));
      })(crypto = cosmos2.crypto || (cosmos2.crypto = {}));
    })(cosmos = exports2.cosmos || (exports2.cosmos = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/cosmos/tx/v1beta1/tx.js
var require_tx7 = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/cosmos/tx/v1beta1/tx.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.cosmos = void 0;
    var dependency_2 = __importStar(require_multisig());
    var dependency_3 = __importStar(require_coin());
    var dependency_5 = __importStar(require_any());
    var pb_1 = __importStar(require_google_protobuf());
    var cosmos;
    (function(cosmos2) {
      var tx;
      (function(tx2) {
        var v1beta1;
        (function(v1beta12) {
          class Tx extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("body" in data && data.body != void 0) {
                  this.body = data.body;
                }
                if ("auth_info" in data && data.auth_info != void 0) {
                  this.auth_info = data.auth_info;
                }
                if ("signatures" in data && data.signatures != void 0) {
                  this.signatures = data.signatures;
                }
              }
            }
            get body() {
              return pb_1.Message.getWrapperField(this, TxBody, 1);
            }
            set body(value) {
              pb_1.Message.setWrapperField(this, 1, value);
            }
            get auth_info() {
              return pb_1.Message.getWrapperField(this, AuthInfo, 2);
            }
            set auth_info(value) {
              pb_1.Message.setWrapperField(this, 2, value);
            }
            get signatures() {
              return pb_1.Message.getField(this, 3);
            }
            set signatures(value) {
              pb_1.Message.setField(this, 3, value);
            }
            static fromObject(data) {
              const message = new Tx({});
              if (data.body != null) {
                message.body = TxBody.fromObject(data.body);
              }
              if (data.auth_info != null) {
                message.auth_info = AuthInfo.fromObject(data.auth_info);
              }
              if (data.signatures != null) {
                message.signatures = data.signatures;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.body != null) {
                data.body = this.body.toObject();
              }
              if (this.auth_info != null) {
                data.auth_info = this.auth_info.toObject();
              }
              if (this.signatures != null) {
                data.signatures = this.signatures;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.body !== void 0)
                writer.writeMessage(1, this.body, () => this.body.serialize(writer));
              if (this.auth_info !== void 0)
                writer.writeMessage(2, this.auth_info, () => this.auth_info.serialize(writer));
              if (this.signatures !== void 0)
                writer.writeRepeatedBytes(3, this.signatures);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Tx();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.body, () => message.body = TxBody.deserialize(reader));
                    break;
                  case 2:
                    reader.readMessage(message.auth_info, () => message.auth_info = AuthInfo.deserialize(reader));
                    break;
                  case 3:
                    pb_1.Message.addToRepeatedField(message, 3, reader.readBytes());
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Tx.deserialize(bytes);
            }
          }
          v1beta12.Tx = Tx;
          class TxRaw extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("body_bytes" in data && data.body_bytes != void 0) {
                  this.body_bytes = data.body_bytes;
                }
                if ("auth_info_bytes" in data && data.auth_info_bytes != void 0) {
                  this.auth_info_bytes = data.auth_info_bytes;
                }
                if ("signatures" in data && data.signatures != void 0) {
                  this.signatures = data.signatures;
                }
              }
            }
            get body_bytes() {
              return pb_1.Message.getField(this, 1);
            }
            set body_bytes(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get auth_info_bytes() {
              return pb_1.Message.getField(this, 2);
            }
            set auth_info_bytes(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get signatures() {
              return pb_1.Message.getField(this, 3);
            }
            set signatures(value) {
              pb_1.Message.setField(this, 3, value);
            }
            static fromObject(data) {
              const message = new TxRaw({});
              if (data.body_bytes != null) {
                message.body_bytes = data.body_bytes;
              }
              if (data.auth_info_bytes != null) {
                message.auth_info_bytes = data.auth_info_bytes;
              }
              if (data.signatures != null) {
                message.signatures = data.signatures;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.body_bytes != null) {
                data.body_bytes = this.body_bytes;
              }
              if (this.auth_info_bytes != null) {
                data.auth_info_bytes = this.auth_info_bytes;
              }
              if (this.signatures != null) {
                data.signatures = this.signatures;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.body_bytes !== void 0)
                writer.writeBytes(1, this.body_bytes);
              if (this.auth_info_bytes !== void 0)
                writer.writeBytes(2, this.auth_info_bytes);
              if (this.signatures !== void 0)
                writer.writeRepeatedBytes(3, this.signatures);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TxRaw();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.body_bytes = reader.readBytes();
                    break;
                  case 2:
                    message.auth_info_bytes = reader.readBytes();
                    break;
                  case 3:
                    pb_1.Message.addToRepeatedField(message, 3, reader.readBytes());
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return TxRaw.deserialize(bytes);
            }
          }
          v1beta12.TxRaw = TxRaw;
          class SignDoc extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("body_bytes" in data && data.body_bytes != void 0) {
                  this.body_bytes = data.body_bytes;
                }
                if ("auth_info_bytes" in data && data.auth_info_bytes != void 0) {
                  this.auth_info_bytes = data.auth_info_bytes;
                }
                if ("chain_id" in data && data.chain_id != void 0) {
                  this.chain_id = data.chain_id;
                }
                if ("account_number" in data && data.account_number != void 0) {
                  this.account_number = data.account_number;
                }
              }
            }
            get body_bytes() {
              return pb_1.Message.getField(this, 1);
            }
            set body_bytes(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get auth_info_bytes() {
              return pb_1.Message.getField(this, 2);
            }
            set auth_info_bytes(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get chain_id() {
              return pb_1.Message.getField(this, 3);
            }
            set chain_id(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get account_number() {
              return pb_1.Message.getField(this, 4);
            }
            set account_number(value) {
              pb_1.Message.setField(this, 4, value);
            }
            static fromObject(data) {
              const message = new SignDoc({});
              if (data.body_bytes != null) {
                message.body_bytes = data.body_bytes;
              }
              if (data.auth_info_bytes != null) {
                message.auth_info_bytes = data.auth_info_bytes;
              }
              if (data.chain_id != null) {
                message.chain_id = data.chain_id;
              }
              if (data.account_number != null) {
                message.account_number = data.account_number;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.body_bytes != null) {
                data.body_bytes = this.body_bytes;
              }
              if (this.auth_info_bytes != null) {
                data.auth_info_bytes = this.auth_info_bytes;
              }
              if (this.chain_id != null) {
                data.chain_id = this.chain_id;
              }
              if (this.account_number != null) {
                data.account_number = this.account_number;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.body_bytes !== void 0)
                writer.writeBytes(1, this.body_bytes);
              if (this.auth_info_bytes !== void 0)
                writer.writeBytes(2, this.auth_info_bytes);
              if (typeof this.chain_id === "string" && this.chain_id.length)
                writer.writeString(3, this.chain_id);
              if (this.account_number !== void 0)
                writer.writeUint64(4, this.account_number);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SignDoc();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.body_bytes = reader.readBytes();
                    break;
                  case 2:
                    message.auth_info_bytes = reader.readBytes();
                    break;
                  case 3:
                    message.chain_id = reader.readString();
                    break;
                  case 4:
                    message.account_number = reader.readUint64();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return SignDoc.deserialize(bytes);
            }
          }
          v1beta12.SignDoc = SignDoc;
          class TxBody extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1, 1023, 2047], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("messages" in data && data.messages != void 0) {
                  this.messages = data.messages;
                }
                if ("memo" in data && data.memo != void 0) {
                  this.memo = data.memo;
                }
                if ("timeout_height" in data && data.timeout_height != void 0) {
                  this.timeout_height = data.timeout_height;
                }
                if ("extension_options" in data && data.extension_options != void 0) {
                  this.extension_options = data.extension_options;
                }
                if ("non_critical_extension_options" in data && data.non_critical_extension_options != void 0) {
                  this.non_critical_extension_options = data.non_critical_extension_options;
                }
              }
            }
            get messages() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_5.google.protobuf.Any, 1);
            }
            set messages(value) {
              pb_1.Message.setRepeatedWrapperField(this, 1, value);
            }
            get memo() {
              return pb_1.Message.getField(this, 2);
            }
            set memo(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get timeout_height() {
              return pb_1.Message.getField(this, 3);
            }
            set timeout_height(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get extension_options() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_5.google.protobuf.Any, 1023);
            }
            set extension_options(value) {
              pb_1.Message.setRepeatedWrapperField(this, 1023, value);
            }
            get non_critical_extension_options() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_5.google.protobuf.Any, 2047);
            }
            set non_critical_extension_options(value) {
              pb_1.Message.setRepeatedWrapperField(this, 2047, value);
            }
            static fromObject(data) {
              const message = new TxBody({});
              if (data.messages != null) {
                message.messages = data.messages.map((item) => dependency_5.google.protobuf.Any.fromObject(item));
              }
              if (data.memo != null) {
                message.memo = data.memo;
              }
              if (data.timeout_height != null) {
                message.timeout_height = data.timeout_height;
              }
              if (data.extension_options != null) {
                message.extension_options = data.extension_options.map((item) => dependency_5.google.protobuf.Any.fromObject(item));
              }
              if (data.non_critical_extension_options != null) {
                message.non_critical_extension_options = data.non_critical_extension_options.map((item) => dependency_5.google.protobuf.Any.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.messages != null) {
                data.messages = this.messages.map((item) => item.toObject());
              }
              if (this.memo != null) {
                data.memo = this.memo;
              }
              if (this.timeout_height != null) {
                data.timeout_height = this.timeout_height;
              }
              if (this.extension_options != null) {
                data.extension_options = this.extension_options.map((item) => item.toObject());
              }
              if (this.non_critical_extension_options != null) {
                data.non_critical_extension_options = this.non_critical_extension_options.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.messages !== void 0)
                writer.writeRepeatedMessage(1, this.messages, (item) => item.serialize(writer));
              if (typeof this.memo === "string" && this.memo.length)
                writer.writeString(2, this.memo);
              if (this.timeout_height !== void 0)
                writer.writeUint64(3, this.timeout_height);
              if (this.extension_options !== void 0)
                writer.writeRepeatedMessage(1023, this.extension_options, (item) => item.serialize(writer));
              if (this.non_critical_extension_options !== void 0)
                writer.writeRepeatedMessage(2047, this.non_critical_extension_options, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TxBody();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.messages, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_5.google.protobuf.Any.deserialize(reader), dependency_5.google.protobuf.Any));
                    break;
                  case 2:
                    message.memo = reader.readString();
                    break;
                  case 3:
                    message.timeout_height = reader.readUint64();
                    break;
                  case 1023:
                    reader.readMessage(message.extension_options, () => pb_1.Message.addToRepeatedWrapperField(message, 1023, dependency_5.google.protobuf.Any.deserialize(reader), dependency_5.google.protobuf.Any));
                    break;
                  case 2047:
                    reader.readMessage(message.non_critical_extension_options, () => pb_1.Message.addToRepeatedWrapperField(message, 2047, dependency_5.google.protobuf.Any.deserialize(reader), dependency_5.google.protobuf.Any));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return TxBody.deserialize(bytes);
            }
          }
          v1beta12.TxBody = TxBody;
          class AuthInfo extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("signer_infos" in data && data.signer_infos != void 0) {
                  this.signer_infos = data.signer_infos;
                }
                if ("fee" in data && data.fee != void 0) {
                  this.fee = data.fee;
                }
              }
            }
            get signer_infos() {
              return pb_1.Message.getRepeatedWrapperField(this, SignerInfo, 1);
            }
            set signer_infos(value) {
              pb_1.Message.setRepeatedWrapperField(this, 1, value);
            }
            get fee() {
              return pb_1.Message.getWrapperField(this, Fee, 2);
            }
            set fee(value) {
              pb_1.Message.setWrapperField(this, 2, value);
            }
            static fromObject(data) {
              const message = new AuthInfo({});
              if (data.signer_infos != null) {
                message.signer_infos = data.signer_infos.map((item) => SignerInfo.fromObject(item));
              }
              if (data.fee != null) {
                message.fee = Fee.fromObject(data.fee);
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.signer_infos != null) {
                data.signer_infos = this.signer_infos.map((item) => item.toObject());
              }
              if (this.fee != null) {
                data.fee = this.fee.toObject();
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.signer_infos !== void 0)
                writer.writeRepeatedMessage(1, this.signer_infos, (item) => item.serialize(writer));
              if (this.fee !== void 0)
                writer.writeMessage(2, this.fee, () => this.fee.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AuthInfo();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.signer_infos, () => pb_1.Message.addToRepeatedWrapperField(message, 1, SignerInfo.deserialize(reader), SignerInfo));
                    break;
                  case 2:
                    reader.readMessage(message.fee, () => message.fee = Fee.deserialize(reader));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return AuthInfo.deserialize(bytes);
            }
          }
          v1beta12.AuthInfo = AuthInfo;
          class SignerInfo extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("public_key" in data && data.public_key != void 0) {
                  this.public_key = data.public_key;
                }
                if ("mode_info" in data && data.mode_info != void 0) {
                  this.mode_info = data.mode_info;
                }
                if ("sequence" in data && data.sequence != void 0) {
                  this.sequence = data.sequence;
                }
              }
            }
            get public_key() {
              return pb_1.Message.getWrapperField(this, dependency_5.google.protobuf.Any, 1);
            }
            set public_key(value) {
              pb_1.Message.setWrapperField(this, 1, value);
            }
            get mode_info() {
              return pb_1.Message.getWrapperField(this, ModeInfo, 2);
            }
            set mode_info(value) {
              pb_1.Message.setWrapperField(this, 2, value);
            }
            get sequence() {
              return pb_1.Message.getField(this, 3);
            }
            set sequence(value) {
              pb_1.Message.setField(this, 3, value);
            }
            static fromObject(data) {
              const message = new SignerInfo({});
              if (data.public_key != null) {
                message.public_key = dependency_5.google.protobuf.Any.fromObject(data.public_key);
              }
              if (data.mode_info != null) {
                message.mode_info = ModeInfo.fromObject(data.mode_info);
              }
              if (data.sequence != null) {
                message.sequence = data.sequence;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.public_key != null) {
                data.public_key = this.public_key.toObject();
              }
              if (this.mode_info != null) {
                data.mode_info = this.mode_info.toObject();
              }
              if (this.sequence != null) {
                data.sequence = this.sequence;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.public_key !== void 0)
                writer.writeMessage(1, this.public_key, () => this.public_key.serialize(writer));
              if (this.mode_info !== void 0)
                writer.writeMessage(2, this.mode_info, () => this.mode_info.serialize(writer));
              if (this.sequence !== void 0)
                writer.writeUint64(3, this.sequence);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SignerInfo();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.public_key, () => message.public_key = dependency_5.google.protobuf.Any.deserialize(reader));
                    break;
                  case 2:
                    reader.readMessage(message.mode_info, () => message.mode_info = ModeInfo.deserialize(reader));
                    break;
                  case 3:
                    message.sequence = reader.readUint64();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return SignerInfo.deserialize(bytes);
            }
          }
          v1beta12.SignerInfo = SignerInfo;
          class ModeInfo extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], [[1, 2]]);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("single" in data && data.single != void 0) {
                  this.single = data.single;
                }
                if ("multi" in data && data.multi != void 0) {
                  this.multi = data.multi;
                }
              }
            }
            get single() {
              return pb_1.Message.getWrapperField(this, ModeInfo.Single, 1);
            }
            set single(value) {
              pb_1.Message.setOneofWrapperField(this, 1, [1, 2], value);
            }
            get multi() {
              return pb_1.Message.getWrapperField(this, ModeInfo.Multi, 2);
            }
            set multi(value) {
              pb_1.Message.setOneofWrapperField(this, 2, [1, 2], value);
            }
            get sum() {
              const cases = {
                0: "none",
                1: "single",
                2: "multi"
              };
              return cases[pb_1.Message.computeOneofCase(this, [1, 2])];
            }
            static fromObject(data) {
              const message = new ModeInfo({});
              if (data.single != null) {
                message.single = ModeInfo.Single.fromObject(data.single);
              }
              if (data.multi != null) {
                message.multi = ModeInfo.Multi.fromObject(data.multi);
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.single != null) {
                data.single = this.single.toObject();
              }
              if (this.multi != null) {
                data.multi = this.multi.toObject();
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.single !== void 0)
                writer.writeMessage(1, this.single, () => this.single.serialize(writer));
              if (this.multi !== void 0)
                writer.writeMessage(2, this.multi, () => this.multi.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ModeInfo();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.single, () => message.single = ModeInfo.Single.deserialize(reader));
                    break;
                  case 2:
                    reader.readMessage(message.multi, () => message.multi = ModeInfo.Multi.deserialize(reader));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return ModeInfo.deserialize(bytes);
            }
          }
          v1beta12.ModeInfo = ModeInfo;
          (function(ModeInfo2) {
            class Single extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
                if (!Array.isArray(data) && typeof data == "object") {
                  if ("mode" in data && data.mode != void 0) {
                    this.mode = data.mode;
                  }
                }
              }
              get mode() {
                return pb_1.Message.getField(this, 1);
              }
              set mode(value) {
                pb_1.Message.setField(this, 1, value);
              }
              static fromObject(data) {
                const message = new Single({});
                if (data.mode != null) {
                  message.mode = data.mode;
                }
                return message;
              }
              toObject() {
                const data = {};
                if (this.mode != null) {
                  data.mode = this.mode;
                }
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.mode !== void 0)
                  writer.writeEnum(1, this.mode);
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Single();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    case 1:
                      message.mode = reader.readEnum();
                      break;
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return Single.deserialize(bytes);
              }
            }
            ModeInfo2.Single = Single;
            class Multi extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);
                if (!Array.isArray(data) && typeof data == "object") {
                  if ("bitarray" in data && data.bitarray != void 0) {
                    this.bitarray = data.bitarray;
                  }
                  if ("mode_infos" in data && data.mode_infos != void 0) {
                    this.mode_infos = data.mode_infos;
                  }
                }
              }
              get bitarray() {
                return pb_1.Message.getWrapperField(this, dependency_2.cosmos.crypto.multisig.v1beta1.CompactBitArray, 1);
              }
              set bitarray(value) {
                pb_1.Message.setWrapperField(this, 1, value);
              }
              get mode_infos() {
                return pb_1.Message.getRepeatedWrapperField(this, ModeInfo2, 2);
              }
              set mode_infos(value) {
                pb_1.Message.setRepeatedWrapperField(this, 2, value);
              }
              static fromObject(data) {
                const message = new Multi({});
                if (data.bitarray != null) {
                  message.bitarray = dependency_2.cosmos.crypto.multisig.v1beta1.CompactBitArray.fromObject(data.bitarray);
                }
                if (data.mode_infos != null) {
                  message.mode_infos = data.mode_infos.map((item) => ModeInfo2.fromObject(item));
                }
                return message;
              }
              toObject() {
                const data = {};
                if (this.bitarray != null) {
                  data.bitarray = this.bitarray.toObject();
                }
                if (this.mode_infos != null) {
                  data.mode_infos = this.mode_infos.map((item) => item.toObject());
                }
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.bitarray !== void 0)
                  writer.writeMessage(1, this.bitarray, () => this.bitarray.serialize(writer));
                if (this.mode_infos !== void 0)
                  writer.writeRepeatedMessage(2, this.mode_infos, (item) => item.serialize(writer));
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Multi();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    case 1:
                      reader.readMessage(message.bitarray, () => message.bitarray = dependency_2.cosmos.crypto.multisig.v1beta1.CompactBitArray.deserialize(reader));
                      break;
                    case 2:
                      reader.readMessage(message.mode_infos, () => pb_1.Message.addToRepeatedWrapperField(message, 2, ModeInfo2.deserialize(reader), ModeInfo2));
                      break;
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return Multi.deserialize(bytes);
              }
            }
            ModeInfo2.Multi = Multi;
          })(ModeInfo = v1beta12.ModeInfo || (v1beta12.ModeInfo = {}));
          class Fee extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("amount" in data && data.amount != void 0) {
                  this.amount = data.amount;
                }
                if ("gas_limit" in data && data.gas_limit != void 0) {
                  this.gas_limit = data.gas_limit;
                }
                if ("payer" in data && data.payer != void 0) {
                  this.payer = data.payer;
                }
                if ("granter" in data && data.granter != void 0) {
                  this.granter = data.granter;
                }
              }
            }
            get amount() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.base.v1beta1.Coin, 1);
            }
            set amount(value) {
              pb_1.Message.setRepeatedWrapperField(this, 1, value);
            }
            get gas_limit() {
              return pb_1.Message.getField(this, 2);
            }
            set gas_limit(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get payer() {
              return pb_1.Message.getField(this, 3);
            }
            set payer(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get granter() {
              return pb_1.Message.getField(this, 4);
            }
            set granter(value) {
              pb_1.Message.setField(this, 4, value);
            }
            static fromObject(data) {
              const message = new Fee({});
              if (data.amount != null) {
                message.amount = data.amount.map((item) => dependency_3.cosmos.base.v1beta1.Coin.fromObject(item));
              }
              if (data.gas_limit != null) {
                message.gas_limit = data.gas_limit;
              }
              if (data.payer != null) {
                message.payer = data.payer;
              }
              if (data.granter != null) {
                message.granter = data.granter;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.amount != null) {
                data.amount = this.amount.map((item) => item.toObject());
              }
              if (this.gas_limit != null) {
                data.gas_limit = this.gas_limit;
              }
              if (this.payer != null) {
                data.payer = this.payer;
              }
              if (this.granter != null) {
                data.granter = this.granter;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.amount !== void 0)
                writer.writeRepeatedMessage(1, this.amount, (item) => item.serialize(writer));
              if (this.gas_limit !== void 0)
                writer.writeUint64(2, this.gas_limit);
              if (typeof this.payer === "string" && this.payer.length)
                writer.writeString(3, this.payer);
              if (typeof this.granter === "string" && this.granter.length)
                writer.writeString(4, this.granter);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Fee();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.amount, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_3.cosmos.base.v1beta1.Coin));
                    break;
                  case 2:
                    message.gas_limit = reader.readUint64();
                    break;
                  case 3:
                    message.payer = reader.readString();
                    break;
                  case 4:
                    message.granter = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Fee.deserialize(bytes);
            }
          }
          v1beta12.Fee = Fee;
        })(v1beta1 = tx2.v1beta1 || (tx2.v1beta1 = {}));
      })(tx = cosmos2.tx || (cosmos2.tx = {}));
    })(cosmos = exports2.cosmos || (exports2.cosmos = {}));
  }
});

// node_modules/@tharsis/proto/dist/messages/txRaw.js
var require_txRaw = __commonJS({
  "node_modules/@tharsis/proto/dist/messages/txRaw.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createTxRaw = exports2.bytesToAuthInfo = exports2.bytesToTxBody = exports2.bytesToTxRaw = void 0;
    var tx = __importStar(require_tx7());
    function bytesToTxRaw(bytes) {
      return tx.cosmos.tx.v1beta1.TxRaw.deserialize(bytes);
    }
    exports2.bytesToTxRaw = bytesToTxRaw;
    function bytesToTxBody(bytes) {
      return tx.cosmos.tx.v1beta1.TxBody.deserialize(bytes);
    }
    exports2.bytesToTxBody = bytesToTxBody;
    function bytesToAuthInfo(bytes) {
      return tx.cosmos.tx.v1beta1.AuthInfo.deserialize(bytes);
    }
    exports2.bytesToAuthInfo = bytesToAuthInfo;
    function createTxRaw(bodyBytes, authInfoBytes, signatures) {
      const message = new tx.cosmos.tx.v1beta1.TxRaw({
        body_bytes: bodyBytes,
        auth_info_bytes: authInfoBytes,
        signatures
      });
      return {
        message,
        path: "cosmos.tx.v1beta1.TxRaw"
      };
    }
    exports2.createTxRaw = createTxRaw;
  }
});

// node_modules/@tharsis/proto/dist/messages/utils.js
var require_utils = __commonJS({
  "node_modules/@tharsis/proto/dist/messages/utils.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createAnyMessage = void 0;
    var google = __importStar(require_any());
    function createAnyMessage(msg) {
      return new google.google.protobuf.Any({
        type_url: `/${msg.path}`,
        value: msg.message.serializeBinary()
      });
    }
    exports2.createAnyMessage = createAnyMessage;
  }
});

// node_modules/@tharsis/proto/dist/messages/validator.js
var require_validator2 = __commonJS({
  "node_modules/@tharsis/proto/dist/messages/validator.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createMsgEditValidator = void 0;
    var stakingTypes = __importStar(require_staking());
    var staking = __importStar(require_tx5());
    var NOT_MODIFY = "[do-not-modify]";
    function createMsgEditValidator(moniker, identity, website, securityContact, details, validatorAddress, commissionRate, minSelfDelegation) {
      const message = new staking.cosmos.staking.v1beta1.MsgEditValidator({
        description: new stakingTypes.cosmos.staking.v1beta1.Description({
          moniker: moniker || NOT_MODIFY,
          identity: identity || NOT_MODIFY,
          website: website || NOT_MODIFY,
          security_contact: securityContact || NOT_MODIFY,
          details: details || NOT_MODIFY
        }),
        validator_address: validatorAddress,
        commission_rate: commissionRate,
        min_self_delegation: minSelfDelegation
      });
      return {
        message,
        path: "cosmos.staking.v1beta1.MsgEditValidator"
      };
    }
    exports2.createMsgEditValidator = createMsgEditValidator;
  }
});

// node_modules/@tharsis/proto/dist/proto/cosmos/gov/v1beta1/gov.js
var require_gov = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/cosmos/gov/v1beta1/gov.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.cosmos = void 0;
    var dependency_1 = __importStar(require_coin());
    var dependency_4 = __importStar(require_timestamp());
    var dependency_5 = __importStar(require_any());
    var dependency_6 = __importStar(require_duration());
    var pb_1 = __importStar(require_google_protobuf());
    var cosmos;
    (function(cosmos2) {
      var gov;
      (function(gov2) {
        var v1beta1;
        (function(v1beta12) {
          let VoteOption;
          (function(VoteOption2) {
            VoteOption2[VoteOption2["VOTE_OPTION_UNSPECIFIED"] = 0] = "VOTE_OPTION_UNSPECIFIED";
            VoteOption2[VoteOption2["VOTE_OPTION_YES"] = 1] = "VOTE_OPTION_YES";
            VoteOption2[VoteOption2["VOTE_OPTION_ABSTAIN"] = 2] = "VOTE_OPTION_ABSTAIN";
            VoteOption2[VoteOption2["VOTE_OPTION_NO"] = 3] = "VOTE_OPTION_NO";
            VoteOption2[VoteOption2["VOTE_OPTION_NO_WITH_VETO"] = 4] = "VOTE_OPTION_NO_WITH_VETO";
          })(VoteOption = v1beta12.VoteOption || (v1beta12.VoteOption = {}));
          let ProposalStatus;
          (function(ProposalStatus2) {
            ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_UNSPECIFIED"] = 0] = "PROPOSAL_STATUS_UNSPECIFIED";
            ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_DEPOSIT_PERIOD"] = 1] = "PROPOSAL_STATUS_DEPOSIT_PERIOD";
            ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_VOTING_PERIOD"] = 2] = "PROPOSAL_STATUS_VOTING_PERIOD";
            ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_PASSED"] = 3] = "PROPOSAL_STATUS_PASSED";
            ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_REJECTED"] = 4] = "PROPOSAL_STATUS_REJECTED";
            ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_FAILED"] = 5] = "PROPOSAL_STATUS_FAILED";
          })(ProposalStatus = v1beta12.ProposalStatus || (v1beta12.ProposalStatus = {}));
          class WeightedVoteOption extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("option" in data && data.option != void 0) {
                  this.option = data.option;
                }
                if ("weight" in data && data.weight != void 0) {
                  this.weight = data.weight;
                }
              }
            }
            get option() {
              return pb_1.Message.getField(this, 1);
            }
            set option(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get weight() {
              return pb_1.Message.getField(this, 2);
            }
            set weight(value) {
              pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
              const message = new WeightedVoteOption({});
              if (data.option != null) {
                message.option = data.option;
              }
              if (data.weight != null) {
                message.weight = data.weight;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.option != null) {
                data.option = this.option;
              }
              if (this.weight != null) {
                data.weight = this.weight;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.option !== void 0)
                writer.writeEnum(1, this.option);
              if (typeof this.weight === "string" && this.weight.length)
                writer.writeString(2, this.weight);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new WeightedVoteOption();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.option = reader.readEnum();
                    break;
                  case 2:
                    message.weight = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return WeightedVoteOption.deserialize(bytes);
            }
          }
          v1beta12.WeightedVoteOption = WeightedVoteOption;
          class TextProposal extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("title" in data && data.title != void 0) {
                  this.title = data.title;
                }
                if ("description" in data && data.description != void 0) {
                  this.description = data.description;
                }
              }
            }
            get title() {
              return pb_1.Message.getField(this, 1);
            }
            set title(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get description() {
              return pb_1.Message.getField(this, 2);
            }
            set description(value) {
              pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
              const message = new TextProposal({});
              if (data.title != null) {
                message.title = data.title;
              }
              if (data.description != null) {
                message.description = data.description;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.title != null) {
                data.title = this.title;
              }
              if (this.description != null) {
                data.description = this.description;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.title === "string" && this.title.length)
                writer.writeString(1, this.title);
              if (typeof this.description === "string" && this.description.length)
                writer.writeString(2, this.description);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TextProposal();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.title = reader.readString();
                    break;
                  case 2:
                    message.description = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return TextProposal.deserialize(bytes);
            }
          }
          v1beta12.TextProposal = TextProposal;
          class Deposit extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("proposal_id" in data && data.proposal_id != void 0) {
                  this.proposal_id = data.proposal_id;
                }
                if ("depositor" in data && data.depositor != void 0) {
                  this.depositor = data.depositor;
                }
                if ("amount" in data && data.amount != void 0) {
                  this.amount = data.amount;
                }
              }
            }
            get proposal_id() {
              return pb_1.Message.getField(this, 1);
            }
            set proposal_id(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get depositor() {
              return pb_1.Message.getField(this, 2);
            }
            set depositor(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get amount() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_1.cosmos.base.v1beta1.Coin, 3);
            }
            set amount(value) {
              pb_1.Message.setRepeatedWrapperField(this, 3, value);
            }
            static fromObject(data) {
              const message = new Deposit({});
              if (data.proposal_id != null) {
                message.proposal_id = data.proposal_id;
              }
              if (data.depositor != null) {
                message.depositor = data.depositor;
              }
              if (data.amount != null) {
                message.amount = data.amount.map((item) => dependency_1.cosmos.base.v1beta1.Coin.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.proposal_id != null) {
                data.proposal_id = this.proposal_id;
              }
              if (this.depositor != null) {
                data.depositor = this.depositor;
              }
              if (this.amount != null) {
                data.amount = this.amount.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.proposal_id !== void 0)
                writer.writeUint64(1, this.proposal_id);
              if (typeof this.depositor === "string" && this.depositor.length)
                writer.writeString(2, this.depositor);
              if (this.amount !== void 0)
                writer.writeRepeatedMessage(3, this.amount, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Deposit();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.proposal_id = reader.readUint64();
                    break;
                  case 2:
                    message.depositor = reader.readString();
                    break;
                  case 3:
                    reader.readMessage(message.amount, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_1.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_1.cosmos.base.v1beta1.Coin));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Deposit.deserialize(bytes);
            }
          }
          v1beta12.Deposit = Deposit;
          class Proposal extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [7], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("proposal_id" in data && data.proposal_id != void 0) {
                  this.proposal_id = data.proposal_id;
                }
                if ("content" in data && data.content != void 0) {
                  this.content = data.content;
                }
                if ("status" in data && data.status != void 0) {
                  this.status = data.status;
                }
                if ("final_tally_result" in data && data.final_tally_result != void 0) {
                  this.final_tally_result = data.final_tally_result;
                }
                if ("submit_time" in data && data.submit_time != void 0) {
                  this.submit_time = data.submit_time;
                }
                if ("deposit_end_time" in data && data.deposit_end_time != void 0) {
                  this.deposit_end_time = data.deposit_end_time;
                }
                if ("total_deposit" in data && data.total_deposit != void 0) {
                  this.total_deposit = data.total_deposit;
                }
                if ("voting_start_time" in data && data.voting_start_time != void 0) {
                  this.voting_start_time = data.voting_start_time;
                }
                if ("voting_end_time" in data && data.voting_end_time != void 0) {
                  this.voting_end_time = data.voting_end_time;
                }
              }
            }
            get proposal_id() {
              return pb_1.Message.getField(this, 1);
            }
            set proposal_id(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get content() {
              return pb_1.Message.getWrapperField(this, dependency_5.google.protobuf.Any, 2);
            }
            set content(value) {
              pb_1.Message.setWrapperField(this, 2, value);
            }
            get status() {
              return pb_1.Message.getField(this, 3);
            }
            set status(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get final_tally_result() {
              return pb_1.Message.getWrapperField(this, TallyResult, 4);
            }
            set final_tally_result(value) {
              pb_1.Message.setWrapperField(this, 4, value);
            }
            get submit_time() {
              return pb_1.Message.getWrapperField(this, dependency_4.google.protobuf.Timestamp, 5);
            }
            set submit_time(value) {
              pb_1.Message.setWrapperField(this, 5, value);
            }
            get deposit_end_time() {
              return pb_1.Message.getWrapperField(this, dependency_4.google.protobuf.Timestamp, 6);
            }
            set deposit_end_time(value) {
              pb_1.Message.setWrapperField(this, 6, value);
            }
            get total_deposit() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_1.cosmos.base.v1beta1.Coin, 7);
            }
            set total_deposit(value) {
              pb_1.Message.setRepeatedWrapperField(this, 7, value);
            }
            get voting_start_time() {
              return pb_1.Message.getWrapperField(this, dependency_4.google.protobuf.Timestamp, 8);
            }
            set voting_start_time(value) {
              pb_1.Message.setWrapperField(this, 8, value);
            }
            get voting_end_time() {
              return pb_1.Message.getWrapperField(this, dependency_4.google.protobuf.Timestamp, 9);
            }
            set voting_end_time(value) {
              pb_1.Message.setWrapperField(this, 9, value);
            }
            static fromObject(data) {
              const message = new Proposal({});
              if (data.proposal_id != null) {
                message.proposal_id = data.proposal_id;
              }
              if (data.content != null) {
                message.content = dependency_5.google.protobuf.Any.fromObject(data.content);
              }
              if (data.status != null) {
                message.status = data.status;
              }
              if (data.final_tally_result != null) {
                message.final_tally_result = TallyResult.fromObject(data.final_tally_result);
              }
              if (data.submit_time != null) {
                message.submit_time = dependency_4.google.protobuf.Timestamp.fromObject(data.submit_time);
              }
              if (data.deposit_end_time != null) {
                message.deposit_end_time = dependency_4.google.protobuf.Timestamp.fromObject(data.deposit_end_time);
              }
              if (data.total_deposit != null) {
                message.total_deposit = data.total_deposit.map((item) => dependency_1.cosmos.base.v1beta1.Coin.fromObject(item));
              }
              if (data.voting_start_time != null) {
                message.voting_start_time = dependency_4.google.protobuf.Timestamp.fromObject(data.voting_start_time);
              }
              if (data.voting_end_time != null) {
                message.voting_end_time = dependency_4.google.protobuf.Timestamp.fromObject(data.voting_end_time);
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.proposal_id != null) {
                data.proposal_id = this.proposal_id;
              }
              if (this.content != null) {
                data.content = this.content.toObject();
              }
              if (this.status != null) {
                data.status = this.status;
              }
              if (this.final_tally_result != null) {
                data.final_tally_result = this.final_tally_result.toObject();
              }
              if (this.submit_time != null) {
                data.submit_time = this.submit_time.toObject();
              }
              if (this.deposit_end_time != null) {
                data.deposit_end_time = this.deposit_end_time.toObject();
              }
              if (this.total_deposit != null) {
                data.total_deposit = this.total_deposit.map((item) => item.toObject());
              }
              if (this.voting_start_time != null) {
                data.voting_start_time = this.voting_start_time.toObject();
              }
              if (this.voting_end_time != null) {
                data.voting_end_time = this.voting_end_time.toObject();
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.proposal_id !== void 0)
                writer.writeUint64(1, this.proposal_id);
              if (this.content !== void 0)
                writer.writeMessage(2, this.content, () => this.content.serialize(writer));
              if (this.status !== void 0)
                writer.writeEnum(3, this.status);
              if (this.final_tally_result !== void 0)
                writer.writeMessage(4, this.final_tally_result, () => this.final_tally_result.serialize(writer));
              if (this.submit_time !== void 0)
                writer.writeMessage(5, this.submit_time, () => this.submit_time.serialize(writer));
              if (this.deposit_end_time !== void 0)
                writer.writeMessage(6, this.deposit_end_time, () => this.deposit_end_time.serialize(writer));
              if (this.total_deposit !== void 0)
                writer.writeRepeatedMessage(7, this.total_deposit, (item) => item.serialize(writer));
              if (this.voting_start_time !== void 0)
                writer.writeMessage(8, this.voting_start_time, () => this.voting_start_time.serialize(writer));
              if (this.voting_end_time !== void 0)
                writer.writeMessage(9, this.voting_end_time, () => this.voting_end_time.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Proposal();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.proposal_id = reader.readUint64();
                    break;
                  case 2:
                    reader.readMessage(message.content, () => message.content = dependency_5.google.protobuf.Any.deserialize(reader));
                    break;
                  case 3:
                    message.status = reader.readEnum();
                    break;
                  case 4:
                    reader.readMessage(message.final_tally_result, () => message.final_tally_result = TallyResult.deserialize(reader));
                    break;
                  case 5:
                    reader.readMessage(message.submit_time, () => message.submit_time = dependency_4.google.protobuf.Timestamp.deserialize(reader));
                    break;
                  case 6:
                    reader.readMessage(message.deposit_end_time, () => message.deposit_end_time = dependency_4.google.protobuf.Timestamp.deserialize(reader));
                    break;
                  case 7:
                    reader.readMessage(message.total_deposit, () => pb_1.Message.addToRepeatedWrapperField(message, 7, dependency_1.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_1.cosmos.base.v1beta1.Coin));
                    break;
                  case 8:
                    reader.readMessage(message.voting_start_time, () => message.voting_start_time = dependency_4.google.protobuf.Timestamp.deserialize(reader));
                    break;
                  case 9:
                    reader.readMessage(message.voting_end_time, () => message.voting_end_time = dependency_4.google.protobuf.Timestamp.deserialize(reader));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Proposal.deserialize(bytes);
            }
          }
          v1beta12.Proposal = Proposal;
          class TallyResult extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("yes" in data && data.yes != void 0) {
                  this.yes = data.yes;
                }
                if ("abstain" in data && data.abstain != void 0) {
                  this.abstain = data.abstain;
                }
                if ("no" in data && data.no != void 0) {
                  this.no = data.no;
                }
                if ("no_with_veto" in data && data.no_with_veto != void 0) {
                  this.no_with_veto = data.no_with_veto;
                }
              }
            }
            get yes() {
              return pb_1.Message.getField(this, 1);
            }
            set yes(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get abstain() {
              return pb_1.Message.getField(this, 2);
            }
            set abstain(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get no() {
              return pb_1.Message.getField(this, 3);
            }
            set no(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get no_with_veto() {
              return pb_1.Message.getField(this, 4);
            }
            set no_with_veto(value) {
              pb_1.Message.setField(this, 4, value);
            }
            static fromObject(data) {
              const message = new TallyResult({});
              if (data.yes != null) {
                message.yes = data.yes;
              }
              if (data.abstain != null) {
                message.abstain = data.abstain;
              }
              if (data.no != null) {
                message.no = data.no;
              }
              if (data.no_with_veto != null) {
                message.no_with_veto = data.no_with_veto;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.yes != null) {
                data.yes = this.yes;
              }
              if (this.abstain != null) {
                data.abstain = this.abstain;
              }
              if (this.no != null) {
                data.no = this.no;
              }
              if (this.no_with_veto != null) {
                data.no_with_veto = this.no_with_veto;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (typeof this.yes === "string" && this.yes.length)
                writer.writeString(1, this.yes);
              if (typeof this.abstain === "string" && this.abstain.length)
                writer.writeString(2, this.abstain);
              if (typeof this.no === "string" && this.no.length)
                writer.writeString(3, this.no);
              if (typeof this.no_with_veto === "string" && this.no_with_veto.length)
                writer.writeString(4, this.no_with_veto);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TallyResult();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.yes = reader.readString();
                    break;
                  case 2:
                    message.abstain = reader.readString();
                    break;
                  case 3:
                    message.no = reader.readString();
                    break;
                  case 4:
                    message.no_with_veto = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return TallyResult.deserialize(bytes);
            }
          }
          v1beta12.TallyResult = TallyResult;
          class Vote extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("proposal_id" in data && data.proposal_id != void 0) {
                  this.proposal_id = data.proposal_id;
                }
                if ("voter" in data && data.voter != void 0) {
                  this.voter = data.voter;
                }
                if ("option" in data && data.option != void 0) {
                  this.option = data.option;
                }
                if ("options" in data && data.options != void 0) {
                  this.options = data.options;
                }
              }
            }
            get proposal_id() {
              return pb_1.Message.getField(this, 1);
            }
            set proposal_id(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get voter() {
              return pb_1.Message.getField(this, 2);
            }
            set voter(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get option() {
              return pb_1.Message.getField(this, 3);
            }
            set option(value) {
              pb_1.Message.setField(this, 3, value);
            }
            get options() {
              return pb_1.Message.getRepeatedWrapperField(this, WeightedVoteOption, 4);
            }
            set options(value) {
              pb_1.Message.setRepeatedWrapperField(this, 4, value);
            }
            static fromObject(data) {
              const message = new Vote({});
              if (data.proposal_id != null) {
                message.proposal_id = data.proposal_id;
              }
              if (data.voter != null) {
                message.voter = data.voter;
              }
              if (data.option != null) {
                message.option = data.option;
              }
              if (data.options != null) {
                message.options = data.options.map((item) => WeightedVoteOption.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.proposal_id != null) {
                data.proposal_id = this.proposal_id;
              }
              if (this.voter != null) {
                data.voter = this.voter;
              }
              if (this.option != null) {
                data.option = this.option;
              }
              if (this.options != null) {
                data.options = this.options.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.proposal_id !== void 0)
                writer.writeUint64(1, this.proposal_id);
              if (typeof this.voter === "string" && this.voter.length)
                writer.writeString(2, this.voter);
              if (this.option !== void 0)
                writer.writeEnum(3, this.option);
              if (this.options !== void 0)
                writer.writeRepeatedMessage(4, this.options, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Vote();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.proposal_id = reader.readUint64();
                    break;
                  case 2:
                    message.voter = reader.readString();
                    break;
                  case 3:
                    message.option = reader.readEnum();
                    break;
                  case 4:
                    reader.readMessage(message.options, () => pb_1.Message.addToRepeatedWrapperField(message, 4, WeightedVoteOption.deserialize(reader), WeightedVoteOption));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return Vote.deserialize(bytes);
            }
          }
          v1beta12.Vote = Vote;
          class DepositParams extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("min_deposit" in data && data.min_deposit != void 0) {
                  this.min_deposit = data.min_deposit;
                }
                if ("max_deposit_period" in data && data.max_deposit_period != void 0) {
                  this.max_deposit_period = data.max_deposit_period;
                }
              }
            }
            get min_deposit() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_1.cosmos.base.v1beta1.Coin, 1);
            }
            set min_deposit(value) {
              pb_1.Message.setRepeatedWrapperField(this, 1, value);
            }
            get max_deposit_period() {
              return pb_1.Message.getWrapperField(this, dependency_6.google.protobuf.Duration, 2);
            }
            set max_deposit_period(value) {
              pb_1.Message.setWrapperField(this, 2, value);
            }
            static fromObject(data) {
              const message = new DepositParams({});
              if (data.min_deposit != null) {
                message.min_deposit = data.min_deposit.map((item) => dependency_1.cosmos.base.v1beta1.Coin.fromObject(item));
              }
              if (data.max_deposit_period != null) {
                message.max_deposit_period = dependency_6.google.protobuf.Duration.fromObject(data.max_deposit_period);
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.min_deposit != null) {
                data.min_deposit = this.min_deposit.map((item) => item.toObject());
              }
              if (this.max_deposit_period != null) {
                data.max_deposit_period = this.max_deposit_period.toObject();
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.min_deposit !== void 0)
                writer.writeRepeatedMessage(1, this.min_deposit, (item) => item.serialize(writer));
              if (this.max_deposit_period !== void 0)
                writer.writeMessage(2, this.max_deposit_period, () => this.max_deposit_period.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DepositParams();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.min_deposit, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_1.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_1.cosmos.base.v1beta1.Coin));
                    break;
                  case 2:
                    reader.readMessage(message.max_deposit_period, () => message.max_deposit_period = dependency_6.google.protobuf.Duration.deserialize(reader));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return DepositParams.deserialize(bytes);
            }
          }
          v1beta12.DepositParams = DepositParams;
          class VotingParams extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("voting_period" in data && data.voting_period != void 0) {
                  this.voting_period = data.voting_period;
                }
              }
            }
            get voting_period() {
              return pb_1.Message.getWrapperField(this, dependency_6.google.protobuf.Duration, 1);
            }
            set voting_period(value) {
              pb_1.Message.setWrapperField(this, 1, value);
            }
            static fromObject(data) {
              const message = new VotingParams({});
              if (data.voting_period != null) {
                message.voting_period = dependency_6.google.protobuf.Duration.fromObject(data.voting_period);
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.voting_period != null) {
                data.voting_period = this.voting_period.toObject();
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.voting_period !== void 0)
                writer.writeMessage(1, this.voting_period, () => this.voting_period.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new VotingParams();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.voting_period, () => message.voting_period = dependency_6.google.protobuf.Duration.deserialize(reader));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return VotingParams.deserialize(bytes);
            }
          }
          v1beta12.VotingParams = VotingParams;
          class TallyParams extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("quorum" in data && data.quorum != void 0) {
                  this.quorum = data.quorum;
                }
                if ("threshold" in data && data.threshold != void 0) {
                  this.threshold = data.threshold;
                }
                if ("veto_threshold" in data && data.veto_threshold != void 0) {
                  this.veto_threshold = data.veto_threshold;
                }
              }
            }
            get quorum() {
              return pb_1.Message.getField(this, 1);
            }
            set quorum(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get threshold() {
              return pb_1.Message.getField(this, 2);
            }
            set threshold(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get veto_threshold() {
              return pb_1.Message.getField(this, 3);
            }
            set veto_threshold(value) {
              pb_1.Message.setField(this, 3, value);
            }
            static fromObject(data) {
              const message = new TallyParams({});
              if (data.quorum != null) {
                message.quorum = data.quorum;
              }
              if (data.threshold != null) {
                message.threshold = data.threshold;
              }
              if (data.veto_threshold != null) {
                message.veto_threshold = data.veto_threshold;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.quorum != null) {
                data.quorum = this.quorum;
              }
              if (this.threshold != null) {
                data.threshold = this.threshold;
              }
              if (this.veto_threshold != null) {
                data.veto_threshold = this.veto_threshold;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.quorum !== void 0)
                writer.writeBytes(1, this.quorum);
              if (this.threshold !== void 0)
                writer.writeBytes(2, this.threshold);
              if (this.veto_threshold !== void 0)
                writer.writeBytes(3, this.veto_threshold);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TallyParams();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.quorum = reader.readBytes();
                    break;
                  case 2:
                    message.threshold = reader.readBytes();
                    break;
                  case 3:
                    message.veto_threshold = reader.readBytes();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return TallyParams.deserialize(bytes);
            }
          }
          v1beta12.TallyParams = TallyParams;
        })(v1beta1 = gov2.v1beta1 || (gov2.v1beta1 = {}));
      })(gov = cosmos2.gov || (cosmos2.gov = {}));
    })(cosmos = exports2.cosmos || (exports2.cosmos = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/cosmos/gov/v1beta1/tx.js
var require_tx8 = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/cosmos/gov/v1beta1/tx.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.cosmos = void 0;
    var dependency_1 = __importStar(require_coin());
    var dependency_2 = __importStar(require_gov());
    var dependency_5 = __importStar(require_any());
    var pb_1 = __importStar(require_google_protobuf());
    var cosmos;
    (function(cosmos2) {
      var gov;
      (function(gov2) {
        var v1beta1;
        (function(v1beta12) {
          class MsgSubmitProposal extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("content" in data && data.content != void 0) {
                  this.content = data.content;
                }
                if ("initial_deposit" in data && data.initial_deposit != void 0) {
                  this.initial_deposit = data.initial_deposit;
                }
                if ("proposer" in data && data.proposer != void 0) {
                  this.proposer = data.proposer;
                }
              }
            }
            get content() {
              return pb_1.Message.getWrapperField(this, dependency_5.google.protobuf.Any, 1);
            }
            set content(value) {
              pb_1.Message.setWrapperField(this, 1, value);
            }
            get initial_deposit() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_1.cosmos.base.v1beta1.Coin, 2);
            }
            set initial_deposit(value) {
              pb_1.Message.setRepeatedWrapperField(this, 2, value);
            }
            get proposer() {
              return pb_1.Message.getField(this, 3);
            }
            set proposer(value) {
              pb_1.Message.setField(this, 3, value);
            }
            static fromObject(data) {
              const message = new MsgSubmitProposal({});
              if (data.content != null) {
                message.content = dependency_5.google.protobuf.Any.fromObject(data.content);
              }
              if (data.initial_deposit != null) {
                message.initial_deposit = data.initial_deposit.map((item) => dependency_1.cosmos.base.v1beta1.Coin.fromObject(item));
              }
              if (data.proposer != null) {
                message.proposer = data.proposer;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.content != null) {
                data.content = this.content.toObject();
              }
              if (this.initial_deposit != null) {
                data.initial_deposit = this.initial_deposit.map((item) => item.toObject());
              }
              if (this.proposer != null) {
                data.proposer = this.proposer;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.content !== void 0)
                writer.writeMessage(1, this.content, () => this.content.serialize(writer));
              if (this.initial_deposit !== void 0)
                writer.writeRepeatedMessage(2, this.initial_deposit, (item) => item.serialize(writer));
              if (typeof this.proposer === "string" && this.proposer.length)
                writer.writeString(3, this.proposer);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgSubmitProposal();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    reader.readMessage(message.content, () => message.content = dependency_5.google.protobuf.Any.deserialize(reader));
                    break;
                  case 2:
                    reader.readMessage(message.initial_deposit, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_1.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_1.cosmos.base.v1beta1.Coin));
                    break;
                  case 3:
                    message.proposer = reader.readString();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgSubmitProposal.deserialize(bytes);
            }
          }
          v1beta12.MsgSubmitProposal = MsgSubmitProposal;
          class MsgSubmitProposalResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("proposal_id" in data && data.proposal_id != void 0) {
                  this.proposal_id = data.proposal_id;
                }
              }
            }
            get proposal_id() {
              return pb_1.Message.getField(this, 1);
            }
            set proposal_id(value) {
              pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
              const message = new MsgSubmitProposalResponse({});
              if (data.proposal_id != null) {
                message.proposal_id = data.proposal_id;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.proposal_id != null) {
                data.proposal_id = this.proposal_id;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.proposal_id !== void 0)
                writer.writeUint64(1, this.proposal_id);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgSubmitProposalResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.proposal_id = reader.readUint64();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgSubmitProposalResponse.deserialize(bytes);
            }
          }
          v1beta12.MsgSubmitProposalResponse = MsgSubmitProposalResponse;
          class MsgVote extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("proposal_id" in data && data.proposal_id != void 0) {
                  this.proposal_id = data.proposal_id;
                }
                if ("voter" in data && data.voter != void 0) {
                  this.voter = data.voter;
                }
                if ("option" in data && data.option != void 0) {
                  this.option = data.option;
                }
              }
            }
            get proposal_id() {
              return pb_1.Message.getField(this, 1);
            }
            set proposal_id(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get voter() {
              return pb_1.Message.getField(this, 2);
            }
            set voter(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get option() {
              return pb_1.Message.getField(this, 3);
            }
            set option(value) {
              pb_1.Message.setField(this, 3, value);
            }
            static fromObject(data) {
              const message = new MsgVote({});
              if (data.proposal_id != null) {
                message.proposal_id = data.proposal_id;
              }
              if (data.voter != null) {
                message.voter = data.voter;
              }
              if (data.option != null) {
                message.option = data.option;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.proposal_id != null) {
                data.proposal_id = this.proposal_id;
              }
              if (this.voter != null) {
                data.voter = this.voter;
              }
              if (this.option != null) {
                data.option = this.option;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.proposal_id !== void 0)
                writer.writeUint64(1, this.proposal_id);
              if (typeof this.voter === "string" && this.voter.length)
                writer.writeString(2, this.voter);
              if (this.option !== void 0)
                writer.writeEnum(3, this.option);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgVote();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.proposal_id = reader.readUint64();
                    break;
                  case 2:
                    message.voter = reader.readString();
                    break;
                  case 3:
                    message.option = reader.readEnum();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgVote.deserialize(bytes);
            }
          }
          v1beta12.MsgVote = MsgVote;
          class MsgVoteResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
              }
            }
            static fromObject(data) {
              const message = new MsgVoteResponse({});
              return message;
            }
            toObject() {
              const data = {};
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgVoteResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgVoteResponse.deserialize(bytes);
            }
          }
          v1beta12.MsgVoteResponse = MsgVoteResponse;
          class MsgVoteWeighted extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("proposal_id" in data && data.proposal_id != void 0) {
                  this.proposal_id = data.proposal_id;
                }
                if ("voter" in data && data.voter != void 0) {
                  this.voter = data.voter;
                }
                if ("options" in data && data.options != void 0) {
                  this.options = data.options;
                }
              }
            }
            get proposal_id() {
              return pb_1.Message.getField(this, 1);
            }
            set proposal_id(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get voter() {
              return pb_1.Message.getField(this, 2);
            }
            set voter(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get options() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_2.cosmos.gov.v1beta1.WeightedVoteOption, 3);
            }
            set options(value) {
              pb_1.Message.setRepeatedWrapperField(this, 3, value);
            }
            static fromObject(data) {
              const message = new MsgVoteWeighted({});
              if (data.proposal_id != null) {
                message.proposal_id = data.proposal_id;
              }
              if (data.voter != null) {
                message.voter = data.voter;
              }
              if (data.options != null) {
                message.options = data.options.map((item) => dependency_2.cosmos.gov.v1beta1.WeightedVoteOption.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.proposal_id != null) {
                data.proposal_id = this.proposal_id;
              }
              if (this.voter != null) {
                data.voter = this.voter;
              }
              if (this.options != null) {
                data.options = this.options.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.proposal_id !== void 0)
                writer.writeUint64(1, this.proposal_id);
              if (typeof this.voter === "string" && this.voter.length)
                writer.writeString(2, this.voter);
              if (this.options !== void 0)
                writer.writeRepeatedMessage(3, this.options, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgVoteWeighted();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.proposal_id = reader.readUint64();
                    break;
                  case 2:
                    message.voter = reader.readString();
                    break;
                  case 3:
                    reader.readMessage(message.options, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_2.cosmos.gov.v1beta1.WeightedVoteOption.deserialize(reader), dependency_2.cosmos.gov.v1beta1.WeightedVoteOption));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgVoteWeighted.deserialize(bytes);
            }
          }
          v1beta12.MsgVoteWeighted = MsgVoteWeighted;
          class MsgVoteWeightedResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
              }
            }
            static fromObject(data) {
              const message = new MsgVoteWeightedResponse({});
              return message;
            }
            toObject() {
              const data = {};
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgVoteWeightedResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgVoteWeightedResponse.deserialize(bytes);
            }
          }
          v1beta12.MsgVoteWeightedResponse = MsgVoteWeightedResponse;
          class MsgDeposit extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("proposal_id" in data && data.proposal_id != void 0) {
                  this.proposal_id = data.proposal_id;
                }
                if ("depositor" in data && data.depositor != void 0) {
                  this.depositor = data.depositor;
                }
                if ("amount" in data && data.amount != void 0) {
                  this.amount = data.amount;
                }
              }
            }
            get proposal_id() {
              return pb_1.Message.getField(this, 1);
            }
            set proposal_id(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get depositor() {
              return pb_1.Message.getField(this, 2);
            }
            set depositor(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get amount() {
              return pb_1.Message.getRepeatedWrapperField(this, dependency_1.cosmos.base.v1beta1.Coin, 3);
            }
            set amount(value) {
              pb_1.Message.setRepeatedWrapperField(this, 3, value);
            }
            static fromObject(data) {
              const message = new MsgDeposit({});
              if (data.proposal_id != null) {
                message.proposal_id = data.proposal_id;
              }
              if (data.depositor != null) {
                message.depositor = data.depositor;
              }
              if (data.amount != null) {
                message.amount = data.amount.map((item) => dependency_1.cosmos.base.v1beta1.Coin.fromObject(item));
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.proposal_id != null) {
                data.proposal_id = this.proposal_id;
              }
              if (this.depositor != null) {
                data.depositor = this.depositor;
              }
              if (this.amount != null) {
                data.amount = this.amount.map((item) => item.toObject());
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.proposal_id !== void 0)
                writer.writeUint64(1, this.proposal_id);
              if (typeof this.depositor === "string" && this.depositor.length)
                writer.writeString(2, this.depositor);
              if (this.amount !== void 0)
                writer.writeRepeatedMessage(3, this.amount, (item) => item.serialize(writer));
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgDeposit();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.proposal_id = reader.readUint64();
                    break;
                  case 2:
                    message.depositor = reader.readString();
                    break;
                  case 3:
                    reader.readMessage(message.amount, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_1.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_1.cosmos.base.v1beta1.Coin));
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgDeposit.deserialize(bytes);
            }
          }
          v1beta12.MsgDeposit = MsgDeposit;
          class MsgDepositResponse extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
              }
            }
            static fromObject(data) {
              const message = new MsgDepositResponse({});
              return message;
            }
            toObject() {
              const data = {};
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgDepositResponse();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return MsgDepositResponse.deserialize(bytes);
            }
          }
          v1beta12.MsgDepositResponse = MsgDepositResponse;
        })(v1beta1 = gov2.v1beta1 || (gov2.v1beta1 = {}));
      })(gov = cosmos2.gov || (cosmos2.gov = {}));
    })(cosmos = exports2.cosmos || (exports2.cosmos = {}));
  }
});

// node_modules/@tharsis/proto/dist/messages/vote.js
var require_vote = __commonJS({
  "node_modules/@tharsis/proto/dist/messages/vote.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createMsgVote = void 0;
    var govTx = __importStar(require_tx8());
    function createMsgVote(proposalId, option, sender) {
      const voteMessage = new govTx.cosmos.gov.v1beta1.MsgVote({
        proposal_id: proposalId,
        voter: sender,
        option
      });
      return {
        message: voteMessage,
        path: "cosmos.gov.v1beta1.MsgVote"
      };
    }
    exports2.createMsgVote = createMsgVote;
  }
});

// node_modules/@tharsis/proto/dist/proto/ethermint/types/v1/web3.js
var require_web3 = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/ethermint/types/v1/web3.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ethermint = void 0;
    var pb_1 = __importStar(require_google_protobuf());
    var ethermint;
    (function(ethermint2) {
      var types;
      (function(types2) {
        var v1;
        (function(v12) {
          class ExtensionOptionsWeb3Tx extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("typed_data_chain_id" in data && data.typed_data_chain_id != void 0) {
                  this.typed_data_chain_id = data.typed_data_chain_id;
                }
                if ("fee_payer" in data && data.fee_payer != void 0) {
                  this.fee_payer = data.fee_payer;
                }
                if ("fee_payer_sig" in data && data.fee_payer_sig != void 0) {
                  this.fee_payer_sig = data.fee_payer_sig;
                }
              }
            }
            get typed_data_chain_id() {
              return pb_1.Message.getField(this, 1);
            }
            set typed_data_chain_id(value) {
              pb_1.Message.setField(this, 1, value);
            }
            get fee_payer() {
              return pb_1.Message.getField(this, 2);
            }
            set fee_payer(value) {
              pb_1.Message.setField(this, 2, value);
            }
            get fee_payer_sig() {
              return pb_1.Message.getField(this, 3);
            }
            set fee_payer_sig(value) {
              pb_1.Message.setField(this, 3, value);
            }
            static fromObject(data) {
              const message = new ExtensionOptionsWeb3Tx({});
              if (data.typed_data_chain_id != null) {
                message.typed_data_chain_id = data.typed_data_chain_id;
              }
              if (data.fee_payer != null) {
                message.fee_payer = data.fee_payer;
              }
              if (data.fee_payer_sig != null) {
                message.fee_payer_sig = data.fee_payer_sig;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.typed_data_chain_id != null) {
                data.typed_data_chain_id = this.typed_data_chain_id;
              }
              if (this.fee_payer != null) {
                data.fee_payer = this.fee_payer;
              }
              if (this.fee_payer_sig != null) {
                data.fee_payer_sig = this.fee_payer_sig;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.typed_data_chain_id !== void 0)
                writer.writeUint64(1, this.typed_data_chain_id);
              if (typeof this.fee_payer === "string" && this.fee_payer.length)
                writer.writeString(2, this.fee_payer);
              if (this.fee_payer_sig !== void 0)
                writer.writeBytes(3, this.fee_payer_sig);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ExtensionOptionsWeb3Tx();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.typed_data_chain_id = reader.readUint64();
                    break;
                  case 2:
                    message.fee_payer = reader.readString();
                    break;
                  case 3:
                    message.fee_payer_sig = reader.readBytes();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return ExtensionOptionsWeb3Tx.deserialize(bytes);
            }
          }
          v12.ExtensionOptionsWeb3Tx = ExtensionOptionsWeb3Tx;
        })(v1 = types2.v1 || (types2.v1 = {}));
      })(types = ethermint2.types || (ethermint2.types = {}));
    })(ethermint = exports2.ethermint || (exports2.ethermint = {}));
  }
});

// node_modules/@tharsis/proto/dist/messages/web3Extension.js
var require_web3Extension = __commonJS({
  "node_modules/@tharsis/proto/dist/messages/web3Extension.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createWeb3Extension = void 0;
    var web3 = __importStar(require_web3());
    function createWeb3Extension(chainId, feePayer, feePayerSig) {
      const message = new web3.ethermint.types.v1.ExtensionOptionsWeb3Tx({
        typed_data_chain_id: chainId,
        fee_payer: feePayer,
        fee_payer_sig: feePayerSig
      });
      return {
        message,
        path: "ethermint.types.v1.ExtensionOptionsWeb3Tx"
      };
    }
    exports2.createWeb3Extension = createWeb3Extension;
  }
});

// node_modules/sha3/sponge/permute/copy/index.js
var require_copy = __commonJS({
  "node_modules/sha3/sponge/permute/copy/index.js"(exports2, module2) {
    "use strict";
    var copy = function copy2(I, i) {
      return function(O, o) {
        var oi = o * 2;
        var ii = i * 2;
        O[oi] = I[ii];
        O[oi + 1] = I[ii + 1];
      };
    };
    module2.exports = copy;
  }
});

// node_modules/sha3/sponge/permute/chi/index.js
var require_chi = __commonJS({
  "node_modules/sha3/sponge/permute/chi/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var _copy = _interopRequireDefault(require_copy());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var chi = function chi2(_ref) {
      var A = _ref.A, C = _ref.C;
      for (var y = 0; y < 25; y += 5) {
        for (var x = 0; x < 5; x++) {
          (0, _copy["default"])(A, y + x)(C, x);
        }
        for (var _x = 0; _x < 5; _x++) {
          var xy = (y + _x) * 2;
          var x1 = (_x + 1) % 5 * 2;
          var x2 = (_x + 2) % 5 * 2;
          A[xy] ^= ~C[x1] & C[x2];
          A[xy + 1] ^= ~C[x1 + 1] & C[x2 + 1];
        }
      }
    };
    var _default = chi;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/sponge/permute/iota/round-constants/index.js
var require_round_constants = __commonJS({
  "node_modules/sha3/sponge/permute/iota/round-constants/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var ROUND_CONSTANTS = new Uint32Array([0, 1, 0, 32898, 2147483648, 32906, 2147483648, 2147516416, 0, 32907, 0, 2147483649, 2147483648, 2147516545, 2147483648, 32777, 0, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 2147483648, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 0, 32778, 2147483648, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 0, 2147483649, 2147483648, 2147516424]);
    var _default = ROUND_CONSTANTS;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/sponge/permute/iota/index.js
var require_iota = __commonJS({
  "node_modules/sha3/sponge/permute/iota/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var _roundConstants = _interopRequireDefault(require_round_constants());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var iota = function iota2(_ref) {
      var A = _ref.A, roundIndex = _ref.roundIndex;
      var i = roundIndex * 2;
      A[0] ^= _roundConstants["default"][i];
      A[1] ^= _roundConstants["default"][i + 1];
    };
    var _default = iota;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js
var require_pi_shuffles = __commonJS({
  "node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var PI_SHUFFLES = [10, 7, 11, 17, 18, 3, 5, 16, 8, 21, 24, 4, 15, 23, 19, 13, 12, 2, 20, 14, 22, 9, 6, 1];
    var _default = PI_SHUFFLES;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js
var require_rho_offsets = __commonJS({
  "node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var RHO_OFFSETS = [1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 2, 14, 27, 41, 56, 8, 25, 43, 62, 18, 39, 61, 20, 44];
    var _default = RHO_OFFSETS;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/sponge/permute/rho-pi/index.js
var require_rho_pi = __commonJS({
  "node_modules/sha3/sponge/permute/rho-pi/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var _piShuffles = _interopRequireDefault(require_pi_shuffles());
    var _rhoOffsets = _interopRequireDefault(require_rho_offsets());
    var _copy = _interopRequireDefault(require_copy());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var rhoPi = function rhoPi2(_ref) {
      var A = _ref.A, C = _ref.C, W = _ref.W;
      (0, _copy["default"])(A, 1)(W, 0);
      var H = 0;
      var L = 0;
      var Wi = 0;
      var ri = 32;
      for (var i = 0; i < 24; i++) {
        var j = _piShuffles["default"][i];
        var r = _rhoOffsets["default"][i];
        (0, _copy["default"])(A, j)(C, 0);
        H = W[0];
        L = W[1];
        ri = 32 - r;
        Wi = r < 32 ? 0 : 1;
        W[Wi] = H << r | L >>> ri;
        W[(Wi + 1) % 2] = L << r | H >>> ri;
        (0, _copy["default"])(W, 0)(A, j);
        (0, _copy["default"])(C, 0)(W, 0);
      }
    };
    var _default = rhoPi;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/sponge/permute/theta/index.js
var require_theta = __commonJS({
  "node_modules/sha3/sponge/permute/theta/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var _copy = _interopRequireDefault(require_copy());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var theta = function theta2(_ref) {
      var A = _ref.A, C = _ref.C, D = _ref.D, W = _ref.W;
      var H = 0;
      var L = 0;
      for (var x = 0; x < 5; x++) {
        var x20 = x * 2;
        var x21 = (x + 5) * 2;
        var x22 = (x + 10) * 2;
        var x23 = (x + 15) * 2;
        var x24 = (x + 20) * 2;
        C[x20] = A[x20] ^ A[x21] ^ A[x22] ^ A[x23] ^ A[x24];
        C[x20 + 1] = A[x20 + 1] ^ A[x21 + 1] ^ A[x22 + 1] ^ A[x23 + 1] ^ A[x24 + 1];
      }
      for (var _x = 0; _x < 5; _x++) {
        (0, _copy["default"])(C, (_x + 1) % 5)(W, 0);
        H = W[0];
        L = W[1];
        W[0] = H << 1 | L >>> 31;
        W[1] = L << 1 | H >>> 31;
        D[_x * 2] = C[(_x + 4) % 5 * 2] ^ W[0];
        D[_x * 2 + 1] = C[(_x + 4) % 5 * 2 + 1] ^ W[1];
        for (var y = 0; y < 25; y += 5) {
          A[(y + _x) * 2] ^= D[_x * 2];
          A[(y + _x) * 2 + 1] ^= D[_x * 2 + 1];
        }
      }
    };
    var _default = theta;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/sponge/permute/index.js
var require_permute = __commonJS({
  "node_modules/sha3/sponge/permute/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var _chi = _interopRequireDefault(require_chi());
    var _iota = _interopRequireDefault(require_iota());
    var _rhoPi = _interopRequireDefault(require_rho_pi());
    var _theta = _interopRequireDefault(require_theta());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var permute = function permute2() {
      var C = new Uint32Array(10);
      var D = new Uint32Array(10);
      var W = new Uint32Array(2);
      return function(A) {
        for (var roundIndex = 0; roundIndex < 24; roundIndex++) {
          (0, _theta["default"])({ A, C, D, W });
          (0, _rhoPi["default"])({ A, C, W });
          (0, _chi["default"])({ A, C });
          (0, _iota["default"])({ A, roundIndex });
        }
        C.fill(0);
        D.fill(0);
        W.fill(0);
      };
    };
    var _default = permute;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/sponge/index.js
var require_sponge = __commonJS({
  "node_modules/sha3/sponge/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = void 0;
    var _buffer = require_buffer();
    var _permute = _interopRequireDefault(require_permute());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var xorWords = function xorWords2(I, O) {
      for (var i = 0; i < I.length; i += 8) {
        var o = i / 4;
        O[o] ^= I[i + 7] << 24 | I[i + 6] << 16 | I[i + 5] << 8 | I[i + 4];
        O[o + 1] ^= I[i + 3] << 24 | I[i + 2] << 16 | I[i + 1] << 8 | I[i];
      }
      return O;
    };
    var readWords = function readWords2(I, O) {
      for (var o = 0; o < O.length; o += 8) {
        var i = o / 4;
        O[o] = I[i + 1];
        O[o + 1] = I[i + 1] >>> 8;
        O[o + 2] = I[i + 1] >>> 16;
        O[o + 3] = I[i + 1] >>> 24;
        O[o + 4] = I[i];
        O[o + 5] = I[i] >>> 8;
        O[o + 6] = I[i] >>> 16;
        O[o + 7] = I[i] >>> 24;
      }
      return O;
    };
    var Sponge = function Sponge2(_ref) {
      var _this = this;
      var capacity = _ref.capacity, padding = _ref.padding;
      var keccak = (0, _permute["default"])();
      var stateSize = 200;
      var blockSize = capacity / 8;
      var queueSize = stateSize - capacity / 4;
      var queueOffset = 0;
      var state = new Uint32Array(stateSize / 4);
      var queue = _buffer.Buffer.allocUnsafe(queueSize);
      this.absorb = function(buffer) {
        for (var i = 0; i < buffer.length; i++) {
          queue[queueOffset] = buffer[i];
          queueOffset += 1;
          if (queueOffset >= queueSize) {
            xorWords(queue, state);
            keccak(state);
            queueOffset = 0;
          }
        }
        return _this;
      };
      this.squeeze = function() {
        var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        var output = { buffer: options.buffer || _buffer.Buffer.allocUnsafe(blockSize), padding: options.padding || padding, queue: _buffer.Buffer.allocUnsafe(queue.length), state: new Uint32Array(state.length) };
        queue.copy(output.queue);
        for (var i = 0; i < state.length; i++) {
          output.state[i] = state[i];
        }
        output.queue.fill(0, queueOffset);
        output.queue[queueOffset] |= output.padding;
        output.queue[queueSize - 1] |= 128;
        xorWords(output.queue, output.state);
        for (var offset = 0; offset < output.buffer.length; offset += queueSize) {
          keccak(output.state);
          readWords(output.state, output.buffer.slice(offset, offset + queueSize));
        }
        return output.buffer;
      };
      this.reset = function() {
        queue.fill(0);
        state.fill(0);
        queueOffset = 0;
        return _this;
      };
      return this;
    };
    var _default = Sponge;
    exports2["default"] = _default;
  }
});

// node_modules/sha3/index.js
var require_sha3 = __commonJS({
  "node_modules/sha3/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2["default"] = exports2.SHAKE = exports2.SHA3Hash = exports2.SHA3 = exports2.Keccak = void 0;
    var _buffer = require_buffer();
    var _sponge = _interopRequireDefault(require_sponge());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var createHash = function createHash2(_ref) {
      var allowedSizes = _ref.allowedSizes, defaultSize = _ref.defaultSize, padding = _ref.padding;
      return function Hash() {
        var _this = this;
        var size = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : defaultSize;
        if (!this || this.constructor !== Hash) {
          return new Hash(size);
        }
        if (allowedSizes && !allowedSizes.includes(size)) {
          throw new Error("Unsupported hash length");
        }
        var sponge = new _sponge["default"]({ capacity: size });
        this.update = function(input) {
          var encoding = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "utf8";
          if (_buffer.Buffer.isBuffer(input)) {
            sponge.absorb(input);
            return _this;
          }
          if (typeof input === "string") {
            return _this.update(_buffer.Buffer.from(input, encoding));
          }
          throw new TypeError("Not a string or buffer");
        };
        this.digest = function() {
          var formatOrOptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "binary";
          var options = typeof formatOrOptions === "string" ? { format: formatOrOptions } : formatOrOptions;
          var buffer = sponge.squeeze({ buffer: options.buffer, padding: options.padding || padding });
          if (options.format && options.format !== "binary") {
            return buffer.toString(options.format);
          }
          return buffer;
        };
        this.reset = function() {
          sponge.reset();
          return _this;
        };
        return this;
      };
    };
    var Keccak = createHash({ allowedSizes: [224, 256, 384, 512], defaultSize: 512, padding: 1 });
    exports2.Keccak = Keccak;
    var SHA3 = createHash({ allowedSizes: [224, 256, 384, 512], defaultSize: 512, padding: 6 });
    exports2.SHA3 = SHA3;
    var SHAKE = createHash({ allowedSizes: [128, 256], defaultSize: 256, padding: 31 });
    exports2.SHAKE = SHAKE;
    var SHA3Hash = Keccak;
    exports2.SHA3Hash = SHA3Hash;
    SHA3.SHA3Hash = SHA3Hash;
    var _default = SHA3;
    exports2["default"] = _default;
  }
});

// node_modules/@tharsis/proto/dist/proto/cosmos/tx/signing/v1beta1/signing.js
var require_signing = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/cosmos/tx/signing/v1beta1/signing.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.cosmos = void 0;
    var dependency_1 = __importStar(require_multisig());
    var dependency_2 = __importStar(require_any());
    var pb_1 = __importStar(require_google_protobuf());
    var cosmos;
    (function(cosmos2) {
      var tx;
      (function(tx2) {
        var signing;
        (function(signing2) {
          var v1beta1;
          (function(v1beta12) {
            let SignMode;
            (function(SignMode2) {
              SignMode2[SignMode2["SIGN_MODE_UNSPECIFIED"] = 0] = "SIGN_MODE_UNSPECIFIED";
              SignMode2[SignMode2["SIGN_MODE_DIRECT"] = 1] = "SIGN_MODE_DIRECT";
              SignMode2[SignMode2["SIGN_MODE_TEXTUAL"] = 2] = "SIGN_MODE_TEXTUAL";
              SignMode2[SignMode2["SIGN_MODE_LEGACY_AMINO_JSON"] = 127] = "SIGN_MODE_LEGACY_AMINO_JSON";
            })(SignMode = v1beta12.SignMode || (v1beta12.SignMode = {}));
            class SignatureDescriptors extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
                if (!Array.isArray(data) && typeof data == "object") {
                  if ("signatures" in data && data.signatures != void 0) {
                    this.signatures = data.signatures;
                  }
                }
              }
              get signatures() {
                return pb_1.Message.getRepeatedWrapperField(this, SignatureDescriptor, 1);
              }
              set signatures(value) {
                pb_1.Message.setRepeatedWrapperField(this, 1, value);
              }
              static fromObject(data) {
                const message = new SignatureDescriptors({});
                if (data.signatures != null) {
                  message.signatures = data.signatures.map((item) => SignatureDescriptor.fromObject(item));
                }
                return message;
              }
              toObject() {
                const data = {};
                if (this.signatures != null) {
                  data.signatures = this.signatures.map((item) => item.toObject());
                }
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.signatures !== void 0)
                  writer.writeRepeatedMessage(1, this.signatures, (item) => item.serialize(writer));
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SignatureDescriptors();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    case 1:
                      reader.readMessage(message.signatures, () => pb_1.Message.addToRepeatedWrapperField(message, 1, SignatureDescriptor.deserialize(reader), SignatureDescriptor));
                      break;
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return SignatureDescriptors.deserialize(bytes);
              }
            }
            v1beta12.SignatureDescriptors = SignatureDescriptors;
            class SignatureDescriptor extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
                if (!Array.isArray(data) && typeof data == "object") {
                  if ("public_key" in data && data.public_key != void 0) {
                    this.public_key = data.public_key;
                  }
                  if ("data" in data && data.data != void 0) {
                    this.data = data.data;
                  }
                  if ("sequence" in data && data.sequence != void 0) {
                    this.sequence = data.sequence;
                  }
                }
              }
              get public_key() {
                return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Any, 1);
              }
              set public_key(value) {
                pb_1.Message.setWrapperField(this, 1, value);
              }
              get data() {
                return pb_1.Message.getWrapperField(this, SignatureDescriptor.Data, 2);
              }
              set data(value) {
                pb_1.Message.setWrapperField(this, 2, value);
              }
              get sequence() {
                return pb_1.Message.getField(this, 3);
              }
              set sequence(value) {
                pb_1.Message.setField(this, 3, value);
              }
              static fromObject(data) {
                const message = new SignatureDescriptor({});
                if (data.public_key != null) {
                  message.public_key = dependency_2.google.protobuf.Any.fromObject(data.public_key);
                }
                if (data.data != null) {
                  message.data = SignatureDescriptor.Data.fromObject(data.data);
                }
                if (data.sequence != null) {
                  message.sequence = data.sequence;
                }
                return message;
              }
              toObject() {
                const data = {};
                if (this.public_key != null) {
                  data.public_key = this.public_key.toObject();
                }
                if (this.data != null) {
                  data.data = this.data.toObject();
                }
                if (this.sequence != null) {
                  data.sequence = this.sequence;
                }
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.public_key !== void 0)
                  writer.writeMessage(1, this.public_key, () => this.public_key.serialize(writer));
                if (this.data !== void 0)
                  writer.writeMessage(2, this.data, () => this.data.serialize(writer));
                if (this.sequence !== void 0)
                  writer.writeUint64(3, this.sequence);
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SignatureDescriptor();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    case 1:
                      reader.readMessage(message.public_key, () => message.public_key = dependency_2.google.protobuf.Any.deserialize(reader));
                      break;
                    case 2:
                      reader.readMessage(message.data, () => message.data = SignatureDescriptor.Data.deserialize(reader));
                      break;
                    case 3:
                      message.sequence = reader.readUint64();
                      break;
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return SignatureDescriptor.deserialize(bytes);
              }
            }
            v1beta12.SignatureDescriptor = SignatureDescriptor;
            (function(SignatureDescriptor2) {
              class Data extends pb_1.Message {
                constructor(data) {
                  super();
                  pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], [[1, 2]]);
                  if (!Array.isArray(data) && typeof data == "object") {
                    if ("single" in data && data.single != void 0) {
                      this.single = data.single;
                    }
                    if ("multi" in data && data.multi != void 0) {
                      this.multi = data.multi;
                    }
                  }
                }
                get single() {
                  return pb_1.Message.getWrapperField(this, SignatureDescriptor2.Data.Single, 1);
                }
                set single(value) {
                  pb_1.Message.setOneofWrapperField(this, 1, [1, 2], value);
                }
                get multi() {
                  return pb_1.Message.getWrapperField(this, SignatureDescriptor2.Data.Multi, 2);
                }
                set multi(value) {
                  pb_1.Message.setOneofWrapperField(this, 2, [1, 2], value);
                }
                get sum() {
                  const cases = {
                    0: "none",
                    1: "single",
                    2: "multi"
                  };
                  return cases[pb_1.Message.computeOneofCase(this, [1, 2])];
                }
                static fromObject(data) {
                  const message = new Data({});
                  if (data.single != null) {
                    message.single = SignatureDescriptor2.Data.Single.fromObject(data.single);
                  }
                  if (data.multi != null) {
                    message.multi = SignatureDescriptor2.Data.Multi.fromObject(data.multi);
                  }
                  return message;
                }
                toObject() {
                  const data = {};
                  if (this.single != null) {
                    data.single = this.single.toObject();
                  }
                  if (this.multi != null) {
                    data.multi = this.multi.toObject();
                  }
                  return data;
                }
                serialize(w) {
                  const writer = w || new pb_1.BinaryWriter();
                  if (this.single !== void 0)
                    writer.writeMessage(1, this.single, () => this.single.serialize(writer));
                  if (this.multi !== void 0)
                    writer.writeMessage(2, this.multi, () => this.multi.serialize(writer));
                  if (!w)
                    return writer.getResultBuffer();
                }
                static deserialize(bytes) {
                  const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Data();
                  while (reader.nextField()) {
                    if (reader.isEndGroup())
                      break;
                    switch (reader.getFieldNumber()) {
                      case 1:
                        reader.readMessage(message.single, () => message.single = SignatureDescriptor2.Data.Single.deserialize(reader));
                        break;
                      case 2:
                        reader.readMessage(message.multi, () => message.multi = SignatureDescriptor2.Data.Multi.deserialize(reader));
                        break;
                      default:
                        reader.skipField();
                    }
                  }
                  return message;
                }
                serializeBinary() {
                  return this.serialize();
                }
                static deserializeBinary(bytes) {
                  return Data.deserialize(bytes);
                }
              }
              SignatureDescriptor2.Data = Data;
              (function(Data2) {
                class Single extends pb_1.Message {
                  constructor(data) {
                    super();
                    pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
                    if (!Array.isArray(data) && typeof data == "object") {
                      if ("mode" in data && data.mode != void 0) {
                        this.mode = data.mode;
                      }
                      if ("signature" in data && data.signature != void 0) {
                        this.signature = data.signature;
                      }
                    }
                  }
                  get mode() {
                    return pb_1.Message.getField(this, 1);
                  }
                  set mode(value) {
                    pb_1.Message.setField(this, 1, value);
                  }
                  get signature() {
                    return pb_1.Message.getField(this, 2);
                  }
                  set signature(value) {
                    pb_1.Message.setField(this, 2, value);
                  }
                  static fromObject(data) {
                    const message = new Single({});
                    if (data.mode != null) {
                      message.mode = data.mode;
                    }
                    if (data.signature != null) {
                      message.signature = data.signature;
                    }
                    return message;
                  }
                  toObject() {
                    const data = {};
                    if (this.mode != null) {
                      data.mode = this.mode;
                    }
                    if (this.signature != null) {
                      data.signature = this.signature;
                    }
                    return data;
                  }
                  serialize(w) {
                    const writer = w || new pb_1.BinaryWriter();
                    if (this.mode !== void 0)
                      writer.writeEnum(1, this.mode);
                    if (this.signature !== void 0)
                      writer.writeBytes(2, this.signature);
                    if (!w)
                      return writer.getResultBuffer();
                  }
                  static deserialize(bytes) {
                    const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Single();
                    while (reader.nextField()) {
                      if (reader.isEndGroup())
                        break;
                      switch (reader.getFieldNumber()) {
                        case 1:
                          message.mode = reader.readEnum();
                          break;
                        case 2:
                          message.signature = reader.readBytes();
                          break;
                        default:
                          reader.skipField();
                      }
                    }
                    return message;
                  }
                  serializeBinary() {
                    return this.serialize();
                  }
                  static deserializeBinary(bytes) {
                    return Single.deserialize(bytes);
                  }
                }
                Data2.Single = Single;
                class Multi extends pb_1.Message {
                  constructor(data) {
                    super();
                    pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);
                    if (!Array.isArray(data) && typeof data == "object") {
                      if ("bitarray" in data && data.bitarray != void 0) {
                        this.bitarray = data.bitarray;
                      }
                      if ("signatures" in data && data.signatures != void 0) {
                        this.signatures = data.signatures;
                      }
                    }
                  }
                  get bitarray() {
                    return pb_1.Message.getWrapperField(this, dependency_1.cosmos.crypto.multisig.v1beta1.CompactBitArray, 1);
                  }
                  set bitarray(value) {
                    pb_1.Message.setWrapperField(this, 1, value);
                  }
                  get signatures() {
                    return pb_1.Message.getRepeatedWrapperField(this, SignatureDescriptor2.Data, 2);
                  }
                  set signatures(value) {
                    pb_1.Message.setRepeatedWrapperField(this, 2, value);
                  }
                  static fromObject(data) {
                    const message = new Multi({});
                    if (data.bitarray != null) {
                      message.bitarray = dependency_1.cosmos.crypto.multisig.v1beta1.CompactBitArray.fromObject(data.bitarray);
                    }
                    if (data.signatures != null) {
                      message.signatures = data.signatures.map((item) => SignatureDescriptor2.Data.fromObject(item));
                    }
                    return message;
                  }
                  toObject() {
                    const data = {};
                    if (this.bitarray != null) {
                      data.bitarray = this.bitarray.toObject();
                    }
                    if (this.signatures != null) {
                      data.signatures = this.signatures.map((item) => item.toObject());
                    }
                    return data;
                  }
                  serialize(w) {
                    const writer = w || new pb_1.BinaryWriter();
                    if (this.bitarray !== void 0)
                      writer.writeMessage(1, this.bitarray, () => this.bitarray.serialize(writer));
                    if (this.signatures !== void 0)
                      writer.writeRepeatedMessage(2, this.signatures, (item) => item.serialize(writer));
                    if (!w)
                      return writer.getResultBuffer();
                  }
                  static deserialize(bytes) {
                    const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Multi();
                    while (reader.nextField()) {
                      if (reader.isEndGroup())
                        break;
                      switch (reader.getFieldNumber()) {
                        case 1:
                          reader.readMessage(message.bitarray, () => message.bitarray = dependency_1.cosmos.crypto.multisig.v1beta1.CompactBitArray.deserialize(reader));
                          break;
                        case 2:
                          reader.readMessage(message.signatures, () => pb_1.Message.addToRepeatedWrapperField(message, 2, SignatureDescriptor2.Data.deserialize(reader), SignatureDescriptor2.Data));
                          break;
                        default:
                          reader.skipField();
                      }
                    }
                    return message;
                  }
                  serializeBinary() {
                    return this.serialize();
                  }
                  static deserializeBinary(bytes) {
                    return Multi.deserialize(bytes);
                  }
                }
                Data2.Multi = Multi;
              })(Data = SignatureDescriptor2.Data || (SignatureDescriptor2.Data = {}));
            })(SignatureDescriptor = v1beta12.SignatureDescriptor || (v1beta12.SignatureDescriptor = {}));
          })(v1beta1 = signing2.v1beta1 || (signing2.v1beta1 = {}));
        })(signing = tx2.signing || (tx2.signing = {}));
      })(tx = cosmos2.tx || (cosmos2.tx = {}));
    })(cosmos = exports2.cosmos || (exports2.cosmos = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/ethermint/crypto/v1/ethsecp256k1/keys.js
var require_keys2 = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/ethermint/crypto/v1/ethsecp256k1/keys.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ethermint = void 0;
    var pb_1 = __importStar(require_google_protobuf());
    var ethermint;
    (function(ethermint2) {
      var crypto;
      (function(crypto2) {
        var v1;
        (function(v12) {
          var ethsecp256k1;
          (function(ethsecp256k12) {
            class PubKey extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
                if (!Array.isArray(data) && typeof data == "object") {
                  if ("key" in data && data.key != void 0) {
                    this.key = data.key;
                  }
                }
              }
              get key() {
                return pb_1.Message.getField(this, 1);
              }
              set key(value) {
                pb_1.Message.setField(this, 1, value);
              }
              static fromObject(data) {
                const message = new PubKey({});
                if (data.key != null) {
                  message.key = data.key;
                }
                return message;
              }
              toObject() {
                const data = {};
                if (this.key != null) {
                  data.key = this.key;
                }
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.key !== void 0)
                  writer.writeBytes(1, this.key);
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PubKey();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    case 1:
                      message.key = reader.readBytes();
                      break;
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return PubKey.deserialize(bytes);
              }
            }
            ethsecp256k12.PubKey = PubKey;
            class PrivKey extends pb_1.Message {
              constructor(data) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
                if (!Array.isArray(data) && typeof data == "object") {
                  if ("key" in data && data.key != void 0) {
                    this.key = data.key;
                  }
                }
              }
              get key() {
                return pb_1.Message.getField(this, 1);
              }
              set key(value) {
                pb_1.Message.setField(this, 1, value);
              }
              static fromObject(data) {
                const message = new PrivKey({});
                if (data.key != null) {
                  message.key = data.key;
                }
                return message;
              }
              toObject() {
                const data = {};
                if (this.key != null) {
                  data.key = this.key;
                }
                return data;
              }
              serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.key !== void 0)
                  writer.writeBytes(1, this.key);
                if (!w)
                  return writer.getResultBuffer();
              }
              static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PrivKey();
                while (reader.nextField()) {
                  if (reader.isEndGroup())
                    break;
                  switch (reader.getFieldNumber()) {
                    case 1:
                      message.key = reader.readBytes();
                      break;
                    default:
                      reader.skipField();
                  }
                }
                return message;
              }
              serializeBinary() {
                return this.serialize();
              }
              static deserializeBinary(bytes) {
                return PrivKey.deserialize(bytes);
              }
            }
            ethsecp256k12.PrivKey = PrivKey;
          })(ethsecp256k1 = v12.ethsecp256k1 || (v12.ethsecp256k1 = {}));
        })(v1 = crypto2.v1 || (crypto2.v1 = {}));
      })(crypto = ethermint2.crypto || (ethermint2.crypto = {}));
    })(ethermint = exports2.ethermint || (exports2.ethermint = {}));
  }
});

// node_modules/@tharsis/proto/dist/proto/cosmos/crypto/secp256k1/keys.js
var require_keys3 = __commonJS({
  "node_modules/@tharsis/proto/dist/proto/cosmos/crypto/secp256k1/keys.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.cosmos = void 0;
    var pb_1 = __importStar(require_google_protobuf());
    var cosmos;
    (function(cosmos2) {
      var crypto;
      (function(crypto2) {
        var secp256k1;
        (function(secp256k12) {
          class PubKey extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("key" in data && data.key != void 0) {
                  this.key = data.key;
                }
              }
            }
            get key() {
              return pb_1.Message.getField(this, 1);
            }
            set key(value) {
              pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
              const message = new PubKey({});
              if (data.key != null) {
                message.key = data.key;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.key != null) {
                data.key = this.key;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.key !== void 0)
                writer.writeBytes(1, this.key);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PubKey();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.key = reader.readBytes();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return PubKey.deserialize(bytes);
            }
          }
          secp256k12.PubKey = PubKey;
          class PrivKey extends pb_1.Message {
            constructor(data) {
              super();
              pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
              if (!Array.isArray(data) && typeof data == "object") {
                if ("key" in data && data.key != void 0) {
                  this.key = data.key;
                }
              }
            }
            get key() {
              return pb_1.Message.getField(this, 1);
            }
            set key(value) {
              pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
              const message = new PrivKey({});
              if (data.key != null) {
                message.key = data.key;
              }
              return message;
            }
            toObject() {
              const data = {};
              if (this.key != null) {
                data.key = this.key;
              }
              return data;
            }
            serialize(w) {
              const writer = w || new pb_1.BinaryWriter();
              if (this.key !== void 0)
                writer.writeBytes(1, this.key);
              if (!w)
                return writer.getResultBuffer();
            }
            static deserialize(bytes) {
              const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PrivKey();
              while (reader.nextField()) {
                if (reader.isEndGroup())
                  break;
                switch (reader.getFieldNumber()) {
                  case 1:
                    message.key = reader.readBytes();
                    break;
                  default:
                    reader.skipField();
                }
              }
              return message;
            }
            serializeBinary() {
              return this.serialize();
            }
            static deserializeBinary(bytes) {
              return PrivKey.deserialize(bytes);
            }
          }
          secp256k12.PrivKey = PrivKey;
        })(secp256k1 = crypto2.secp256k1 || (crypto2.secp256k1 = {}));
      })(crypto = cosmos2.crypto || (cosmos2.crypto = {}));
    })(cosmos = exports2.cosmos || (exports2.cosmos = {}));
  }
});

// node_modules/@tharsis/proto/dist/transaction/transaction.js
var require_transaction = __commonJS({
  "node_modules/@tharsis/proto/dist/transaction/transaction.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createTransaction = exports2.createTransactionWithMultipleMessages = exports2.createSigDoc = exports2.createAuthInfo = exports2.createSignerInfo = exports2.createFee = exports2.createBody = exports2.createBodyWithMultipleMessages = exports2.protoTxNamespace = exports2.LEGACY_AMINO = exports2.SIGN_DIRECT = void 0;
    var sha3_1 = require_sha3();
    var tx = __importStar(require_tx7());
    var signing = __importStar(require_signing());
    var coin = __importStar(require_coin());
    var eth = __importStar(require_keys2());
    var secp = __importStar(require_keys3());
    var utils_1 = require_utils();
    exports2.SIGN_DIRECT = signing.cosmos.tx.signing.v1beta1.SignMode.SIGN_MODE_DIRECT;
    exports2.LEGACY_AMINO = signing.cosmos.tx.signing.v1beta1.SignMode.SIGN_MODE_LEGACY_AMINO_JSON;
    var protoTxNamespace;
    (function(protoTxNamespace2) {
      protoTxNamespace2.txn = tx.cosmos.tx.v1beta1;
    })(protoTxNamespace = exports2.protoTxNamespace || (exports2.protoTxNamespace = {}));
    function createBodyWithMultipleMessages(messages, memo) {
      const content = [];
      messages.forEach((message) => {
        content.push((0, utils_1.createAnyMessage)(message));
      });
      return new tx.cosmos.tx.v1beta1.TxBody({
        messages: content,
        memo
      });
    }
    exports2.createBodyWithMultipleMessages = createBodyWithMultipleMessages;
    function createBody(message, memo) {
      return createBodyWithMultipleMessages([message], memo);
    }
    exports2.createBody = createBody;
    function createFee(fee, denom, gasLimit) {
      return new tx.cosmos.tx.v1beta1.Fee({
        amount: [
          new coin.cosmos.base.v1beta1.Coin({
            denom,
            amount: fee
          })
        ],
        gas_limit: gasLimit
      });
    }
    exports2.createFee = createFee;
    function createSignerInfo(algo, publicKey, sequence, mode) {
      let pubkey;
      if (algo === "secp256k1") {
        pubkey = {
          message: new secp.cosmos.crypto.secp256k1.PubKey({
            key: publicKey
          }),
          path: "cosmos.crypto.secp256k1.PubKey"
        };
      } else {
        pubkey = {
          message: new eth.ethermint.crypto.v1.ethsecp256k1.PubKey({
            key: publicKey
          }),
          path: "ethermint.crypto.v1.ethsecp256k1.PubKey"
        };
      }
      const signerInfo = new tx.cosmos.tx.v1beta1.SignerInfo({
        public_key: (0, utils_1.createAnyMessage)(pubkey),
        mode_info: new tx.cosmos.tx.v1beta1.ModeInfo({
          single: new tx.cosmos.tx.v1beta1.ModeInfo.Single({
            mode
          })
        }),
        sequence
      });
      return signerInfo;
    }
    exports2.createSignerInfo = createSignerInfo;
    function createAuthInfo(signerInfo, fee) {
      return new tx.cosmos.tx.v1beta1.AuthInfo({
        signer_infos: [signerInfo],
        fee
      });
    }
    exports2.createAuthInfo = createAuthInfo;
    function createSigDoc(bodyBytes, authInfoBytes, chainId, accountNumber) {
      return new tx.cosmos.tx.v1beta1.SignDoc({
        body_bytes: bodyBytes,
        auth_info_bytes: authInfoBytes,
        chain_id: chainId,
        account_number: accountNumber
      });
    }
    exports2.createSigDoc = createSigDoc;
    function createTransactionWithMultipleMessages(messages, memo, fee, denom, gasLimit, algo, pubKey, sequence, accountNumber, chainId) {
      const body = createBodyWithMultipleMessages(messages, memo);
      const feeMessage = createFee(fee, denom, gasLimit);
      const pubKeyDecoded = Buffer.from(pubKey, "base64");
      const signInfoAmino = createSignerInfo(algo, new Uint8Array(pubKeyDecoded), sequence, exports2.LEGACY_AMINO);
      const authInfoAmino = createAuthInfo(signInfoAmino, feeMessage);
      const signDocAmino = createSigDoc(body.serializeBinary(), authInfoAmino.serializeBinary(), chainId, accountNumber);
      const hashAmino = new sha3_1.Keccak(256);
      hashAmino.update(Buffer.from(signDocAmino.serializeBinary()));
      const toSignAmino = hashAmino.digest("binary");
      const signInfoDirect = createSignerInfo(algo, new Uint8Array(pubKeyDecoded), sequence, exports2.SIGN_DIRECT);
      const authInfoDirect = createAuthInfo(signInfoDirect, feeMessage);
      const signDocDirect = createSigDoc(body.serializeBinary(), authInfoDirect.serializeBinary(), chainId, accountNumber);
      const hashDirect = new sha3_1.Keccak(256);
      hashDirect.update(Buffer.from(signDocDirect.serializeBinary()));
      const toSignDirect = hashDirect.digest("binary");
      return {
        legacyAmino: {
          body,
          authInfo: authInfoAmino,
          signBytes: toSignAmino.toString("base64")
        },
        signDirect: {
          body,
          authInfo: authInfoDirect,
          signBytes: toSignDirect.toString("base64")
        }
      };
    }
    exports2.createTransactionWithMultipleMessages = createTransactionWithMultipleMessages;
    function createTransaction(message, memo, fee, denom, gasLimit, algo, pubKey, sequence, accountNumber, chainId) {
      return createTransactionWithMultipleMessages([message], memo, fee, denom, gasLimit, algo, pubKey, sequence, accountNumber, chainId);
    }
    exports2.createTransaction = createTransaction;
  }
});

// node_modules/@tharsis/proto/dist/index.js
var require_dist = __commonJS({
  "node_modules/@tharsis/proto/dist/index.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports2 && exports2.__exportStar || function(m, exports3) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports3, p))
          __createBinding(exports3, m, p);
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    __exportStar(require_msgConvertCoin(), exports2);
    __exportStar(require_msgConvertERC20(), exports2);
    __exportStar(require_ibcMsgTransfer(), exports2);
    __exportStar(require_msgEthereumTx(), exports2);
    __exportStar(require_msgSend(), exports2);
    __exportStar(require_staking2(), exports2);
    __exportStar(require_txRaw(), exports2);
    __exportStar(require_utils(), exports2);
    __exportStar(require_validator2(), exports2);
    __exportStar(require_vote(), exports2);
    __exportStar(require_web3Extension(), exports2);
    __exportStar(require_transaction(), exports2);
  }
});

// node_modules/@tharsis/eip712/dist/messages/erc20/msgConvertCoin.js
var require_msgConvertCoin2 = __commonJS({
  "node_modules/@tharsis/eip712/dist/messages/erc20/msgConvertCoin.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createMsgConvertCoin = exports2.MSG_CONVERT_COIN_TYPES = void 0;
    exports2.MSG_CONVERT_COIN_TYPES = {
      MsgValue: [
        { name: "coin", type: "TypeCoin" },
        { name: "receiver", type: "string" },
        { name: "sender", type: "string" }
      ],
      TypeCoin: [
        { name: "denom", type: "string" },
        { name: "amount", type: "string" }
      ]
    };
    function createMsgConvertCoin(denom, amount, receiver, sender) {
      return {
        type: "evmos/MsgConvertCoin",
        value: {
          coin: {
            denom,
            amount
          },
          receiver,
          sender
        }
      };
    }
    exports2.createMsgConvertCoin = createMsgConvertCoin;
  }
});

// node_modules/@tharsis/eip712/dist/messages/erc20/msgConvertERC20.js
var require_msgConvertERC202 = __commonJS({
  "node_modules/@tharsis/eip712/dist/messages/erc20/msgConvertERC20.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createMsgConvertERC20 = exports2.MSG_CONVERT_ERC20_TYPES = void 0;
    exports2.MSG_CONVERT_ERC20_TYPES = {
      MsgValue: [
        { name: "contract_address", type: "string" },
        { name: "amount", type: "string" },
        { name: "receiver", type: "string" },
        { name: "sender", type: "string" }
      ]
    };
    function createMsgConvertERC20(contractAddress, amount, receiver, sender) {
      return {
        type: "evmos/MsgConvertERC20",
        value: {
          contract_address: contractAddress,
          amount,
          receiver,
          sender
        }
      };
    }
    exports2.createMsgConvertERC20 = createMsgConvertERC20;
  }
});

// node_modules/@tharsis/eip712/dist/messages/base.js
var require_base = __commonJS({
  "node_modules/@tharsis/eip712/dist/messages/base.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.generateFee = exports2.generateTypes = exports2.generateMessage = exports2.generateMessageWithMultipleTransactions = exports2.createEIP712 = void 0;
    function createEIP712(types, chainId, message) {
      return {
        types,
        primaryType: "Tx",
        domain: {
          name: "Cosmos Web3",
          version: "1.0.0",
          chainId,
          verifyingContract: "cosmos",
          salt: "0"
        },
        message
      };
    }
    exports2.createEIP712 = createEIP712;
    function generateMessageWithMultipleTransactions(accountNumber, sequence, chainCosmosId, memo, fee, msgs) {
      return {
        account_number: accountNumber,
        chain_id: chainCosmosId,
        fee,
        memo,
        msgs,
        sequence
      };
    }
    exports2.generateMessageWithMultipleTransactions = generateMessageWithMultipleTransactions;
    function generateMessage(accountNumber, sequence, chainCosmosId, memo, fee, msg) {
      return generateMessageWithMultipleTransactions(accountNumber, sequence, chainCosmosId, memo, fee, [msg]);
    }
    exports2.generateMessage = generateMessage;
    function generateTypes(msgValues) {
      const types = {
        EIP712Domain: [
          { name: "name", type: "string" },
          { name: "version", type: "string" },
          { name: "chainId", type: "uint256" },
          { name: "verifyingContract", type: "string" },
          { name: "salt", type: "string" }
        ],
        Tx: [
          { name: "account_number", type: "string" },
          { name: "chain_id", type: "string" },
          { name: "fee", type: "Fee" },
          { name: "memo", type: "string" },
          { name: "msgs", type: "Msg[]" },
          { name: "sequence", type: "string" }
        ],
        Fee: [
          { name: "feePayer", type: "string" },
          { name: "amount", type: "Coin[]" },
          { name: "gas", type: "string" }
        ],
        Coin: [
          { name: "denom", type: "string" },
          { name: "amount", type: "string" }
        ],
        Msg: [
          { name: "type", type: "string" },
          { name: "value", type: "MsgValue" }
        ]
      };
      Object.assign(types, msgValues);
      return types;
    }
    exports2.generateTypes = generateTypes;
    function generateFee(amount, denom, gas, feePayer) {
      return {
        amount: [
          {
            amount,
            denom
          }
        ],
        gas,
        feePayer
      };
    }
    exports2.generateFee = generateFee;
  }
});

// node_modules/@tharsis/eip712/dist/messages/gov.js
var require_gov2 = __commonJS({
  "node_modules/@tharsis/eip712/dist/messages/gov.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createMsgVote = exports2.MSG_VOTE_TYPES = void 0;
    exports2.MSG_VOTE_TYPES = {
      MsgValue: [
        { name: "proposal_id", type: "uint64" },
        { name: "voter", type: "string" },
        { name: "option", type: "int32" }
      ]
    };
    function createMsgVote(proposalId, option, sender) {
      return {
        type: "cosmos-sdk/MsgVote",
        value: {
          proposal_id: proposalId,
          voter: sender,
          option
        }
      };
    }
    exports2.createMsgVote = createMsgVote;
  }
});

// node_modules/@tharsis/eip712/dist/messages/ibcMsgTransfer.js
var require_ibcMsgTransfer2 = __commonJS({
  "node_modules/@tharsis/eip712/dist/messages/ibcMsgTransfer.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createIBCMsgTransfer = exports2.IBC_MSG_TRANSFER_TYPES = void 0;
    exports2.IBC_MSG_TRANSFER_TYPES = {
      MsgValue: [
        { name: "source_port", type: "string" },
        { name: "source_channel", type: "string" },
        { name: "token", type: "TypeToken" },
        { name: "sender", type: "string" },
        { name: "receiver", type: "string" },
        { name: "timeout_height", type: "TypeTimeoutHeight" },
        { name: "timeout_timestamp", type: "uint64" }
      ],
      TypeToken: [
        { name: "denom", type: "string" },
        { name: "amount", type: "string" }
      ],
      TypeTimeoutHeight: [
        { name: "revision_number", type: "uint64" },
        { name: "revision_height", type: "uint64" }
      ]
    };
    function createIBCMsgTransfer(receiver, sender, sourceChannel, sourcePort, revisionHeight, revisionNumber, timeoutTimestamp, amount, denom) {
      return {
        type: "cosmos-sdk/MsgTransfer",
        value: {
          receiver,
          sender,
          source_channel: sourceChannel,
          source_port: sourcePort,
          timeout_height: {
            revision_height: revisionHeight.toString(),
            revision_number: revisionNumber.toString()
          },
          timeout_timestamp: timeoutTimestamp,
          token: {
            amount,
            denom
          }
        }
      };
    }
    exports2.createIBCMsgTransfer = createIBCMsgTransfer;
  }
});

// node_modules/@tharsis/eip712/dist/messages/msgsend.js
var require_msgsend = __commonJS({
  "node_modules/@tharsis/eip712/dist/messages/msgsend.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createMsgSend = exports2.MSG_SEND_TYPES = void 0;
    exports2.MSG_SEND_TYPES = {
      MsgValue: [
        { name: "from_address", type: "string" },
        { name: "to_address", type: "string" },
        { name: "amount", type: "TypeAmount[]" }
      ],
      TypeAmount: [
        { name: "denom", type: "string" },
        { name: "amount", type: "string" }
      ]
    };
    function createMsgSend(amount, denom, fromAddress, toAddress) {
      return {
        type: "cosmos-sdk/MsgSend",
        value: {
          amount: [
            {
              amount,
              denom
            }
          ],
          from_address: fromAddress,
          to_address: toAddress
        }
      };
    }
    exports2.createMsgSend = createMsgSend;
  }
});

// node_modules/@tharsis/eip712/dist/messages/staking.js
var require_staking3 = __commonJS({
  "node_modules/@tharsis/eip712/dist/messages/staking.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createMsgWithdrawValidatorCommission = exports2.MSG_WITHDRAW_VALIDATOR_COMMISSION_TYPES = exports2.createMsgWithdrawDelegatorReward = exports2.MSG_WITHDRAW_DELEGATOR_REWARD_TYPES = exports2.createMsgUndelegate = exports2.MSG_UNDELEGATE_TYPES = exports2.createMsgBeginRedelegate = exports2.MSG_BEGIN_REDELEGATE_TYPES = exports2.createMsgDelegate = exports2.MSG_DELEGATE_TYPES = void 0;
    exports2.MSG_DELEGATE_TYPES = {
      MsgValue: [
        { name: "delegator_address", type: "string" },
        { name: "validator_address", type: "string" },
        { name: "amount", type: "TypeAmount" }
      ],
      TypeAmount: [
        { name: "denom", type: "string" },
        { name: "amount", type: "string" }
      ]
    };
    function createMsgDelegate(delegatorAddress, validatorAddress, amount, denom) {
      return {
        type: "cosmos-sdk/MsgDelegate",
        value: {
          amount: {
            amount,
            denom
          },
          delegator_address: delegatorAddress,
          validator_address: validatorAddress
        }
      };
    }
    exports2.createMsgDelegate = createMsgDelegate;
    exports2.MSG_BEGIN_REDELEGATE_TYPES = {
      MsgValue: [
        { name: "delegator_address", type: "string" },
        { name: "validator_src_address", type: "string" },
        { name: "validator_dst_address", type: "string" },
        { name: "amount", type: "TypeAmount" }
      ],
      TypeAmount: [
        { name: "denom", type: "string" },
        { name: "amount", type: "string" }
      ]
    };
    function createMsgBeginRedelegate(delegatorAddress, validatorSrcAddress, validatorDstAddress, amount, denom) {
      return {
        type: "cosmos-sdk/MsgBeginRedelegate",
        value: {
          amount: {
            amount,
            denom
          },
          delegator_address: delegatorAddress,
          validator_src_address: validatorSrcAddress,
          validator_dst_address: validatorDstAddress
        }
      };
    }
    exports2.createMsgBeginRedelegate = createMsgBeginRedelegate;
    exports2.MSG_UNDELEGATE_TYPES = {
      MsgValue: [
        { name: "delegator_address", type: "string" },
        { name: "validator_address", type: "string" },
        { name: "amount", type: "TypeAmount" }
      ],
      TypeAmount: [
        { name: "denom", type: "string" },
        { name: "amount", type: "string" }
      ]
    };
    function createMsgUndelegate(delegatorAddress, validatorAddress, amount, denom) {
      return {
        type: "cosmos-sdk/MsgUndelegate",
        value: {
          amount: {
            amount,
            denom
          },
          delegator_address: delegatorAddress,
          validator_address: validatorAddress
        }
      };
    }
    exports2.createMsgUndelegate = createMsgUndelegate;
    exports2.MSG_WITHDRAW_DELEGATOR_REWARD_TYPES = {
      MsgValue: [
        { name: "delegator_address", type: "string" },
        { name: "validator_address", type: "string" }
      ]
    };
    function createMsgWithdrawDelegatorReward(delegatorAddress, validatorAddress) {
      return {
        type: "cosmos-sdk/MsgWithdrawDelegationReward",
        value: {
          delegator_address: delegatorAddress,
          validator_address: validatorAddress
        }
      };
    }
    exports2.createMsgWithdrawDelegatorReward = createMsgWithdrawDelegatorReward;
    exports2.MSG_WITHDRAW_VALIDATOR_COMMISSION_TYPES = {
      MsgValue: [{ name: "validator_address", type: "string" }]
    };
    function createMsgWithdrawValidatorCommission(validatorAddress) {
      return {
        type: "cosmos-sdk/MsgWithdrawValidatorCommission",
        value: {
          validator_address: validatorAddress
        }
      };
    }
    exports2.createMsgWithdrawValidatorCommission = createMsgWithdrawValidatorCommission;
  }
});

// node_modules/@tharsis/eip712/dist/messages/validator.js
var require_validator3 = __commonJS({
  "node_modules/@tharsis/eip712/dist/messages/validator.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createMsgEditValidator = exports2.MSG_EDIT_VALIDATOR_TYPES = void 0;
    var NOT_MODIFY = "[do-not-modify]";
    exports2.MSG_EDIT_VALIDATOR_TYPES = {
      TypeDescription: [
        { name: "moniker", type: "string" },
        { name: "identity", type: "string" },
        { name: "website", type: "string" },
        { name: "security_contact", type: "string" },
        { name: "details", type: "string" }
      ],
      MsgValue: [
        { name: "description", type: "TypeDescription" },
        { name: "validator_address", type: "string" },
        { name: "commission_rate", type: "string" },
        { name: "min_self_delegation", type: "string" }
      ]
    };
    function createMsgEditValidator(moniker, identity, website, securityContact, details, validatorAddress, commissionRate, minSelfDelegation) {
      return {
        type: "cosmos-sdk/MsgEditValidator",
        value: {
          description: {
            moniker: moniker || NOT_MODIFY,
            identity: identity || NOT_MODIFY,
            website: website || NOT_MODIFY,
            security_contact: securityContact || NOT_MODIFY,
            details: details || NOT_MODIFY
          },
          validator_address: validatorAddress,
          commission_rate: commissionRate || "<nil>",
          min_self_delegation: minSelfDelegation || "<nil>"
        }
      };
    }
    exports2.createMsgEditValidator = createMsgEditValidator;
  }
});

// node_modules/@tharsis/eip712/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/@tharsis/eip712/dist/index.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports2 && exports2.__exportStar || function(m, exports3) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports3, p))
          __createBinding(exports3, m, p);
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    __exportStar(require_msgConvertCoin2(), exports2);
    __exportStar(require_msgConvertERC202(), exports2);
    __exportStar(require_base(), exports2);
    __exportStar(require_gov2(), exports2);
    __exportStar(require_ibcMsgTransfer2(), exports2);
    __exportStar(require_msgsend(), exports2);
    __exportStar(require_staking3(), exports2);
    __exportStar(require_validator3(), exports2);
  }
});

// node_modules/@tharsis/transactions/dist/messages/erc20/msgConvertCoin.js
var require_msgConvertCoin3 = __commonJS({
  "node_modules/@tharsis/transactions/dist/messages/erc20/msgConvertCoin.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createTxMsgConvertCoin = void 0;
    var proto_1 = require_dist();
    var eip712_1 = require_dist2();
    function createTxMsgConvertCoin(chain, sender, fee, memo, params) {
      const feeObject = (0, eip712_1.generateFee)(fee.amount, fee.denom, fee.gas, sender.accountAddress);
      const types = (0, eip712_1.generateTypes)(eip712_1.MSG_CONVERT_COIN_TYPES);
      const msg = (0, eip712_1.createMsgConvertCoin)(params.denom, params.amount, params.receiverHexFormatted, params.senderEvmosFormatted);
      const messages = (0, eip712_1.generateMessage)(sender.accountNumber.toString(), sender.sequence.toString(), chain.cosmosChainId, memo, feeObject, msg);
      const eipToSign = (0, eip712_1.createEIP712)(types, chain.chainId, messages);
      const msgCosmos = (0, proto_1.createMsgConvertCoin)(params.denom, params.amount, params.receiverHexFormatted, params.senderEvmosFormatted);
      const tx = (0, proto_1.createTransaction)(msgCosmos, memo, fee.amount, fee.denom, parseInt(fee.gas, 10), "ethsecp256", sender.pubkey, sender.sequence, sender.accountNumber, chain.cosmosChainId);
      return {
        signDirect: tx.signDirect,
        legacyAmino: tx.legacyAmino,
        eipToSign
      };
    }
    exports2.createTxMsgConvertCoin = createTxMsgConvertCoin;
  }
});

// node_modules/@tharsis/transactions/dist/messages/erc20/msgConvertERC20.js
var require_msgConvertERC203 = __commonJS({
  "node_modules/@tharsis/transactions/dist/messages/erc20/msgConvertERC20.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createTxMsgConvertERC20 = void 0;
    var proto_1 = require_dist();
    var eip712_1 = require_dist2();
    function createTxMsgConvertERC20(chain, sender, fee, memo, params) {
      const feeObject = (0, eip712_1.generateFee)(fee.amount, fee.denom, fee.gas, sender.accountAddress);
      const types = (0, eip712_1.generateTypes)(eip712_1.MSG_CONVERT_ERC20_TYPES);
      const msg = (0, eip712_1.createMsgConvertERC20)(params.contract_address, params.amount, params.receiverEvmosFormatted, params.senderHexFormatted);
      const messages = (0, eip712_1.generateMessage)(sender.accountNumber.toString(), sender.sequence.toString(), chain.cosmosChainId, memo, feeObject, msg);
      const eipToSign = (0, eip712_1.createEIP712)(types, chain.chainId, messages);
      const msgCosmos = (0, proto_1.createMsgConvertERC20)(params.contract_address, params.amount, params.receiverEvmosFormatted, params.senderHexFormatted);
      const tx = (0, proto_1.createTransaction)(msgCosmos, memo, fee.amount, fee.denom, parseInt(fee.gas, 10), "ethsecp256", sender.pubkey, sender.sequence, sender.accountNumber, chain.cosmosChainId);
      return {
        signDirect: tx.signDirect,
        legacyAmino: tx.legacyAmino,
        eipToSign
      };
    }
    exports2.createTxMsgConvertERC20 = createTxMsgConvertERC20;
  }
});

// node_modules/@tharsis/transactions/dist/messages/common.js
var require_common = __commonJS({
  "node_modules/@tharsis/transactions/dist/messages/common.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
  }
});

// node_modules/@tharsis/transactions/dist/messages/gov.js
var require_gov3 = __commonJS({
  "node_modules/@tharsis/transactions/dist/messages/gov.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createTxMsgVote = void 0;
    var proto_1 = require_dist();
    var eip712_1 = require_dist2();
    function createTxMsgVote(chain, sender, fee, memo, params) {
      const feeObject = (0, eip712_1.generateFee)(fee.amount, fee.denom, fee.gas, sender.accountAddress);
      const types = (0, eip712_1.generateTypes)(eip712_1.MSG_VOTE_TYPES);
      const msg = (0, eip712_1.createMsgVote)(params.proposalId, params.option, sender.accountAddress);
      const messages = (0, eip712_1.generateMessage)(sender.accountNumber.toString(), sender.sequence.toString(), chain.cosmosChainId, memo, feeObject, msg);
      const eipToSign = (0, eip712_1.createEIP712)(types, chain.chainId, messages);
      const msgCosmos = (0, proto_1.createMsgVote)(params.proposalId, params.option, sender.accountAddress);
      const tx = (0, proto_1.createTransaction)(msgCosmos, memo, fee.amount, fee.denom, parseInt(fee.gas, 10), "ethsecp256", sender.pubkey, sender.sequence, sender.accountNumber, chain.cosmosChainId);
      return {
        signDirect: tx.signDirect,
        legacyAmino: tx.legacyAmino,
        eipToSign
      };
    }
    exports2.createTxMsgVote = createTxMsgVote;
  }
});

// node_modules/@tharsis/transactions/dist/messages/ibcMsgTransfer.js
var require_ibcMsgTransfer3 = __commonJS({
  "node_modules/@tharsis/transactions/dist/messages/ibcMsgTransfer.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createTxIBCMsgTransfer = void 0;
    var proto_1 = require_dist();
    var eip712_1 = require_dist2();
    function createTxIBCMsgTransfer(chain, sender, fee, memo, params) {
      const feeObject = (0, eip712_1.generateFee)(fee.amount, fee.denom, fee.gas, sender.accountAddress);
      const types = (0, eip712_1.generateTypes)(eip712_1.IBC_MSG_TRANSFER_TYPES);
      const msg = (0, eip712_1.createIBCMsgTransfer)(params.receiver, sender.accountAddress, params.sourceChannel, params.sourcePort, params.revisionHeight, params.revisionNumber, params.timeoutTimestamp, params.amount, params.denom);
      const messages = (0, eip712_1.generateMessage)(sender.accountNumber.toString(), sender.sequence.toString(), chain.cosmosChainId, memo, feeObject, msg);
      const eipToSign = (0, eip712_1.createEIP712)(types, chain.chainId, messages);
      const msgCosmos = (0, proto_1.createIBCMsgTransfer)(params.sourcePort, params.sourceChannel, params.amount, params.denom, sender.accountAddress, params.receiver, params.revisionNumber, params.revisionHeight, params.timeoutTimestamp);
      const tx = (0, proto_1.createTransaction)(msgCosmos, memo, fee.amount, fee.denom, parseInt(fee.gas, 10), "ethsecp256", sender.pubkey, sender.sequence, sender.accountNumber, chain.cosmosChainId);
      return {
        signDirect: tx.signDirect,
        legacyAmino: tx.legacyAmino,
        eipToSign
      };
    }
    exports2.createTxIBCMsgTransfer = createTxIBCMsgTransfer;
  }
});

// node_modules/@tharsis/transactions/dist/messages/msgSend.js
var require_msgSend2 = __commonJS({
  "node_modules/@tharsis/transactions/dist/messages/msgSend.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createMessageSend = void 0;
    var proto_1 = require_dist();
    var eip712_1 = require_dist2();
    function createMessageSend(chain, sender, fee, memo, params) {
      const feeObject = (0, eip712_1.generateFee)(fee.amount, fee.denom, fee.gas, sender.accountAddress);
      const types = (0, eip712_1.generateTypes)(eip712_1.MSG_SEND_TYPES);
      const msg = (0, eip712_1.createMsgSend)(params.amount, params.denom, sender.accountAddress, params.destinationAddress);
      const messages = (0, eip712_1.generateMessage)(sender.accountNumber.toString(), sender.sequence.toString(), chain.cosmosChainId, memo, feeObject, msg);
      const eipToSign = (0, eip712_1.createEIP712)(types, chain.chainId, messages);
      const msgSend = (0, proto_1.createMsgSend)(sender.accountAddress, params.destinationAddress, params.amount, params.denom);
      const tx = (0, proto_1.createTransaction)(msgSend, memo, fee.amount, fee.denom, parseInt(fee.gas, 10), "ethsecp256", sender.pubkey, sender.sequence, sender.accountNumber, chain.cosmosChainId);
      return {
        signDirect: tx.signDirect,
        legacyAmino: tx.legacyAmino,
        eipToSign
      };
    }
    exports2.createMessageSend = createMessageSend;
  }
});

// node_modules/@tharsis/transactions/dist/messages/staking.js
var require_staking4 = __commonJS({
  "node_modules/@tharsis/transactions/dist/messages/staking.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createTxMsgWithdrawValidatorCommission = exports2.createTxMsgMultipleWithdrawDelegatorReward = exports2.createTxMsgWithdrawDelegatorReward = exports2.createTxMsgUndelegate = exports2.createTxMsgBeginRedelegate = exports2.createTxMsgDelegate = void 0;
    var proto_1 = require_dist();
    var eip712_1 = require_dist2();
    function createTxMsgDelegate(chain, sender, fee, memo, params) {
      const feeObject = (0, eip712_1.generateFee)(fee.amount, fee.denom, fee.gas, sender.accountAddress);
      const types = (0, eip712_1.generateTypes)(eip712_1.MSG_DELEGATE_TYPES);
      const msg = (0, eip712_1.createMsgDelegate)(sender.accountAddress, params.validatorAddress, params.amount, params.denom);
      const messages = (0, eip712_1.generateMessage)(sender.accountNumber.toString(), sender.sequence.toString(), chain.cosmosChainId, memo, feeObject, msg);
      const eipToSign = (0, eip712_1.createEIP712)(types, chain.chainId, messages);
      const protoMessage = (0, proto_1.createMsgDelegate)(sender.accountAddress, params.validatorAddress, params.amount, params.denom);
      const tx = (0, proto_1.createTransaction)(protoMessage, memo, fee.amount, fee.denom, parseInt(fee.gas, 10), "ethsecp256", sender.pubkey, sender.sequence, sender.accountNumber, chain.cosmosChainId);
      return {
        signDirect: tx.signDirect,
        legacyAmino: tx.legacyAmino,
        eipToSign
      };
    }
    exports2.createTxMsgDelegate = createTxMsgDelegate;
    function createTxMsgBeginRedelegate(chain, sender, fee, memo, params) {
      const feeObject = (0, eip712_1.generateFee)(fee.amount, fee.denom, fee.gas, sender.accountAddress);
      const types = (0, eip712_1.generateTypes)(eip712_1.MSG_BEGIN_REDELEGATE_TYPES);
      const msg = (0, eip712_1.createMsgBeginRedelegate)(sender.accountAddress, params.validatorSrcAddress, params.validatorDstAddress, params.amount, params.denom);
      const messages = (0, eip712_1.generateMessage)(sender.accountNumber.toString(), sender.sequence.toString(), chain.cosmosChainId, memo, feeObject, msg);
      const eipToSign = (0, eip712_1.createEIP712)(types, chain.chainId, messages);
      const protoMessage = (0, proto_1.createMsgBeginRedelegate)(sender.accountAddress, params.validatorSrcAddress, params.validatorDstAddress, params.amount, params.denom);
      const tx = (0, proto_1.createTransaction)(protoMessage, memo, fee.amount, fee.denom, parseInt(fee.gas, 10), "ethsecp256", sender.pubkey, sender.sequence, sender.accountNumber, chain.cosmosChainId);
      return {
        signDirect: tx.signDirect,
        legacyAmino: tx.legacyAmino,
        eipToSign
      };
    }
    exports2.createTxMsgBeginRedelegate = createTxMsgBeginRedelegate;
    function createTxMsgUndelegate(chain, sender, fee, memo, params) {
      const feeObject = (0, eip712_1.generateFee)(fee.amount, fee.denom, fee.gas, sender.accountAddress);
      const types = (0, eip712_1.generateTypes)(eip712_1.MSG_UNDELEGATE_TYPES);
      const msg = (0, eip712_1.createMsgUndelegate)(sender.accountAddress, params.validatorAddress, params.amount, params.denom);
      const messages = (0, eip712_1.generateMessage)(sender.accountNumber.toString(), sender.sequence.toString(), chain.cosmosChainId, memo, feeObject, msg);
      const eipToSign = (0, eip712_1.createEIP712)(types, chain.chainId, messages);
      const protoMessage = (0, proto_1.createMsgUndelegate)(sender.accountAddress, params.validatorAddress, params.amount, params.denom);
      const tx = (0, proto_1.createTransaction)(protoMessage, memo, fee.amount, fee.denom, parseInt(fee.gas, 10), "ethsecp256", sender.pubkey, sender.sequence, sender.accountNumber, chain.cosmosChainId);
      return {
        signDirect: tx.signDirect,
        legacyAmino: tx.legacyAmino,
        eipToSign
      };
    }
    exports2.createTxMsgUndelegate = createTxMsgUndelegate;
    function createTxMsgWithdrawDelegatorReward(chain, sender, fee, memo, params) {
      const feeObject = (0, eip712_1.generateFee)(fee.amount, fee.denom, fee.gas, sender.accountAddress);
      const types = (0, eip712_1.generateTypes)(eip712_1.MSG_WITHDRAW_DELEGATOR_REWARD_TYPES);
      const msg = (0, eip712_1.createMsgWithdrawDelegatorReward)(sender.accountAddress, params.validatorAddress);
      const messages = (0, eip712_1.generateMessage)(sender.accountNumber.toString(), sender.sequence.toString(), chain.cosmosChainId, memo, feeObject, msg);
      const eipToSign = (0, eip712_1.createEIP712)(types, chain.chainId, messages);
      const protoMessage = (0, proto_1.createMsgWithdrawDelegatorReward)(sender.accountAddress, params.validatorAddress);
      const tx = (0, proto_1.createTransaction)(protoMessage, memo, fee.amount, fee.denom, parseInt(fee.gas, 10), "ethsecp256", sender.pubkey, sender.sequence, sender.accountNumber, chain.cosmosChainId);
      return {
        signDirect: tx.signDirect,
        legacyAmino: tx.legacyAmino,
        eipToSign
      };
    }
    exports2.createTxMsgWithdrawDelegatorReward = createTxMsgWithdrawDelegatorReward;
    function createTxMsgMultipleWithdrawDelegatorReward(chain, sender, fee, memo, params) {
      const feeObject = (0, eip712_1.generateFee)(fee.amount, fee.denom, fee.gas, sender.accountAddress);
      const types = (0, eip712_1.generateTypes)(eip712_1.MSG_WITHDRAW_DELEGATOR_REWARD_TYPES);
      const msgs = [];
      const protoMsgs = [];
      params.validatorAddresses.forEach((validator) => {
        msgs.push((0, eip712_1.createMsgWithdrawDelegatorReward)(sender.accountAddress, validator));
        protoMsgs.push((0, proto_1.createMsgWithdrawDelegatorReward)(sender.accountAddress, validator));
      });
      const messages = (0, eip712_1.generateMessageWithMultipleTransactions)(sender.accountNumber.toString(), sender.sequence.toString(), chain.cosmosChainId, memo, feeObject, msgs);
      const eipToSign = (0, eip712_1.createEIP712)(types, chain.chainId, messages);
      const tx = (0, proto_1.createTransactionWithMultipleMessages)(protoMsgs, memo, fee.amount, fee.denom, parseInt(fee.gas, 10), "ethsecp256", sender.pubkey, sender.sequence, sender.accountNumber, chain.cosmosChainId);
      return {
        signDirect: tx.signDirect,
        legacyAmino: tx.legacyAmino,
        eipToSign
      };
    }
    exports2.createTxMsgMultipleWithdrawDelegatorReward = createTxMsgMultipleWithdrawDelegatorReward;
    function createTxMsgWithdrawValidatorCommission(chain, sender, fee, memo, params) {
      const feeObject = (0, eip712_1.generateFee)(fee.amount, fee.denom, fee.gas, sender.accountAddress);
      const types = (0, eip712_1.generateTypes)(eip712_1.MSG_WITHDRAW_VALIDATOR_COMMISSION_TYPES);
      const msg = (0, eip712_1.createMsgWithdrawValidatorCommission)(params.validatorAddress);
      const messages = (0, eip712_1.generateMessage)(sender.accountNumber.toString(), sender.sequence.toString(), chain.cosmosChainId, memo, feeObject, msg);
      const eipToSign = (0, eip712_1.createEIP712)(types, chain.chainId, messages);
      const protoMessage = (0, proto_1.createMsgWithdrawValidatorCommission)(params.validatorAddress);
      const tx = (0, proto_1.createTransaction)(protoMessage, memo, fee.amount, fee.denom, parseInt(fee.gas, 10), "ethsecp256", sender.pubkey, sender.sequence, sender.accountNumber, chain.cosmosChainId);
      return {
        signDirect: tx.signDirect,
        legacyAmino: tx.legacyAmino,
        eipToSign
      };
    }
    exports2.createTxMsgWithdrawValidatorCommission = createTxMsgWithdrawValidatorCommission;
  }
});

// node_modules/@tharsis/transactions/dist/messages/txRaw.js
var require_txRaw2 = __commonJS({
  "node_modules/@tharsis/transactions/dist/messages/txRaw.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createTxRawEIP712 = void 0;
    var proto_1 = require_dist();
    function createTxRawEIP712(body, authInfo, extension) {
      body.extension_options.push((0, proto_1.createAnyMessage)(extension));
      return (0, proto_1.createTxRaw)(body.serializeBinary(), authInfo.serializeBinary(), [
        new Uint8Array()
      ]);
    }
    exports2.createTxRawEIP712 = createTxRawEIP712;
  }
});

// node_modules/@tharsis/transactions/dist/messages/validator.js
var require_validator4 = __commonJS({
  "node_modules/@tharsis/transactions/dist/messages/validator.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.createTxMsgEditValidator = void 0;
    var proto_1 = require_dist();
    var eip712_1 = require_dist2();
    function createTxMsgEditValidator(chain, sender, fee, memo, params) {
      const feeObject = (0, eip712_1.generateFee)(fee.amount, fee.denom, fee.gas, sender.accountAddress);
      const types = (0, eip712_1.generateTypes)(eip712_1.MSG_EDIT_VALIDATOR_TYPES);
      const msg = (0, eip712_1.createMsgEditValidator)(params.moniker, params.identity, params.website, params.securityContact, params.details, params.validatorAddress, params.commissionRate, params.minSelfDelegation);
      const messages = (0, eip712_1.generateMessage)(sender.accountNumber.toString(), sender.sequence.toString(), chain.cosmosChainId, memo, feeObject, msg);
      const eipToSign = (0, eip712_1.createEIP712)(types, chain.chainId, messages);
      const protoMessage = (0, proto_1.createMsgEditValidator)(params.moniker, params.identity, params.website, params.securityContact, params.details, params.validatorAddress, params.commissionRate, params.minSelfDelegation);
      const tx = (0, proto_1.createTransaction)(protoMessage, memo, fee.amount, fee.denom, parseInt(fee.gas, 10), "ethsecp256", sender.pubkey, sender.sequence, sender.accountNumber, chain.cosmosChainId);
      return {
        signDirect: tx.signDirect,
        legacyAmino: tx.legacyAmino,
        eipToSign
      };
    }
    exports2.createTxMsgEditValidator = createTxMsgEditValidator;
  }
});

// node_modules/@tharsis/transactions/dist/messages/web3Extension.js
var require_web3Extension2 = __commonJS({
  "node_modules/@tharsis/transactions/dist/messages/web3Extension.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.signatureToWeb3Extension = void 0;
    var proto_1 = require_dist();
    function signatureToWeb3Extension(chain, sender, hexFormattedSignature) {
      let signature = hexFormattedSignature;
      const temp = hexFormattedSignature.split("0x");
      if (temp.length === 2) {
        ;
        [, signature] = temp;
      }
      return (0, proto_1.createWeb3Extension)(chain.chainId, sender.accountAddress, Uint8Array.from(Buffer.from(signature, "hex")));
    }
    exports2.signatureToWeb3Extension = signatureToWeb3Extension;
  }
});

// node_modules/@tharsis/transactions/dist/index.js
var require_dist3 = __commonJS({
  "node_modules/@tharsis/transactions/dist/index.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports2 && exports2.__exportStar || function(m, exports3) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports3, p))
          __createBinding(exports3, m, p);
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    __exportStar(require_msgConvertCoin3(), exports2);
    __exportStar(require_msgConvertERC203(), exports2);
    __exportStar(require_common(), exports2);
    __exportStar(require_gov3(), exports2);
    __exportStar(require_ibcMsgTransfer3(), exports2);
    __exportStar(require_msgSend2(), exports2);
    __exportStar(require_staking4(), exports2);
    __exportStar(require_txRaw2(), exports2);
    __exportStar(require_validator4(), exports2);
    __exportStar(require_web3Extension2(), exports2);
  }
});

// dep:@tharsis_transactions
var tharsis_transactions_default = require_dist3();
export {
  tharsis_transactions_default as default
};
//# sourceMappingURL=@tharsis_transactions.js.map
